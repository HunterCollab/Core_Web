{"version":3,"sources":["webpack:///./src/app/home/collab-card/collab-card.component.css","webpack:///./src/app/home/collab-card/collab-card.component.html","webpack:///./src/app/home/collab-card/collab-card.component.ts","webpack:///./src/app/home/collab-list/home.component.css","webpack:///./src/app/home/collab-list/home.component.html","webpack:///./src/app/home/collab-list/home.component.ts","webpack:///./src/app/home/collab-table/collab-table.component.css","webpack:///./src/app/home/collab-table/collab-table.component.html","webpack:///./src/app/home/collab-table/collab-table.component.ts","webpack:///./src/app/home/create-collab/create-collab.component.css","webpack:///./src/app/home/create-collab/create-collab.component.html","webpack:///./src/app/home/create-collab/create-collab.component.ts","webpack:///./src/app/home/edit-collab/edit-collab.component.css","webpack:///./src/app/home/edit-collab/edit-collab.component.html","webpack:///./src/app/home/edit-collab/edit-collab.component.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/shared/models/collab.model.ts","webpack:///./src/app/shared/models/tableBuilder.model.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["module.exports = \".mat-card {\\r\\n    max-width: 800px;\\r\\n    margin: auto;\\r\\n    padding: 0px;\\r\\n    height: 100%;\\r\\n    background: rgba(214, 212, 212, 0.048);\\r\\n    border: .4px solid rgb(59, 59, 59);\\r\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n.mat-card-header {\\r\\n   \\r\\n    font-weight: bold;\\r\\n    display: inline;\\r\\n    \\r\\n}\\r\\n\\r\\n.mat-card-title  {\\r\\n    margin-left: -16.5px;\\r\\n    margin-right: -16px;\\r\\n    margin-top: -.5px;\\r\\n    color: rgba(0, 0, 0, 0.836);\\r\\n    background: rgba(34, 34, 34, 0.13);\\r\\n    padding: 5px;\\r\\n}\\r\\n\\r\\n.mat-card-content {\\r\\n    margin: 0px;\\r\\n}\\r\\n\\r\\n.mat-card>.mat-card-actions:last-child {\\r\\n    margin-bottom: 5px;\\r\\n   \\r\\n}\\r\\n\\r\\n.mat-card-actions .mat-button, .mat-card-actions .mat-raised-button{\\r\\n    margin: 0px;\\r\\n    margin-left: 22px;\\r\\n}\\r\\n\\r\\n.mat-expansion-panel {\\r\\n    background: rgba(255, 254, 254, 0.151);\\r\\n}\\r\\n\\r\\n.requirements {\\r\\n    margin-left: 30px;\\r\\n    margin-right: 30px;\\r\\n    \\r\\n}\\r\\n\\r\\n.content .description{\\r\\n    font-size: 20px;\\r\\n    margin-left: 30px;\\r\\n    margin-right: 30px;\\r\\n}\\r\\n\\r\\n.content .date,.location,.duration{\\r\\n    margin-left: 40px;\\r\\n    margin-right: 40px;\\r\\n}\\r\\n\\r\\n.table{\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    overflow-x:  auto;\\r\\n    overflow-y:  auto;\\r\\n}\\r\\n\\r\\n.mat-card {\\r\\n    font-family: Georgia, 'Times New Roman', Times, serif;\\r\\n}\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItY2FyZC9jb2xsYWItY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtJQUNaLHNDQUFzQztJQUN0QyxrQ0FBa0M7SUFDbEMseUVBQXlFO0FBQzdFOztBQUVBOztJQUVJLGlCQUFpQjtJQUNqQixlQUFlOztBQUVuQjs7QUFFQTtJQUNJLG9CQUFvQjtJQUNwQixtQkFBbUI7SUFDbkIsaUJBQWlCO0lBQ2pCLDJCQUEyQjtJQUMzQixrQ0FBa0M7SUFDbEMsWUFBWTtBQUNoQjs7QUFFQTtJQUNJLFdBQVc7QUFDZjs7QUFFQTtJQUNJLGtCQUFrQjs7QUFFdEI7O0FBQ0E7SUFDSSxXQUFXO0lBQ1gsaUJBQWlCO0FBQ3JCOztBQUNBO0lBQ0ksc0NBQXNDO0FBQzFDOztBQUVBO0lBQ0ksaUJBQWlCO0lBQ2pCLGtCQUFrQjs7QUFFdEI7O0FBSUE7SUFDSSxlQUFlO0lBQ2YsaUJBQWlCO0lBQ2pCLGtCQUFrQjtBQUN0Qjs7QUFFQTtJQUNJLGlCQUFpQjtJQUNqQixrQkFBa0I7QUFDdEI7O0FBR0E7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixpQkFBaUI7QUFDckI7O0FBRUE7SUFDSSxxREFBcUQ7QUFDekQiLCJmaWxlIjoic3JjL2FwcC9ob21lL2NvbGxhYi1jYXJkL2NvbGxhYi1jYXJkLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWNhcmQge1xyXG4gICAgbWF4LXdpZHRoOiA4MDBweDtcclxuICAgIG1hcmdpbjogYXV0bztcclxuICAgIHBhZGRpbmc6IDBweDtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjE0LCAyMTIsIDIxMiwgMC4wNDgpO1xyXG4gICAgYm9yZGVyOiAuNHB4IHNvbGlkIHJnYig1OSwgNTksIDU5KTtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwwLDAsMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcbn1cclxuXHJcbi5tYXQtY2FyZC1oZWFkZXIge1xyXG4gICBcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgZGlzcGxheTogaW5saW5lO1xyXG4gICAgXHJcbn1cclxuXHJcbi5tYXQtY2FyZC10aXRsZSAge1xyXG4gICAgbWFyZ2luLWxlZnQ6IC0xNi41cHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IC0xNnB4O1xyXG4gICAgbWFyZ2luLXRvcDogLS41cHg7XHJcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAwLjgzNik7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDM0LCAzNCwgMzQsIDAuMTMpO1xyXG4gICAgcGFkZGluZzogNXB4O1xyXG59XHJcblxyXG4ubWF0LWNhcmQtY29udGVudCB7XHJcbiAgICBtYXJnaW46IDBweDtcclxufVxyXG5cclxuLm1hdC1jYXJkPi5tYXQtY2FyZC1hY3Rpb25zOmxhc3QtY2hpbGQge1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xyXG4gICBcclxufVxyXG4ubWF0LWNhcmQtYWN0aW9ucyAubWF0LWJ1dHRvbiwgLm1hdC1jYXJkLWFjdGlvbnMgLm1hdC1yYWlzZWQtYnV0dG9ue1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICBtYXJnaW4tbGVmdDogMjJweDtcclxufVxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbCB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDI1NSwgMjU0LCAyNTQsIDAuMTUxKTtcclxufVxyXG5cclxuLnJlcXVpcmVtZW50cyB7XHJcbiAgICBtYXJnaW4tbGVmdDogMzBweDtcclxuICAgIG1hcmdpbi1yaWdodDogMzBweDtcclxuICAgIFxyXG59XHJcblxyXG5cclxuXHJcbi5jb250ZW50IC5kZXNjcmlwdGlvbntcclxuICAgIGZvbnQtc2l6ZTogMjBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAzMHB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAzMHB4O1xyXG59XHJcblxyXG4uY29udGVudCAuZGF0ZSwubG9jYXRpb24sLmR1cmF0aW9ue1xyXG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDQwcHg7XHJcbn1cclxuXHJcblxyXG4udGFibGV7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG92ZXJmbG93LXg6ICBhdXRvO1xyXG4gICAgb3ZlcmZsb3cteTogIGF1dG87XHJcbn1cclxuXHJcbi5tYXQtY2FyZCB7XHJcbiAgICBmb250LWZhbWlseTogR2VvcmdpYSwgJ1RpbWVzIE5ldyBSb21hbicsIFRpbWVzLCBzZXJpZjtcclxufVxyXG5cclxuXHJcblxyXG5cclxuIl19 */\"","module.exports = \"<mat-card>\\r\\n  <mat-card-header >\\r\\n\\r\\n    <mat-card-title> \\r\\n\\r\\n      <mat-grid-list  cols=\\\"2\\\" rowHeight=\\\"4:1\\\">\\r\\n        <mat-grid-tile>{{collabData?.title}}</mat-grid-tile>\\r\\n        <mat-grid-tile><mat-icon>group</mat-icon> : {{collabData?.members.length}} / {{ collabData?.size}}</mat-grid-tile>\\r\\n      </mat-grid-list>\\r\\n      \\r\\n    </mat-card-title>\\r\\n\\r\\n  </mat-card-header>\\r\\n  <mat-card-content>\\r\\n    <mat-accordion>\\r\\n        <div class = \\\"content\\\">\\r\\n            <p class=\\\"description\\\">Description: {{ collabData?.description }} </p>\\r\\n            <p class=\\\"date\\\">Date: {{ collabData?.date | date:'medium' }}</p>\\r\\n            <p class=\\\"duration\\\">Apply By: {{ collabData?.duration | date:'medium' }}</p>\\r\\n            <p class=\\\"location\\\">Location: {{ collabData?.location }}</p>\\r\\n\\r\\n            <div class = \\\"requirements\\\">\\r\\n                <mat-chip-list>\\r\\n                    Classes: \\r\\n                    <mat-chip *ngFor = \\\"let class of collabData?.classes\\\">\\r\\n                      {{ class }}\\r\\n                    </mat-chip>\\r\\n                </mat-chip-list>\\r\\n                <br>\\r\\n                <mat-chip-list>\\r\\n                    Skills: \\r\\n                    <mat-chip *ngFor=\\\"let skill of collabData?.skills\\\">\\r\\n                      {{ skill }}\\r\\n                    </mat-chip>\\r\\n                </mat-chip-list>\\r\\n            </div>\\r\\n      \\r\\n        </div>\\r\\n        <br>\\r\\n        \\r\\n        <!-- Event Binding: In this case the event is (opened) -->\\r\\n        <mat-expansion-panel \\r\\n                       (opened)=\\\"panelWasOpen1()\\\"\\r\\n                       (closed)=\\\"panelOpenState1 = false\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n              <h4>Members</h4>\\r\\n          </mat-panel-title>\\r\\n          <mat-panel-description>\\r\\n          </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n\\r\\n            <ng-container class=\\\"table-container\\\">\\r\\n              <div class=\\\"table\\\">\\r\\n                <collab-table [table] = \\\"table\\\" [xAxisReq] = \\\"xAxisReq\\\"></collab-table>\\r\\n              </div>\\r\\n            </ng-container>\\r\\n          \\r\\n          \\r\\n        </mat-expansion-panel>\\r\\n    </mat-accordion>\\r\\n    \\r\\n  </mat-card-content>\\r\\n\\r\\n  <mat-expansion-panel \\r\\n                       (opened)=\\\"panelWasOpen2()\\\"\\r\\n                       (closed)=\\\"panelOpenState2 = false\\\">\\r\\n        <mat-expansion-panel-header>\\r\\n          <mat-panel-title>\\r\\n            <h4>Actions</h4>\\r\\n          </mat-panel-title>\\r\\n          <mat-panel-description>\\r\\n          </mat-panel-description>\\r\\n          </mat-expansion-panel-header>\\r\\n            <mat-card-actions>\\r\\n              <button *ngIf=\\\"checkPartOf() == false\\\" mat-raised-button color = \\\"primary\\\" (click) = \\\"joinCollab()\\\"  > Join </button>\\r\\n              <button *ngIf=\\\"checkPartOf() == true\\\"  mat-raised-button color = \\\"primary\\\" (click) = \\\"leaveCollab()\\\" > Leave </button>\\r\\n              <button *ngIf=\\\"checkOwner() == true\\\"   mat-raised-button color = \\\"primary\\\" (click) = \\\"deleteCollab()\\\"> Delete </button>\\r\\n              <button *ngIf=\\\"checkOwner() == true\\\"   mat-raised-button color = \\\"primary\\\" (click) = \\\"editCollab()\\\">    Edit</button>\\r\\n            </mat-card-actions>   \\r\\n        </mat-expansion-panel>\\r\\n\\r\\n  \\r\\n\\r\\n</mat-card>\"","import { CollabsService } from 'src/app/shared/dbAccess/collabs.service';\r\nimport { UserService } from './../../shared/dbAccess/user.service';\r\nimport { CollabModel } from './../../shared/models/collab.model';\r\nimport { Component, OnInit, Input } from '@angular/core';\r\nimport { TableBuilder } from 'src/app/shared/models/tableBuilder.model';\r\nimport { UserModel } from 'src/app/shared/models/user.model';\r\nimport { Router } from '@angular/router';\r\n\r\nexport interface Requirements{\r\n  skillOrClass: string,\r\n  type: string\r\n}\r\n\r\n@Component({\r\n  selector: 'collab-card',\r\n  templateUrl: './collab-card.component.html',\r\n  styleUrls: ['./collab-card.component.css']\r\n})\r\nexport class CollabCardComponent implements OnInit {\r\n\r\n  @Input() collabData: CollabModel;\r\n \r\n\r\n  //Values being passed to collab-table\r\n  table: Array<TableBuilder> = [];  \r\n  xAxisReq: Array<string> = [];\r\n  panelOpenState1 = false;\r\n  panelOpenState2 = false;\r\n\r\n\r\n  yAxisUsers: any\r\n  alreadyBuilt: boolean = false;\r\n  partOf = false; \r\n  isOwner = false; \r\n\r\n  //Will hold our user data.\r\n  userData: UserModel;\r\n  \r\n\r\n  constructor(private userService: UserService, \r\n              private collabService: CollabsService,\r\n              private router: Router) {\r\n               \r\n                \r\n              }\r\n\r\n  async ngOnInit() {\r\n    await this.userService.getUserdetails().subscribe(userData => this.userData = userData);\r\n    \r\n  }\r\n\r\n  /*\r\n  Function that will build our table. \r\n  async: Will allow us to do await functions\r\n  */\r\n  async makeTable(){\r\n\r\n    if(this.alreadyBuilt){\r\n\r\n    } else {\r\n    this.alreadyBuilt = true;\r\n    //Will store the list of users.\r\n    let yAxisUsers : string[];\r\n\r\n    //Fuction will stop here until function getAllRequred returns\r\n    this.xAxisReq = await this.getAllRequired(); \r\n    \r\n    //Will members of the collaboration\r\n    yAxisUsers  = this.collabData.members;\r\n    //console.log(\"Skills Required: \" , xAxisReq);\r\n    \r\n    //Will loop through all the users and check if they know the required skills and classes\r\n    for(let y of yAxisUsers){\r\n      //console.log(x, \" is being checked\");\r\n\r\n        //Will hold a single instance of TableBuilder modle\r\n        let tableRow = await this.checkIfKnown(y,this.xAxisReq);\r\n        this.table.push(tableRow);\r\n        //console.log(tableRow);\r\n     }\r\n    }\r\n    \r\n  }\r\n\r\n  RefreshPage(){\r\n    this.getAllRequired();\r\n    //Will members of the collaboration\r\n    this.yAxisUsers  = this.collabData.members;\r\n  } \r\n  \r\n  //WIll check if a user knows skill or class, from the list of classes and skills that a user knows\r\n  async checkIfKnown(userName: string, listOfRequired: string[]){\r\n    let tmp: TableBuilder = null;\r\n\r\n    tmp = new TableBuilder(userName);\r\n\r\n    let knownByUser;\r\n   \r\n    for(let x of listOfRequired){\r\n      \r\n      //Will return both skills and classes in a single array\r\n      await this.userService.getUserSkillsAndClasses(userName).then(function(result){\r\n        knownByUser = result;\r\n      });\r\n      \r\n      if(knownByUser.includes(x)){\r\n        //console.log(userName , \" knows \", x);\r\n        tmp.setKnown(x,true);\r\n        \r\n      } else {\r\n        //console.log(userName , \" doesn't know \", x);\r\n        tmp.setKnown(x,false);\r\n      }\r\n    }\r\n    \r\n    return tmp;\r\n  }\r\n\r\n  getAllRequired(){\r\n    let xAxisReq: Array<string> = [];\r\n    xAxisReq = (this.collabData.skills).concat(this.collabData.classes);\r\n\r\n    return xAxisReq;\r\n  }\r\n  \r\n  async actionCheck(){\r\n    await this.isUserOwner();\r\n    this.isPartOf();\r\n  }\r\n\r\n  isUserOwner(){\r\n    \r\n    if(this.collabData.owner == this.userData['username']){\r\n      this.isOwner = true;\r\n    } else {\r\n      this.isOwner = false;\r\n    }\r\n  }\r\n\r\n  isPartOf(){\r\n\r\n    for(let member of this.collabData.members){\r\n      if(member == this.userData['username']){\r\n        this.partOf = true;\r\n      }\r\n    }\r\n  }\r\n\r\n  checkPartOf(){\r\n    return this.partOf;\r\n  }\r\n\r\n  checkOwner(){\r\n    return this.isOwner;\r\n  }\r\n  \r\n  joinCollab(){\r\n\r\n    this.collabService.joinCollab(this.collabData._id)\r\n      .subscribe(res => { \r\n        if(res['success'] == true){\r\n          this.partOf = true;\r\n          this.getUpdatedData();\r\n        } else {\r\n          \r\n        }\r\n      });\r\n  }\r\n\r\n  leaveCollab(){\r\n    this.collabService.leaveCollab(this.collabData._id)\r\n      .subscribe(res => { \r\n        if(res['success'] == true){\r\n          this.partOf = false;\r\n          this.getUpdatedData();\r\n        } else {\r\n          \r\n        } \r\n      });\r\n  }\r\n\r\n  deleteCollab(){\r\n    this.collabService.deleteCollab(this.collabData._id)\r\n      .subscribe(res => {})\r\n  }\r\n\r\n  editCollab(){\r\n   \r\n    this.router.navigate(['/home/editcollab/',this.collabData._id[\"$oid\"]]);\r\n  }\r\n\r\n  getUpdatedData(){\r\n    this.collabService.getSingleCollab(this.collabData._id[\"$oid\"]).subscribe(\r\n      res => {\r\n        console.log(res['0'],\r\n        this.collabData = res['0'])\r\n      }\r\n    );\r\n  }\r\n\r\n  panelWasOpen1(){\r\n    this.panelOpenState1 = true;\r\n    this.makeTable()\r\n  }\r\n\r\n  panelWasOpen2(){\r\n    this.panelOpenState2 = true;\r\n    this.actionCheck();\r\n  }\r\n\r\n  \r\n\r\n\r\n}\r\n","module.exports = \"p {\\n    padding: 16px;\\n    text-align: center;\\n  \\n  }\\n\\n  .collab {\\n    margin-top:25px;\\n    margin-bottom: 30px;\\n  }\\n\\n  .add-collab-button {\\n    z-index: 5; \\n    position: fixed; \\n    display: flex;\\n    align-self: flex-end; \\n    bottom: 7%; \\n    margin-bottom: 5px;\\n    margin-left: 80%; \\n  }\\n\\n  \\n\\n  \\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItbGlzdC9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCOztFQUVwQjs7RUFFQTtJQUNFLGVBQWU7SUFDZixtQkFBbUI7RUFDckI7O0VBRUE7SUFDRSxVQUFVO0lBQ1YsZUFBZTtJQUNmLGFBQWE7SUFDYixvQkFBb0I7SUFDcEIsVUFBVTtJQUNWLGtCQUFrQjtJQUNsQixnQkFBZ0I7RUFDbEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2NvbGxhYi1saXN0L2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBcbiAgfVxuXG4gIC5jb2xsYWIge1xuICAgIG1hcmdpbi10b3A6MjVweDtcbiAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xuICB9XG5cbiAgLmFkZC1jb2xsYWItYnV0dG9uIHtcbiAgICB6LWluZGV4OiA1OyBcbiAgICBwb3NpdGlvbjogZml4ZWQ7IFxuICAgIGRpc3BsYXk6IGZsZXg7XG4gICAgYWxpZ24tc2VsZjogZmxleC1lbmQ7IFxuICAgIGJvdHRvbTogNyU7IFxuICAgIG1hcmdpbi1ib3R0b206IDVweDtcbiAgICBtYXJnaW4tbGVmdDogODAlOyBcbiAgfVxuXG4gIFxuXG4gICJdfQ== */\"","module.exports = \"   <!--\\r\\n     selected.value: Is a value from .ts file.\\r\\n     selectedIndex: DOM value\\r\\n   -->\\r\\n   <mat-tab-group [selectedIndex] = \\\"selected.value\\\" \\r\\n                  (selectedIndexChange) =\\\"currentTab($event)\\\" >\\r\\n\\r\\n      <mat-tab label=\\\"All Collabs\\\">\\r\\n        <ng-template matTabContent>\\r\\n          <ng-container *ngFor = \\\"let collab of collabData | async\\\">\\r\\n            <div class =\\\"collab\\\">\\r\\n                <!-- Property binding from component to component using @Input() and @Output -->\\r\\n                <collab-card [collabData] = \\\"collab\\\"></collab-card>\\r\\n            </div>      \\r\\n          </ng-container>\\r\\n        </ng-template>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"My Collabs\\\">\\r\\n        <ng-template matTabContent>\\r\\n            <ng-container *ngFor = \\\"let collab of collabData | async\\\">\\r\\n              <div class =\\\"collab\\\">\\r\\n                <!-- Property binding from component to component using @Input() and @Output -->\\r\\n                <collab-card [collabData] = \\\"collab\\\"></collab-card>\\r\\n              </div>      \\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n      </mat-tab>\\r\\n\\r\\n      <mat-tab label=\\\"Recommended Collabs\\\">\\r\\n        <ng-template matTabContent>\\r\\n          <ng-container *ngFor = \\\"let collab of collabData | async\\\">\\r\\n            <div class =\\\"collab\\\">\\r\\n                <!-- Property binding from component to component using @Input() and @Output -->\\r\\n                <collab-card [collabData] = \\\"collab\\\"></collab-card>\\r\\n            </div>      \\r\\n          </ng-container>\\r\\n        </ng-template>\\r\\n      </mat-tab>\\r\\n\\r\\n   </mat-tab-group>\\r\\n\\r\\n   <div class = \\\"add-collab-button\\\">\\r\\n     <a mat-fab color = \\\"primary\\\" (click) = \\\"createCollab()\\\" style=\\\"margin-right: 14px\\\">\\r\\n      <mat-icon>add</mat-icon>\\r\\n     </a>\\r\\n   </div>\\r\\n     \\r\\n          \\r\\n            \\r\\n\"","import { FormControl } from '@angular/forms';\r\nimport { CollabsService } from './../../shared/dbAccess/collabs.service';\r\nimport { UserModel } from './../../shared/models/user.model';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { UserService } from '../../shared/dbAccess/user.service';\r\nimport {Router } from '@angular/router';\r\nimport { Observable, pipe } from 'rxjs';\r\nimport { CollabModel } from 'src/app/shared/models/collab.model';\r\nimport { map, startWith } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-home',\r\n  templateUrl: './home.component.html',\r\n  styleUrls: ['./home.component.css']\r\n})\r\nexport class HomeComponent implements OnInit {\r\n    userData: UserModel;\r\n    collabData: Observable<CollabModel[]>;\r\n    selected = new FormControl(0);\r\n\r\n    //Used for caching\r\n    CACHE_KEY_0 = 'activeCollabsCache';\r\n    CACHE_KEY_1 = 'myCollabsCache';\r\n    CACHE_KEY_2 = 'reqCollabsCache';\r\n\r\n  constructor(\r\n      private userService : UserService,\r\n      private router : Router, \r\n      private collabService : CollabsService)\r\n       {\r\n        this.userDetails();\r\n        }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.currentTab(0);\r\n  }\r\n\r\n  userDetails(){\r\n    this.userService.getUserdetails().subscribe(userData => this.userData = userData);\r\n  }\r\n  \r\n  userPicture(){\r\n    ///user/profilePicture\r\n    this.userService.getPicture().subscribe ((data : any ) => {\r\n      // BitmapImage image = new BitmapImage();\r\n      // image.SetSource(stream);  \r\n     });\r\n  }\r\n\r\n  // return array of JSON OBJECTS\r\n  collabDetails(){\r\n    this.collabService.collabDetails().subscribe ((data : any ) => {\r\n     });\r\n  }\r\n  \r\n\r\n  activeCollabs(){\r\n    this.collabService.activeCollabs().subscribe ((data : any ) => {\r\n      //console.log(data);   \r\n  \r\n     });\r\n  }\r\n\r\n  myCollabs(){\r\n    this.collabService.myCollabs().subscribe ((data : any ) => {\r\n      //console.log(data);   \r\n  \r\n     });\r\n  }\r\n\r\n  createCollab(){\r\n    this.router.navigate(['/home/createcollab']);\r\n  }\r\n\r\n  currentTab($event){\r\n    switch($event) {\r\n\r\n      case 0: {\r\n        this.collabData = this.collabService.getCollabs(\"getActiveCollabs\")\r\n        .pipe(\r\n          map((data : CollabModel[] )  =>  data.reverse())\r\n        );\r\n        \r\n        this.collabData.subscribe( next => {\r\n          localStorage[this.CACHE_KEY_0] = JSON.stringify(next);\r\n        });\r\n\r\n        this.collabData = this.collabData.pipe(\r\n          startWith(JSON.parse(localStorage[this.CACHE_KEY_0] || '{}'))\r\n        );\r\n          \r\n        break;\r\n      }\r\n\r\n      case 1: {\r\n        this.collabData = this.collabService.getCollabs(\"getCollabDetails\")\r\n        .pipe(\r\n          map((data : CollabModel[] )  =>  data.reverse())\r\n        );\r\n\r\n        this.collabData.subscribe( next => {\r\n          localStorage[this.CACHE_KEY_1] = JSON.stringify(next);\r\n        });\r\n\r\n        this.collabData = this.collabData.pipe(\r\n          startWith(JSON.parse(localStorage[this.CACHE_KEY_1] || '{}'))\r\n        );\r\n        \r\n        break;\r\n      }\r\n\r\n      case 2: {\r\n        this.collabData = this.collabService.getReqCollabs(this.userData[\"classes\"], this.userData[\"skills\"])\r\n        .pipe(\r\n          map((data : CollabModel[] )  =>  data.reverse())\r\n        )\r\n\r\n        this.collabData.subscribe( next => {\r\n          localStorage[this.CACHE_KEY_2]= JSON.stringify(next);\r\n        });\r\n\r\n        this.collabData = this.collabData.pipe(\r\n          startWith(JSON.parse(localStorage[this.CACHE_KEY_2] || '{}'))\r\n        )\r\n        break;\r\n      }\r\n\r\n      default: {\r\n\r\n        break;\r\n      }\r\n\r\n\r\n    }\r\n  }\r\n\r\n  \r\n\r\n}\r\n\r\n","module.exports = \"table { \\r\\n    width: 100%; \\r\\n    border-collapse: collapse; \\r\\n  }\\r\\n  /* Zebra striping */\\r\\n  tr:nth-of-type(odd) { \\r\\n    background: #eee; \\r\\n  }\\r\\n  th { \\r\\n    background: #333; \\r\\n    color: white; \\r\\n    font-weight: bold; \\r\\n  }\\r\\n  td, th { \\r\\n    padding: 6px; \\r\\n    border: 1px solid #ccc; \\r\\n    text-align: left; \\r\\n  }\\r\\n  td a{\\r\\n    display: block;\\r\\n  \\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItdGFibGUvY29sbGFiLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gseUJBQXlCO0VBQzNCO0VBQ0EsbUJBQW1CO0VBQ25CO0lBQ0UsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixnQkFBZ0I7RUFDbEI7RUFFQTtJQUNFLGNBQWM7O0VBRWhCIiwiZmlsZSI6InNyYy9hcHAvaG9tZS9jb2xsYWItdGFibGUvY29sbGFiLXRhYmxlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJ0YWJsZSB7IFxyXG4gICAgd2lkdGg6IDEwMCU7IFxyXG4gICAgYm9yZGVyLWNvbGxhcHNlOiBjb2xsYXBzZTsgXHJcbiAgfVxyXG4gIC8qIFplYnJhIHN0cmlwaW5nICovXHJcbiAgdHI6bnRoLW9mLXR5cGUob2RkKSB7IFxyXG4gICAgYmFja2dyb3VuZDogI2VlZTsgXHJcbiAgfVxyXG4gIHRoIHsgXHJcbiAgICBiYWNrZ3JvdW5kOiAjMzMzOyBcclxuICAgIGNvbG9yOiB3aGl0ZTsgXHJcbiAgICBmb250LXdlaWdodDogYm9sZDsgXHJcbiAgfVxyXG4gIHRkLCB0aCB7IFxyXG4gICAgcGFkZGluZzogNnB4OyBcclxuICAgIGJvcmRlcjogMXB4IHNvbGlkICNjY2M7IFxyXG4gICAgdGV4dC1hbGlnbjogbGVmdDsgXHJcbiAgfVxyXG5cclxuICB0ZCBhe1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgXHJcbiAgfSJdfQ== */\"","module.exports = \"\\r\\n<table>\\r\\n    <tr *ngFor = \\\"let row of table\\\">\\r\\n      <td>\\r\\n        <button mat-button color= \\\"primary\\\" (click) = \\\"goToProfile(row.userName)\\\">{{ row.userName }}</button>\\r\\n      </td>\\r\\n      <td *ngFor = \\\"let req of row.list\\\" [style.background-color] = \\\"req.knows ? '#ccffcc' : '#ffcccc'\\\"> {{ req.nameOf }} </td>\\r\\n    </tr>\\r\\n</table>\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { TableBuilder } from 'src/app/shared/models/tableBuilder.model';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'collab-table',\r\n  templateUrl: './collab-table.component.html',\r\n  styleUrls: ['./collab-table.component.css']\r\n})\r\nexport class CollabTableComponent implements OnInit {\r\n  @Input() table: Array<TableBuilder> = [];\r\n  @Input('xAxisReq') xAxisReq: Array<string> = [];\r\n \r\n\r\n  constructor(\r\n    private router: Router\r\n  ) \r\n  { }\r\n\r\n  ngOnInit() {\r\n    //console.log(this.xAxisReq);\r\n  }\r\n\r\n  goToProfile(user: string) {\r\n      this.router.navigate(['/user/', user]);\r\n  }\r\n\r\n}\r\n\r\n\r\n","module.exports = \".mat-form-field{\\r\\n    width: 70%;\\r\\n    margin-top: 10px;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    margin-top: 50px;\\r\\n    margin-bottom: 50px;\\r\\n    margin-left: 10%;\\r\\n    margin-right: 10%;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n\\r\\n}\\r\\n\\r\\n.example-chip-list {\\r\\n    width: 100%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jcmVhdGUtY29sbGFiL2NyZWF0ZS1jb2xsYWIuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixnQkFBZ0I7QUFDcEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLGdCQUFnQjtJQUNoQixpQkFBaUI7SUFDakIseUVBQXlFOztBQUU3RTs7QUFFQTtJQUNJLFdBQVc7RUFDYiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvY3JlYXRlLWNvbGxhYi9jcmVhdGUtY29sbGFiLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGR7XHJcbiAgICB3aWR0aDogNzAlO1xyXG4gICAgbWFyZ2luLXRvcDogMTBweDtcclxufVxyXG5cclxuLmNvbnRhaW5lciB7XHJcbiAgICBtYXJnaW4tdG9wOiA1MHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogNTBweDtcclxuICAgIG1hcmdpbi1sZWZ0OiAxMCU7XHJcbiAgICBtYXJnaW4tcmlnaHQ6IDEwJTtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwwLDAsMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcblxyXG59XHJcblxyXG4uZXhhbXBsZS1jaGlwLWxpc3Qge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfSJdfQ== */\"","module.exports = \"<!-- Steppers -->\\r\\n<div class = \\\"container\\\">\\r\\n        <mat-vertical-stepper [linear] = \\\"true\\\" #stepper>\\r\\n    \\r\\n                <mat-step [stepControl] = \\\"firstFormGroup\\\">\\r\\n                    <form [formGroup] = \\\"firstFormGroup\\\">\\r\\n                        <ng-template matStepLabel >Fill in Collab Info</ng-template>\\r\\n                        <mat-form-field>\\r\\n                            <input matInput placeholder = \\\"Collab Title...\\\" formControlName = \\\"title\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field>\\r\\n                            <textarea matInput placeholder = \\\"Description...\\\" formControlName = \\\"description\\\" required></textarea>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field>\\r\\n                                <input matInput placeholder = \\\"Location...\\\" formControlName = \\\"location\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field>\\r\\n                                <input type = \\\"number\\\" min=\\\"2\\\"  matInput placeholder = \\\"Collab Size...\\\" formControlName = \\\"size\\\" required>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field>\\r\\n                                <input formControlName = \\\"date\\\" matInput [owlDateTimeTrigger]=\\\"dt\\\" placeholder = \\\"Choose a date\\\" [owlDateTime]=\\\"dt\\\" required>\\r\\n                                <owl-date-time #dt></owl-date-time>\\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field>\\r\\n                                <input type = \\\"number\\\" min=\\\"2\\\"  matInput placeholder = \\\"Duration...\\\" formControlName = \\\"duration\\\" required>\\r\\n                        </mat-form-field>\\r\\n                    </form>\\r\\n                </mat-step>\\r\\n                <mat-step [stepControl] = \\\"secondFormGroup\\\" >\\r\\n                    <ng-template matStepLabel>Add Classes and Skills</ng-template>\\r\\n                    <div>\\r\\n                        <mat-form-field class=\\\"example-chip-list\\\">\\r\\n                            <mat-chip-list #chipListSkills>\\r\\n                                <mat-chip\\r\\n                                    *ngFor=\\\"let skill of skills\\\"\\r\\n                                    [selectable]=\\\"selectable\\\"\\r\\n                                    [removable]=\\\"removable\\\"\\r\\n                                    (removed)=\\\"removeSkill(skill)\\\">\\r\\n                                    {{ skill }}\\r\\n                                    <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                                </mat-chip>\\r\\n                                <input\\r\\n                                    placeholder=\\\"New Skill...\\\"\\r\\n                                    #skillInput\\r\\n                                    [formControl]=\\\"skillCtrl\\\"\\r\\n                                    [matAutocomplete]=\\\"auto\\\"\\r\\n                                    [matChipInputFor]=\\\"chipListSkills\\\"\\r\\n                                    [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                                    [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n                                    (matChipInputTokenEnd)=\\\"addSkill($event)\\\">\\r\\n                                    <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedSkill($event)\\\">\\r\\n                                        <mat-option *ngFor=\\\"let skill of filteredSkills\\\" [value]=\\\"skill\\\">\\r\\n                                            {{ skill }}\\r\\n                                        </mat-option>\\r\\n                                    </mat-autocomplete>\\r\\n                            </mat-chip-list>\\r\\n                                    \\r\\n                        </mat-form-field>\\r\\n                        <mat-form-field class=\\\"example-chip-list\\\">\\r\\n                            <mat-chip-list #chipListClasses>\\r\\n                                <mat-chip\\r\\n                                    *ngFor = \\\"let class of classes\\\"\\r\\n                                    [selectable] = \\\"selectable\\\"\\r\\n                                    [removable] = \\\"removable\\\"\\r\\n                                    (removed) = \\\"removeClass(class)\\\">\\r\\n                                    {{ class }}\\r\\n                                    <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                                </mat-chip>\\r\\n                                <input \\r\\n                                    placeholder=\\\"New Class...\\\"\\r\\n                                    #classInput\\r\\n                                    [formControl]=\\\"classCtrl\\\"\\r\\n                                    [matAutocomplete]=\\\"auto2\\\"\\r\\n                                    [matChipInputFor]=\\\"chipListClasses\\\"\\r\\n                                    [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                                    [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n                                    (matChipInputTokenEnd)=\\\"addClass($event)\\\">\\r\\n                                    <mat-autocomplete #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedClass($event)\\\">\\r\\n                                        <mat-option *ngFor=\\\"let class of filteredClasses\\\" [value]=\\\"class\\\">\\r\\n                                            {{ class }}\\r\\n                                        </mat-option>\\r\\n                                    </mat-autocomplete>\\r\\n                            </mat-chip-list>\\r\\n\\r\\n                        </mat-form-field>\\r\\n                    </div>\\r\\n                </mat-step>\\r\\n                <mat-step>\\r\\n                    <ng-template matStepLabel> Confirm Your Information</ng-template>\\r\\n                    <div>\\r\\n                        <button mat-raised-button (click) = \\\"createCollab()\\\" color=\\\"primary\\\">Done</button>\\r\\n                    </div>\\r\\n                </mat-step>\\r\\n            \\r\\n        </mat-vertical-stepper>\\r\\n    </div>\"","import { CollabModel } from 'src/app/shared/models/collab.model';\r\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\r\nimport { CollabsService } from 'src/app/shared/dbAccess/collabs.service';\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { map, startWith, debounceTime, distinctUntilChanged, switchMap, } from 'rxjs/operators';\r\nimport { Router } from '@angular/router';\r\nimport { query } from '@angular/animations';\r\n\r\n@Component({\r\n  selector: 'create-collab',\r\n  templateUrl: './create-collab.component.html',\r\n  styleUrls: ['./create-collab.component.css']\r\n})\r\nexport class CreateCollabComponent implements OnInit {\r\n  @Input() currentCollab: CollabModel;\r\n\r\n  firstFormGroup: FormGroup;\r\n  secondFormGroup: FormGroup;\r\n\r\n  \r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  //Variables for Skills.\r\n  skillCtrl = new FormControl();\r\n  filteredSkills: Observable<string[]>;\r\n  skills: string[] = [];\r\n  allSkills: string[] = [];\r\n\r\n  //Variables for Classes.\r\n  classCtrl = new FormControl();\r\n  filteredClasses: Observable<string[]>;\r\n  classes: string[] = [];\r\n  allClasses: string[] = [];\r\n\r\n\r\n  collabData: CollabModel;\r\n\r\n  @ViewChild('skillInput') skillInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete1: MatAutocomplete;\r\n\r\n  @ViewChild('classInput') classInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto2') matAutocomplete2: MatAutocomplete;\r\n\r\n  constructor(private _formBuilder: FormBuilder, \r\n              private userService : UserService, \r\n              private collabService: CollabsService,\r\n              private router: Router) {\r\n    this.collabData = new CollabModel;\r\n   }\r\n\r\n  ngOnInit() {\r\n    \r\n    this.skillCtrl.valueChanges.pipe(\r\n      \r\n      startWith(null),\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      switchMap( (query: string) => this.userService.searchSkills(query)  )\r\n      ).subscribe( (skills: Observable<string[]>) => this.filteredSkills = skills[\"matches\"] );\r\n\r\n      this.classCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      switchMap( (query: string) => this.userService.searchClasses(query)  )\r\n      ).subscribe( (classes: Observable<string[]>) => this.filteredClasses = classes[\"matches\"] );\r\n\r\n\r\n      \r\n    this.firstFormGroup = this._formBuilder.group({\r\n      title: [this.collabData.title, Validators.required],\r\n      description: [this.collabData.description, Validators.required],\r\n      location: [this.collabData.location, Validators.required],\r\n      size: [this.collabData.size, Validators.required],\r\n      date: [this.collabData.date, Validators.required],\r\n      duration: [this.collabData.duration, Validators.required],\r\n    });\r\n    \r\n  }\r\n\r\n  addSkill(event: MatChipInputEvent): void {\r\n\r\n    if(!this.matAutocomplete1.isOpen){\r\n\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      if((value || '').trim()) {\r\n        this.skills.push(value.trim());\r\n      }\r\n  \r\n      if(input) {\r\n        input.value = '';\r\n      } \r\n\r\n      this.skillCtrl.setValue(null);\r\n      \r\n    }\r\n  }\r\n\r\n  removeSkill(skill: string): void {\r\n    const index = this.skills.indexOf(skill);\r\n\r\n    if (index >= 0) {\r\n      this.skills.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selectedSkill(event: MatAutocompleteSelectedEvent): void {\r\n    this.skills.push(event.option.viewValue);\r\n    this.skillInput.nativeElement.value = '';\r\n    this.skillCtrl.setValue(null);\r\n\r\n  }\r\n\r\n  addClass(event: MatChipInputEvent): void {\r\n\r\n    if(!this.matAutocomplete2.isOpen){\r\n\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      if((value || '').trim()) {\r\n        this.classes.push(value.trim());\r\n      }\r\n  \r\n      if(input) {\r\n        input.value = '';\r\n      } \r\n\r\n      this.classCtrl.setValue(null);\r\n    }\r\n  }\r\n\r\n  removeClass(_class: string): void {\r\n    const index = this.classes.indexOf(_class);\r\n\r\n    if (index >= 0) {\r\n      this.classes.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selectedClass(event: MatAutocompleteSelectedEvent): void {\r\n    this.classes.push(event.option.viewValue);\r\n    this.classInput.nativeElement.value = '';\r\n    this.classCtrl.setValue(null);\r\n  }\r\n\r\n  createCollab(){    \r\n    this.collabData = Object.assign({}, this.firstFormGroup.value);\r\n    this.collabData.skills = this.skills;\r\n    this.collabData.classes = this.classes;\r\n    this.collabData.date = (this.collabData.date).valueOf();\r\n    this.collabData.duration *= 86400000;\r\n    this.collabData.duration += this.collabData.date;\r\n    let createResult: boolean;\r\n    this.collabService.createCollab(this.collabData)\r\n      .subscribe(result => { \r\n        if(result['success']){\r\n          this.router.navigate(['/home'])\r\n        } else {\r\n          error => {console.error('success' + error)}\r\n        }\r\n\r\n       } );\r\n    \r\n    \r\n  }\r\n  \r\n  \r\n\r\n}\r\n","module.exports = \".mat-form-field {\\r\\n    width: 90%;\\r\\n    margin-left: 15px;\\r\\n}\\r\\n\\r\\n.example-chip-list .mat-autocomplete{\\r\\n    width: 90%;\\r\\n}\\r\\n\\r\\n.container {\\r\\n    margin-top: 50px;\\r\\n    margin-bottom: 50px;\\r\\n    margin-left: 10%;\\r\\n    margin-right: 10%;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\nexample-chip-list {\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9lZGl0LWNvbGxhYi9lZGl0LWNvbGxhYi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksVUFBVTtJQUNWLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLFVBQVU7QUFDZDs7QUFFQTtJQUNJLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsZ0JBQWdCO0lBQ2hCLGlCQUFpQjtJQUNqQix5RUFBeUU7QUFDN0U7O0FBRUE7SUFDSSxXQUFXO0VBQ2IiLCJmaWxlIjoic3JjL2FwcC9ob21lL2VkaXQtY29sbGFiL2VkaXQtY29sbGFiLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LWZvcm0tZmllbGQge1xyXG4gICAgd2lkdGg6IDkwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAxNXB4O1xyXG59XHJcblxyXG4uZXhhbXBsZS1jaGlwLWxpc3QgLm1hdC1hdXRvY29tcGxldGV7XHJcbiAgICB3aWR0aDogOTAlO1xyXG59XHJcblxyXG4uY29udGFpbmVyIHtcclxuICAgIG1hcmdpbi10b3A6IDUwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiA1MHB4O1xyXG4gICAgbWFyZ2luLWxlZnQ6IDEwJTtcclxuICAgIG1hcmdpbi1yaWdodDogMTAlO1xyXG4gICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLDAsMCwwLjIpLCAwIDZweCAyMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE5KTtcclxufVxyXG5cclxuZXhhbXBsZS1jaGlwLWxpc3Qge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG5cclxuIl19 */\"","module.exports = \"<div class = \\\"container\\\">\\r\\n        <form #form = \\\"ngForm\\\" (ngSubmit) = \\\"update(form.value)\\\">\\r\\n                <br>\\r\\n                <mat-form-field>\\r\\n                <input [(ngModel)] = \\\"collabData['title']\\\" name = \\\"title\\\" id = \\\"title\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\r\\n                        #title = \\\"ngModel\\\" matInput placeholder = \\\"Collab Title...\\\" required>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <mat-form-field>\\r\\n                <textarea [(ngModel)] = \\\"collabData['description']\\\" name = \\\"description\\\" id = \\\"description\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\r\\n                        #description = \\\"ngModel\\\" matInput placeholder = \\\"Collab Description...\\\" required></textarea>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <mat-form-field>\\r\\n                <input [(ngModel)] = \\\"collabData['location']\\\" name = \\\"location\\\" id = \\\"location\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\r\\n                        #location = \\\"ngModel\\\" matInput placeholder = \\\"Location...\\\" required>\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <mat-form-field>\\r\\n                        <input [(ngModel)] = \\\"collabData['size']\\\" name = \\\"size\\\" id = \\\"size\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\r\\n                                #size = \\\"ngModel\\\" matInput placeholder = \\\"Collab Size...\\\" required>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field>\\r\\n                        <input [ngModel] = \\\"collabData['date'] | date:'y-MM-dd' \\\" (ngModelChange)=\\\"collabData['date'] = $event\\\"\\r\\n                                name = \\\"date\\\" id=\\\"date\\\" class = \\\"form-control\\\" \\r\\n                                #date = \\\"ngModel\\\" matInput placeholder = \\\"Choose a date\\\" [owlDateTimeTrigger]=\\\"dt\\\" [owlDateTime]=\\\"dt\\\" required>\\r\\n                        <owl-date-time #dt></owl-date-time>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field>\\r\\n                        <input [ngModel] = \\\"collabData['duration'] | date:'yyyy-MM-dd' \\\" name = \\\"duration\\\" id = \\\"duration\\\"  class = \\\"form-control\\\"\\r\\n                                #duration = \\\"ngModel\\\" matInput placeholder = \\\"Duration...\\\" [owlDateTimeTrigger]=\\\"dt2\\\" [owlDateTime]=\\\"dt2\\\" required>\\r\\n                        <owl-date-time #dt2></owl-date-time>\\r\\n                </mat-form-field>\\r\\n                <mat-form-field class=\\\"example-chip-list\\\">\\r\\n                        <mat-chip-list #chipListSkills>\\r\\n                                <mat-chip\\r\\n                                *ngFor=\\\"let skill of skills\\\"\\r\\n                                [selectable]=\\\"selectable\\\"\\r\\n                                [removable]=\\\"removable\\\"\\r\\n                                (removed)=\\\"removeSkill(skill)\\\">\\r\\n                                {{ skill }}\\r\\n                                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                                </mat-chip>\\r\\n                                <input\\r\\n                                placeholder=\\\"New Skill...\\\"\\r\\n                                #skillInput\\r\\n                                [formControl]=\\\"skillCtrl\\\"\\r\\n                                [matAutocomplete]=\\\"auto\\\"\\r\\n                                [matChipInputFor]=\\\"chipListSkills\\\"\\r\\n                                [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                                [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n                                (matChipInputTokenEnd)=\\\"addSkill($event)\\\">\\r\\n                                <mat-autocomplete #auto=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedSkill($event)\\\">\\r\\n                                        <mat-option *ngFor=\\\"let skill of filteredSkills\\\" [value]=\\\"skill\\\">\\r\\n                                        {{ skill }}\\r\\n                                        </mat-option>\\r\\n                                </mat-autocomplete>\\r\\n                        </mat-chip-list>             \\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <mat-form-field class=\\\"example-chip-list\\\">\\r\\n                        <mat-chip-list #chipListClasses>\\r\\n                                <mat-chip\\r\\n                                *ngFor = \\\"let class of classes\\\"\\r\\n                                [selectable] = \\\"selectable\\\"\\r\\n                                [removable] = \\\"removable\\\"\\r\\n                                (removed) = \\\"removeClass(class)\\\">\\r\\n                                {{ class }}\\r\\n                                <mat-icon matChipRemove *ngIf=\\\"removable\\\">cancel</mat-icon>\\r\\n                                </mat-chip>\\r\\n                                <input \\r\\n                                placeholder=\\\"New Class...\\\"\\r\\n                                #classInput\\r\\n                                [formControl]=\\\"classCtrl\\\"\\r\\n                                [matAutocomplete]=\\\"auto2\\\"\\r\\n                                [matChipInputFor]=\\\"chipListClasses\\\"\\r\\n                                [matChipInputSeparatorKeyCodes]=\\\"separatorKeysCodes\\\"\\r\\n                                [matChipInputAddOnBlur]=\\\"addOnBlur\\\"\\r\\n                                (matChipInputTokenEnd)=\\\"addClass($event)\\\">\\r\\n                        <mat-autocomplete #auto2=\\\"matAutocomplete\\\" (optionSelected)=\\\"selectedClass($event)\\\">\\r\\n                                <mat-option *ngFor=\\\"let class of filteredClasses\\\" [value]=\\\"class\\\">\\r\\n                                {{ class }}\\r\\n                                </mat-option>\\r\\n                        </mat-autocomplete>\\r\\n                </mat-chip-list>\\r\\n\\r\\n                </mat-form-field>\\r\\n                <br>\\r\\n                <button mat-raised-button>Update</button>\\r\\n                <br>\\r\\n        </form>\\r\\n       \\r\\n        \\r\\n</div>\"","import { CollabModel } from 'src/app/shared/models/collab.model';\r\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\r\nimport { CollabsService } from 'src/app/shared/dbAccess/collabs.service';\r\nimport { ENTER, COMMA } from '@angular/cdk/keycodes';\r\nimport { FormGroup, FormBuilder, Validators, FormControl } from '@angular/forms';\r\nimport { Component, OnInit, ViewChild, ElementRef, Input } from '@angular/core';\r\nimport { Observable, from } from 'rxjs';\r\nimport { MatAutocomplete, MatAutocompleteSelectedEvent } from '@angular/material/autocomplete';\r\nimport { MatChipInputEvent } from '@angular/material/chips';\r\nimport { map, startWith, debounceTime, distinctUntilChanged, switchMap, } from 'rxjs/operators';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\n\r\n\r\n@Component({\r\n  selector: 'app-edit-collab',\r\n  templateUrl: './edit-collab.component.html',\r\n  styleUrls: ['./edit-collab.component.css']\r\n})\r\nexport class EditCollabComponent implements OnInit {\r\n  @Input() currentCollab: CollabModel;\r\n\r\n  formGroup: FormGroup;\r\n  _id: string;\r\n  myCollab: CollabModel;\r\n\r\n  \r\n  visible = true;\r\n  selectable = true;\r\n  removable = true;\r\n  addOnBlur = true;\r\n  separatorKeysCodes: number[] = [ENTER, COMMA];\r\n\r\n  //Variables for Skills.\r\n  skillCtrl = new FormControl();\r\n  filteredSkills: Observable<string[]>;\r\n  skills: string[] = [];\r\n  allSkills: string[] = [];\r\n\r\n  //Variables for Classes.\r\n  classCtrl = new FormControl();\r\n  filteredClasses: Observable<string[]>;\r\n  classes: string[] = [];\r\n  allClasses: string[] = [];\r\n\r\n\r\n  collabData: CollabModel;\r\n\r\n  @ViewChild('skillInput') skillInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto') matAutocomplete1: MatAutocomplete;\r\n\r\n  @ViewChild('classInput') classInput: ElementRef<HTMLInputElement>;\r\n  @ViewChild('auto2') matAutocomplete2: MatAutocomplete;\r\n\r\n  constructor(\r\n              private userService : UserService, \r\n              private collabService: CollabsService,\r\n              private activeRoute: ActivatedRoute,\r\n              private router : Router) {\r\n            \r\n    this.collabData = new CollabModel;\r\n    this.activeRoute.paramMap\r\n    .subscribe(params => {\r\n      this._id = params.get('_id');\r\n    })\r\n   }\r\n\r\n  async ngOnInit() {\r\n    await this.getCollabDetails(this._id);\r\n    \r\n    this.skillCtrl.valueChanges.pipe(\r\n      \r\n      startWith(null),\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      switchMap( (query: string) => this.userService.searchSkills(query)  )\r\n      ).subscribe( (skills: Observable<string[]>) => this.filteredSkills = skills[\"matches\"] );\r\n\r\n    this.classCtrl.valueChanges.pipe(\r\n      startWith(null),\r\n      debounceTime(200),\r\n      distinctUntilChanged(),\r\n      switchMap( (query: string) => this.userService.searchClasses(query)  )\r\n      ).subscribe( (classes: Observable<string[]>) => this.filteredClasses = classes[\"matches\"] );\r\n    \r\n  }\r\n\r\n  \r\n\r\n  getCollabDetails(id: string){\r\n    this.collabService.getSingleCollab(id).subscribe(res => {\r\n      this.collabData = res['0'];\r\n      this.skills = res['0']['skills'];\r\n      this.classes = res['0']['classes'];\r\n    });\r\n  }\r\n\r\n  async update(collabUpdatedData){\r\n    \r\n    this.collabData = collabUpdatedData;\r\n    this.collabData.skills = this.skills;\r\n    this.collabData.classes = this.classes;\r\n    \r\n\r\n    console.log(collabUpdatedData);\r\n  \r\n    await this.collabService.editCollab(this.collabData, this._id)\r\n      .subscribe(res => { \r\n          if(res['success']){ \r\n            this.router.navigate(['/home'])\r\n           } else {\r\n            console.error(res);\r\n          }\r\n          });\r\n    \r\n  }\r\n\r\n  addSkill(event: MatChipInputEvent): void {\r\n\r\n    if(!this.matAutocomplete1.isOpen){\r\n\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      if((value || '').trim()) {\r\n        this.skills.push(value.trim());\r\n      }\r\n  \r\n      if(input) {\r\n        input.value = '';\r\n      } \r\n\r\n      this.skillCtrl.setValue(null);\r\n      \r\n    }\r\n  }\r\n\r\n  removeSkill(skill: string): void {\r\n    const index = this.skills.indexOf(skill);\r\n\r\n    if (index >= 0) {\r\n      this.skills.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selectedSkill(event: MatAutocompleteSelectedEvent): void {\r\n    this.skills.push(event.option.viewValue);\r\n    this.skillInput.nativeElement.value = '';\r\n    this.skillCtrl.setValue(null);\r\n\r\n  }\r\n\r\n  addClass(event: MatChipInputEvent): void {\r\n\r\n    if(!this.matAutocomplete2.isOpen){\r\n\r\n      const input = event.input;\r\n      const value = event.value;\r\n\r\n      if((value || '').trim()) {\r\n        this.classes.push(value.trim());\r\n      }\r\n  \r\n      if(input) {\r\n        input.value = '';\r\n      } \r\n\r\n      this.classCtrl.setValue(null);\r\n    }\r\n  }\r\n\r\n  removeClass(_class: string): void {\r\n    const index = this.classes.indexOf(_class);\r\n\r\n    if (index >= 0) {\r\n      this.classes.splice(index, 1);\r\n    }\r\n  }\r\n\r\n  selectedClass(event: MatAutocompleteSelectedEvent): void {\r\n    this.classes.push(event.option.viewValue);\r\n    this.classInput.nativeElement.value = '';\r\n    this.classCtrl.setValue(null);\r\n  }\r\n\r\n  \r\n  \r\n  \r\n\r\n}\r\n","import { CreateCollabComponent } from './create-collab/create-collab.component';\r\nimport { CollabCardComponent } from './collab-card/collab-card.component';\r\nimport { HomeComponent } from './collab-list/home.component';\r\nimport { EditCollabComponent } from './edit-collab/edit-collab.component';\r\n\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: HomeComponent\r\n  },\r\n  {\r\n  path:\"collabinfo\",\r\n    component: CollabCardComponent\r\n  },\r\n  {\r\n    path:\"createcollab\",\r\n    component: CreateCollabComponent\r\n  },\r\n  {\r\n    path:\"editcollab/:_id\",\r\n    component: EditCollabComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class HomeRoutingModule { }\r\n","import { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatGridListModule } from '@angular/material/grid-list';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatListModule } from '@angular/material/list';\r\n\r\n\r\nimport { HomeComponent } from './collab-list/home.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { HomeRoutingModule } from './home-routing.module';\r\n\r\n//Material Components\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\nimport {MatStepperModule} from '@angular/material/stepper';\r\nimport {MatSelectModule} from '@angular/material/select';\r\n\r\n\r\nimport { CollabCardComponent } from './collab-card/collab-card.component';\r\nimport { CollabTableComponent } from './collab-table/collab-table.component';\r\nimport { CreateCollabComponent } from './create-collab/create-collab.component';\r\nimport { MatFormFieldModule } from '@angular/material/form-field';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport { EditCollabComponent } from './edit-collab/edit-collab.component';\r\n\r\n@NgModule({\r\n  declarations: [HomeComponent, CollabCardComponent, CollabTableComponent, CreateCollabComponent, EditCollabComponent],\r\n  imports: [\r\n    CommonModule,\r\n    HomeRoutingModule,\r\n    //Angular Material\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatListModule,\r\n    MatExpansionModule,\r\n    MatTableModule,\r\n    ScrollDispatchModule,\r\n    MatChipsModule,\r\n    MatGridListModule,\r\n    MatStepperModule,\r\n    MatFormFieldModule,\r\n    MatInputModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatAutocompleteModule,\r\n    MatFormFieldModule,\r\n    MatSelectModule,\r\n\r\n    OwlDateTimeModule, \r\n    OwlNativeDateTimeModule,\r\n    \r\n\r\n    FormsModule,\r\n    ReactiveFormsModule\r\n  ]\r\n})\r\nexport class HomeModule { }\r\n","export class CollabModel {\n    public _id          ?: {};\n    public owner        ?: string;\n    public size         ?: number;\n    public date         ?: number;\n    public duration     ?: number;\n    public location     ?: string;\n    public status       ?: boolean;\n    public title        ?: string;\n    public description  ?: string;\n    public classes      ?: string[];\n    public skills       ?: string[];\n    public applicants   ?: string[];\n    public members      ?: string[];\n    \n}","export class TableBuilder {\n    userName: string;\n    list: Knows[]; \n\n    constructor(name: string){\n        this.userName = name;\n        this.list = [];\n    }\n\n    setKnown(nameOf: string, knowsOf: boolean){\n        this.list.push(\n            {\n                nameOf: nameOf,\n                knows: knowsOf\n            }\n        )\n    }\n\n    \n\n\n\n}\n\ninterface Knows {\n    nameOf: string;\n    knows: boolean;\n}"],"sourceRoot":""}