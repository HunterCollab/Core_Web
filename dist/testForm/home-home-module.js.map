{"version":3,"sources":["webpack:///./src/app/home/collab-card/collab-card.component.css","webpack:///./src/app/home/collab-card/collab-card.component.html","webpack:///./src/app/home/collab-card/collab-card.component.ts","webpack:///./src/app/home/collab-list/home.component.css","webpack:///./src/app/home/collab-list/home.component.html","webpack:///./src/app/home/collab-list/home.component.ts","webpack:///./src/app/home/collab-table/collab-table.component.css","webpack:///./src/app/home/collab-table/collab-table.component.html","webpack:///./src/app/home/collab-table/collab-table.component.ts","webpack:///./src/app/home/home-routing.module.ts","webpack:///./src/app/home/home.module.ts","webpack:///./src/app/shared/dbAccess/collabs.service.ts","webpack:///./src/app/shared/models/collab.model.ts","webpack:///./src/app/shared/models/tableBuilder.model.ts"],"names":[],"mappings":"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","file":"home-home-module.js","sourcesContent":["module.exports = \".mat-card {\\n    max-width: 800px;\\n    margin: auto;\\n    padding: 0px;\\n    height: 100%;\\n}\\n\\n.mat-card-header {\\n    color: rgba(0, 0, 0, .54);\\n    background: rgba(0, 0, 0, 0.062);\\n    font-weight: bold;\\n    padding: 0px;\\n}\\n\\n.mat-card-title  {\\n    margin-left: 5px;\\n    margin-top: 10px;\\n}\\n\\n.mat-card-content {\\n    margin: 0px;\\n}\\n\\n.mat-card>.mat-card-actions:last-child {\\n    margin-bottom: 5px;\\n    margin-left: 10px;\\n}\\n\\n.description {\\n    margin-left: 10px;\\n}\\n\\n.table{\\n    width: 100%;\\n    height: 100%;\\n    overflow-x:  auto;\\n    overflow-y:  auto;\\n}\\n\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItY2FyZC9jb2xsYWItY2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksZ0JBQWdCO0lBQ2hCLFlBQVk7SUFDWixZQUFZO0lBQ1osWUFBWTtBQUNoQjs7QUFFQTtJQUNJLHlCQUF5QjtJQUN6QixnQ0FBZ0M7SUFDaEMsaUJBQWlCO0lBQ2pCLFlBQVk7QUFDaEI7O0FBRUE7SUFDSSxnQkFBZ0I7SUFDaEIsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksV0FBVztBQUNmOztBQUVBO0lBQ0ksa0JBQWtCO0lBQ2xCLGlCQUFpQjtBQUNyQjs7QUFFQTtJQUNJLGlCQUFpQjtBQUNyQjs7QUFHQTtJQUNJLFdBQVc7SUFDWCxZQUFZO0lBQ1osaUJBQWlCO0lBQ2pCLGlCQUFpQjtBQUNyQiIsImZpbGUiOiJzcmMvYXBwL2hvbWUvY29sbGFiLWNhcmQvY29sbGFiLWNhcmQuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtY2FyZCB7XG4gICAgbWF4LXdpZHRoOiA4MDBweDtcbiAgICBtYXJnaW46IGF1dG87XG4gICAgcGFkZGluZzogMHB4O1xuICAgIGhlaWdodDogMTAwJTtcbn1cblxuLm1hdC1jYXJkLWhlYWRlciB7XG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjU0KTtcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDYyKTtcbiAgICBmb250LXdlaWdodDogYm9sZDtcbiAgICBwYWRkaW5nOiAwcHg7XG59XG5cbi5tYXQtY2FyZC10aXRsZSAge1xuICAgIG1hcmdpbi1sZWZ0OiA1cHg7XG4gICAgbWFyZ2luLXRvcDogMTBweDtcbn1cblxuLm1hdC1jYXJkLWNvbnRlbnQge1xuICAgIG1hcmdpbjogMHB4O1xufVxuXG4ubWF0LWNhcmQ+Lm1hdC1jYXJkLWFjdGlvbnM6bGFzdC1jaGlsZCB7XG4gICAgbWFyZ2luLWJvdHRvbTogNXB4O1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG4uZGVzY3JpcHRpb24ge1xuICAgIG1hcmdpbi1sZWZ0OiAxMHB4O1xufVxuXG5cbi50YWJsZXtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG4gICAgb3ZlcmZsb3cteDogIGF1dG87XG4gICAgb3ZlcmZsb3cteTogIGF1dG87XG59XG5cbiJdfQ== */\"","module.exports = \"<mat-card>\\n  <mat-card-header>\\n    <mat-card-title> <h4>{{collabData.title}}</h4> </mat-card-title>\\n  </mat-card-header>\\n\\n  <mat-card-content>\\n    <mat-accordion>\\n        <h4 class=\\\"description\\\"> {{ collabData.description }} </h4>\\n        \\n        \\n        <!-- Event Binding: In this case the event is (opened) -->\\n        <mat-expansion-panel \\n                       (opened)=\\\"panelOpenState = true && makeTable()\\\"\\n                       (closed)=\\\"panelOpenState = false\\\">\\n        <mat-expansion-panel-header>\\n          <mat-panel-title>\\n            Skills/Classes Wanted.\\n          </mat-panel-title>\\n          <mat-panel-description>\\n          </mat-panel-description>\\n          </mat-expansion-panel-header>\\n\\n            <ng-container class=\\\"table-container\\\">\\n              <div class=\\\"table\\\">\\n                <collab-table [table] = \\\"table\\\" [xAxisReq] = \\\"xAxisReq\\\"></collab-table>\\n              </div>\\n            </ng-container>\\n          \\n          \\n        </mat-expansion-panel>\\n    </mat-accordion>\\n    \\n  </mat-card-content>\\n\\n  <mat-card-actions>\\n        <button mat-raised-button color = \\\"primary\\\"> Join </button>\\n        <button mat-raised-button color = \\\"primary\\\"> Leave </button>\\n        <button mat-raised-button color = \\\"primary\\\"> Delete</button>\\n  </mat-card-actions>\\n\\n</mat-card>\"","import { UserService } from './../../shared/dbAccess/user.service';\nimport { CollabModel } from './../../shared/models/collab.model';\nimport { Component, OnInit, Input } from '@angular/core';\nimport { TableBuilder } from 'src/app/shared/models/tableBuilder.model';\n\nexport interface Requirements{\n  skillOrClass: string,\n  type: string\n}\n\n@Component({\n  selector: 'collab-card',\n  templateUrl: './collab-card.component.html',\n  styleUrls: ['./collab-card.component.css']\n})\nexport class CollabCardComponent implements OnInit {\n\n  @Input() collabData: CollabModel;\n  table: Array<TableBuilder> = [];\n  xAxisReq: Array<string> = [];\n  \n\n  constructor(private userService: UserService) {}\n\n  ngOnInit() {\n  }\n\n  /*\n  Function that will build our table. \n  async: Will allow us to do await functions\n  */\n  async makeTable(){\n    //Will store the list of users.\n    let yAxisUsers : string[];\n\n    //Fuction will stop here until function getAllRequred returns\n    this.xAxisReq = await this.getAllRequired(); \n    \n    //Will members of the collaboration\n    yAxisUsers  = this.collabData.members;\n    //console.log(\"Skills Required: \" , xAxisReq);\n    \n    //Will loop through all the users and check if they know the required skills and classes\n    for(let y of yAxisUsers){\n      //console.log(x, \" is being checked\");\n\n        //Will hold a single instance of TableBuilder modle\n        let tableRow = await this.checkIfKnown(y,this.xAxisReq);\n        this.table.push(tableRow);\n        //console.log(tableRow);\n     }\n  }\n\n  //WIll check if a user knows skill or class, from the list of classes and skills that a user knows\n  async checkIfKnown(userName: string, listOfRequired: string[]){\n    let tmp: TableBuilder = null;\n\n    tmp = new TableBuilder(userName);\n\n    let knownByUser;\n   \n    for(let x of listOfRequired){\n      \n      //Will return both skills and classes in a single array\n      await this.userService.getUserSkillsAndClasses(userName).then(function(result){\n        knownByUser = result;\n      });\n      \n      if(knownByUser.includes(x)){\n        //console.log(userName , \" knows \", x);\n        tmp.setKnown(x,true);\n        \n      } else {\n        //console.log(userName , \" doesn't know \", x);\n        tmp.setKnown(x,false);\n      }\n    }\n    \n    return tmp;\n  }\n\n  getAllRequired(){\n    let xAxisReq: Array<string> = [];\n    xAxisReq = (this.collabData.skills).concat(this.collabData.classes);\n\n    return xAxisReq;\n  }\n\n\n\n  \n\n\n\n}\n","module.exports = \"p {\\n    padding: 16px;\\n    text-align: center;\\n  \\n  }\\n\\n  .collab {\\n    margin-top:25px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItbGlzdC9ob21lLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxhQUFhO0lBQ2Isa0JBQWtCOztFQUVwQjs7RUFFQTtJQUNFLGVBQWU7RUFDakIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2NvbGxhYi1saXN0L2hvbWUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInAge1xuICAgIHBhZGRpbmc6IDE2cHg7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICBcbiAgfVxuXG4gIC5jb2xsYWIge1xuICAgIG1hcmdpbi10b3A6MjVweDtcbiAgfSJdfQ== */\"","module.exports = \"   <mat-tab-group>\\n\\n      <mat-tab label=\\\"All Collabs\\\">\\n        <ng-template matTabContent>\\n          <ng-container *ngFor = \\\"let collab of collabData\\\">\\n            <div class =\\\"collab\\\">\\n                <!-- Property binding from component to component using @Input() and @Output -->\\n                <collab-card [collabData] = \\\"collab\\\"></collab-card>\\n            </div>      \\n          </ng-container>\\n        </ng-template>\\n      </mat-tab>\\n\\n      <mat-tab label=\\\"Recommended Collabs\\\">\\n        <ng-template matTabContent>\\n            Recommended Collabs\\n        </ng-template>\\n      </mat-tab>\\n\\n      <mat-tab label=\\\"My Collabs\\\">\\n        <ng-template matTabContent>\\n            My Collabs\\n            \\n\\n        </ng-template>\\n      </mat-tab>\\n\\n   </mat-tab-group>\\n     \\n          \\n            \\n\"","import { CollabsService } from './../../shared/dbAccess/collabs.service';\nimport { UserModel } from './../../shared/models/user.model';\nimport { Component, OnInit } from '@angular/core';\nimport { UserService } from '../../shared/dbAccess/user.service';\nimport {Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { CollabModel } from 'src/app/shared/models/collab.model';\n\n@Component({\n  selector: 'app-home',\n  templateUrl: './home.component.html',\n  styleUrls: ['./home.component.css']\n})\nexport class HomeComponent implements OnInit {\n    userData: UserModel[];\n    collabData: CollabModel[];\n\n  constructor(\n      private userService : UserService,\n      private router : Router, \n      private collabService : CollabsService)\n       {\n        this.collabService.allCollabs().subscribe ((data : CollabModel[] )  => this.collabData = data);\n        }\n\n  ngOnInit() {\n    \n  }\n\n  userDetails(){\n    this.userService.getUserdetails().subscribe(userData => this.userData = userData);\n  }\n  \n  userPicture(){\n    ///user/profilePicture\n    this.userService.getPicture().subscribe ((data : any ) => {\n      // BitmapImage image = new BitmapImage();\n      // image.SetSource(stream);  \n     });\n  }\n\n  // return array of JSON OBJECTS\n  collabDetails(){\n    this.collabService.collabDetails().subscribe ((data : any ) => {\n     });\n  }\n  \n\n  activeCollabs(){\n    this.collabService.activeCollabs().subscribe ((data : any ) => {\n      console.log(data);   \n  \n     });\n  }\n\n  myCollabs(){\n    this.collabService.myCollabs().subscribe ((data : any ) => {\n      console.log(data);   \n  \n     });\n  }\n\n}","module.exports = \"table { \\n    width: 100%; \\n    border-collapse: collapse; \\n  }\\n  /* Zebra striping */\\n  tr:nth-of-type(odd) { \\n    background: #eee; \\n  }\\n  th { \\n    background: #333; \\n    color: white; \\n    font-weight: bold; \\n  }\\n  td, th { \\n    padding: 6px; \\n    border: 1px solid #ccc; \\n    text-align: left; \\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaG9tZS9jb2xsYWItdGFibGUvY29sbGFiLXRhYmxlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxXQUFXO0lBQ1gseUJBQXlCO0VBQzNCO0VBQ0EsbUJBQW1CO0VBQ25CO0lBQ0UsZ0JBQWdCO0VBQ2xCO0VBQ0E7SUFDRSxnQkFBZ0I7SUFDaEIsWUFBWTtJQUNaLGlCQUFpQjtFQUNuQjtFQUNBO0lBQ0UsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixnQkFBZ0I7RUFDbEIiLCJmaWxlIjoic3JjL2FwcC9ob21lL2NvbGxhYi10YWJsZS9jb2xsYWItdGFibGUuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbInRhYmxlIHsgXG4gICAgd2lkdGg6IDEwMCU7IFxuICAgIGJvcmRlci1jb2xsYXBzZTogY29sbGFwc2U7IFxuICB9XG4gIC8qIFplYnJhIHN0cmlwaW5nICovXG4gIHRyOm50aC1vZi10eXBlKG9kZCkgeyBcbiAgICBiYWNrZ3JvdW5kOiAjZWVlOyBcbiAgfVxuICB0aCB7IFxuICAgIGJhY2tncm91bmQ6ICMzMzM7IFxuICAgIGNvbG9yOiB3aGl0ZTsgXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7IFxuICB9XG4gIHRkLCB0aCB7IFxuICAgIHBhZGRpbmc6IDZweDsgXG4gICAgYm9yZGVyOiAxcHggc29saWQgI2NjYzsgXG4gICAgdGV4dC1hbGlnbjogbGVmdDsgXG4gIH0iXX0= */\"","module.exports = \"\\n<table>\\n    <tr *ngFor = \\\"let row of table\\\">\\n      <td>{{ row.userName}}</td>\\n      <td *ngFor = \\\"let req of row.list\\\" [style.background-color] = \\\"req.knows ? '#ccffcc' : '#ffcccc'\\\"> {{ req.nameOf }} </td>\\n    </tr>\\n</table>\"","import { Component, OnInit, Input } from '@angular/core';\nimport { TableBuilder } from 'src/app/shared/models/tableBuilder.model';\n\n@Component({\n  selector: 'collab-table',\n  templateUrl: './collab-table.component.html',\n  styleUrls: ['./collab-table.component.css']\n})\nexport class CollabTableComponent implements OnInit {\n  @Input() table: Array<TableBuilder> = [];\n  @Input('xAxisReq') xAxisReq: Array<string> = [];\n \n\n  constructor() { }\n\n  ngOnInit() {\n    console.log(this.xAxisReq);\n  }\n}\n\n\n","import { CollabCardComponent } from './collab-card/collab-card.component';\nimport { HomeComponent } from './collab-list/home.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n  {\n    path: '',\n    component: HomeComponent\n  },\n  {\n    path:\"collabinfo\",\n    component: CollabCardComponent\n  },\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class HomeRoutingModule { }\n","import { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { MatTableModule } from '@angular/material/table';\nimport { MatListModule } from '@angular/material/list';\n\n\nimport { HomeComponent } from './collab-list/home.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { HomeRoutingModule } from './home-routing.module';\n\n//Material Components\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport {MatExpansionModule} from '@angular/material/expansion';\n\nimport { CollabCardComponent } from './collab-card/collab-card.component';\nimport { CollabTableComponent } from './collab-table/collab-table.component';\n\n@NgModule({\n  declarations: [HomeComponent, CollabCardComponent, CollabTableComponent],\n  imports: [\n    CommonModule,\n    HomeRoutingModule,\n    //Angular Material\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatListModule,\n    MatExpansionModule,\n    MatTableModule,\n    ScrollDispatchModule\n  ]\n})\nexport class HomeModule { }\n","import { HttpClient } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { CollabModel } from '../models/collab.model';\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CollabsService {\n\n  readonly rootUrl = 'https://huntercollabapi.herokuapp.com';\n  constructor(private http: HttpClient) { }\n\n  //collab/getCollabDetails\n  collabDetails(){ \n    return this.http.get( this.rootUrl +\"/collab/getCollabDetails\");\n  }\n  //collab/getAllCollabs\n  allCollabs(): Observable<CollabModel[]> { \n    return this.http.get<CollabModel[]>( this.rootUrl +\"/collab/getAllCollabs\");\n  }\n  //collab/getActiveCollabs \n  activeCollabs(){ \n    return this.http.get( this.rootUrl +\"/collab/getActiveCollabs\");\n  }\n  //messaging/myConvos\n  myCollabs(){ \n    return this.http.get( this.rootUrl +\"/messaging/myConvos\");\n  }\n\n\n}\n\n","export class CollabModel {\n    public id           ?: number;\n    public owner        ?: string;\n    public size         ?: number;\n    public date         ?: number;\n    public duration     ?: number;\n    public location     ?: string;\n    public status       ?: boolean;\n    public title        ?: string;\n    public description  ?: string;\n    public classes      ?: string[];\n    public skills       ?: string[];\n    public applicants   ?: string[];\n    public members      ?: string[];\n    public collabId     ?: string;\n}","export class TableBuilder {\n    userName: string;\n    list: Knows[]; \n\n    constructor(name: string){\n        this.userName = name;\n        this.list = [];\n    }\n\n    setKnown(nameOf: string, knowsOf: boolean){\n        this.list.push(\n            {\n                nameOf: nameOf,\n                knows: knowsOf\n            }\n        )\n    }\n\n    \n\n\n\n}\n\ninterface Knows {\n    nameOf: string;\n    knows: boolean;\n}"],"sourceRoot":""}