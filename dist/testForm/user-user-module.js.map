{"version":3,"sources":["webpack:///./src/app/user/update-userdata/update-userdata.component.css","webpack:///./src/app/user/update-userdata/update-userdata.component.html","webpack:///./src/app/user/update-userdata/update-userdata.component.ts","webpack:///./src/app/user/user-page/user-page.component.css","webpack:///./src/app/user/user-page/user-page.component.html","webpack:///./src/app/user/user-page/user-page.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXBkYXRlLXVzZXJkYXRhL3VwZGF0ZS11c2VyZGF0YS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  update-userdata works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'update-userdata',\r\n  templateUrl: './update-userdata.component.html',\r\n  styleUrls: ['./update-userdata.component.css']\r\n})\r\nexport class UpdateUserdataComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"    .usercard1 {\\r\\n      margin-top: 30px;\\r\\n      padding: 0px;\\r\\n      border-radius: 5px;\\r\\n      box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n  }\\r\\n\\r\\n  .mat-card-avatar {\\r\\n      background-image: url('/assets/userPhoto.png');\\r\\n      vertical-align: middle;\\r\\n      width: 50px;\\r\\n      height: 50px;\\r\\n      border-radius: 50%;\\r\\n\\r\\n  }\\r\\n\\r\\n  .mat-card-actions {\\r\\n      display: flex;\\r\\n  }\\r\\n\\r\\n  .list-header-title {\\r\\n    color: rgba(0, 0, 0, .54);\\r\\n    background: rgba(0, 0, 0, 0.062);\\r\\n    font-weight: bold;\\r\\n    padding: 0px;\\r\\n   \\r\\n  }\\r\\n\\r\\n  .mat-card-image {\\r\\n    margin: 0px;\\r\\n    max-width: 100%;\\r\\n  }\\r\\n\\r\\n  .mat-card-header {\\r\\n      padding-left: 10px;\\r\\n      padding-top: 10px; \\r\\n  }\\r\\n\\r\\n  .mat-raised-button {\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      margin-bottom: 7px;\\r\\n  }\\r\\n\\r\\n  .usercard2 {\\r\\n   margin-top: 30px;\\r\\n   color: rgba(0, 0, 0, .54);\\r\\n   background: rgba(0, 0, 0, 0.062);\\r\\n   height: 92%;\\r\\n   padding-bottom: 25px;\\r\\n   border-radius: 5px;\\r\\n   box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n  .viewport {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    margin-left: 40px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n  .cdk-virtual-scroll-viewport {\\r\\n    height: 80%;\\r\\n    margin: 0px;\\r\\n    background-color: white;\\r\\n\\r\\n}\\r\\n\\r\\n  .example-form .mat-form-field {\\r\\n  margin: 0px;\\r\\n}\\r\\n\\r\\n  .mat-list {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n  .grid-container {\\r\\n    grid: auto-flow / 1fr;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n  }\\r\\n\\r\\n  .grid-search {\\r\\n    grid-area: grid-search;\\r\\n    margin-left: 25px;\\r\\n   \\r\\n  }\\r\\n\\r\\n  .grid-item {\\r\\n    grid-area: grid-item;\\r\\n    height: 100%;\\r\\n    margin-left: 25px;\\r\\n    margin-right: 25px;\\r\\n    margin-bottom: 0px;\\r\\n  }\\r\\n\\r\\n  .mat-chip-list {\\r\\n    margin: 1px;\\r\\n  }\\r\\n\\r\\n  .example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .example-full-width {\\r\\n    width: 80%;\\r\\n    margin-top: 15px;\\r\\n    margin-bottom: 15px;\\r\\n    background: rgba(255, 255, 255, 0.671);\\r\\n    border-radius: 15px;\\r\\n  }\\r\\n\\r\\n  .wrapper {\\r\\n    display:inline-block;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 15px;\\r\\n    height: 30px;\\r\\n    }\\r\\n\\r\\n  input {\\r\\n        background-color: white;\\r\\n        border: 3;\\r\\n        width: 200px;\\r\\n        height: 30px;\\r\\n    }\\r\\n\\r\\n  button {\\r\\n        \\r\\n        border: 3;\\r\\n        width: 100px;\\r\\n        height: 38px;\\r\\n    }\\r\\n\\r\\n  .avatar {\\r\\n      vertical-align: middle;\\r\\n      width: 50px;\\r\\n      height: 50px;\\r\\n      border-radius: 50%;\\r\\n    }\\r\\n    \\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLXBhZ2UvdXNlci1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IklBQUk7TUFDRSxnQkFBZ0I7TUFDaEIsWUFBWTtNQUNaLGtCQUFrQjtNQUNsQix5RUFBeUU7RUFDN0U7O0VBRUE7TUFDSSw4Q0FBOEM7TUFDOUMsc0JBQXNCO01BQ3RCLFdBQVc7TUFDWCxZQUFZO01BQ1osa0JBQWtCOztFQUV0Qjs7RUFDQTtNQUNJLGFBQWE7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsZ0NBQWdDO0lBQ2hDLGlCQUFpQjtJQUNqQixZQUFZOztFQUVkOztFQUVBO0lBQ0UsV0FBVztJQUNYLGVBQWU7RUFDakI7O0VBRUE7TUFDSSxrQkFBa0I7TUFDbEIsaUJBQWlCO0VBQ3JCOztFQUVBO01BQ0ksV0FBVztNQUNYLFlBQVk7TUFDWixrQkFBa0I7RUFDdEI7O0VBSUE7R0FDQyxnQkFBZ0I7R0FDaEIseUJBQXlCO0dBQ3pCLGdDQUFnQztHQUNoQyxXQUFXO0dBQ1gsb0JBQW9CO0dBQ3BCLGtCQUFrQjtHQUNsQix5RUFBeUU7QUFDNUU7O0VBRUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQix5RUFBeUU7QUFDN0U7O0VBRUE7SUFDSSxXQUFXO0lBQ1gsV0FBVztJQUNYLHVCQUF1Qjs7QUFFM0I7O0VBRUE7RUFDRSxXQUFXO0FBQ2I7O0VBSUE7SUFDSSxXQUFXO0lBQ1gsWUFBWTtBQUNoQjs7RUFFQTtJQUNJLHFCQUFxQjtJQUNyQixXQUFXO0lBQ1gsWUFBWTtFQUNkOztFQUVBO0lBQ0Usc0JBQXNCO0lBQ3RCLGlCQUFpQjs7RUFFbkI7O0VBQ0E7SUFDRSxvQkFBb0I7SUFDcEIsWUFBWTtJQUNaLGlCQUFpQjtJQUNqQixrQkFBa0I7SUFDbEIsa0JBQWtCO0VBQ3BCOztFQUVBO0lBQ0UsV0FBVztFQUNiOztFQUVBO0lBQ0UsZ0JBQWdCO0lBQ2hCLGdCQUFnQjtJQUNoQixXQUFXO0VBQ2I7O0VBRUE7SUFDRSxVQUFVO0lBQ1YsZ0JBQWdCO0lBQ2hCLG1CQUFtQjtJQUNuQixzQ0FBc0M7SUFDdEMsbUJBQW1CO0VBQ3JCOztFQUVBO0lBQ0Usb0JBQW9CO0lBQ3BCLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsWUFBWTtJQUNaOztFQUVBO1FBQ0ksdUJBQXVCO1FBQ3ZCLFNBQVM7UUFDVCxZQUFZO1FBQ1osWUFBWTtJQUNoQjs7RUFDQTs7UUFFSSxTQUFTO1FBQ1QsWUFBWTtRQUNaLFlBQVk7SUFDaEI7O0VBR0E7TUFDRSxzQkFBc0I7TUFDdEIsV0FBVztNQUNYLFlBQVk7TUFDWixrQkFBa0I7SUFDcEIiLCJmaWxlIjoic3JjL2FwcC91c2VyL3VzZXItcGFnZS91c2VyLXBhZ2UuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIiAgICAudXNlcmNhcmQxIHtcclxuICAgICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgICAgcGFkZGluZzogMHB4O1xyXG4gICAgICBib3JkZXItcmFkaXVzOiA1cHg7XHJcbiAgICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwwLDAsMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcbiAgfVxyXG5cclxuICAubWF0LWNhcmQtYXZhdGFyIHtcclxuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcvYXNzZXRzL3VzZXJQaG90by5wbmcnKTtcclxuICAgICAgdmVydGljYWwtYWxpZ246IG1pZGRsZTtcclxuICAgICAgd2lkdGg6IDUwcHg7XHJcbiAgICAgIGhlaWdodDogNTBweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG5cclxuICB9XHJcbiAgLm1hdC1jYXJkLWFjdGlvbnMge1xyXG4gICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gIH1cclxuXHJcbiAgLmxpc3QtaGVhZGVyLXRpdGxlIHtcclxuICAgIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC41NCk7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDYyKTtcclxuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xyXG4gICAgcGFkZGluZzogMHB4O1xyXG4gICBcclxuICB9XHJcblxyXG4gIC5tYXQtY2FyZC1pbWFnZSB7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIG1heC13aWR0aDogMTAwJTtcclxuICB9XHJcblxyXG4gIC5tYXQtY2FyZC1oZWFkZXIge1xyXG4gICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XHJcbiAgICAgIHBhZGRpbmctdG9wOiAxMHB4OyBcclxuICB9XHJcblxyXG4gIC5tYXQtcmFpc2VkLWJ1dHRvbiB7XHJcbiAgICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICAgIG1hcmdpbi1ib3R0b206IDdweDtcclxuICB9XHJcbiAgXHJcblxyXG5cclxuICAudXNlcmNhcmQyIHtcclxuICAgbWFyZ2luLXRvcDogMzBweDtcclxuICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjU0KTtcclxuICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA2Mik7XHJcbiAgIGhlaWdodDogOTIlO1xyXG4gICBwYWRkaW5nLWJvdHRvbTogMjVweDtcclxuICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xyXG59XHJcblxyXG4udmlld3BvcnQge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBtYXJnaW4tbGVmdDogNDBweDtcclxuICAgIGJveC1zaGFkb3c6IDAgNHB4IDhweCAwIHJnYmEoMCwwLDAsMC4yKSwgMCA2cHggMjBweCAwIHJnYmEoMCwgMCwgMCwgMC4xOSk7XHJcbn1cclxuXHJcbi5jZGstdmlydHVhbC1zY3JvbGwtdmlld3BvcnQge1xyXG4gICAgaGVpZ2h0OiA4MCU7XHJcbiAgICBtYXJnaW46IDBweDtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHdoaXRlO1xyXG5cclxufVxyXG5cclxuLmV4YW1wbGUtZm9ybSAubWF0LWZvcm0tZmllbGQge1xyXG4gIG1hcmdpbjogMHB4O1xyXG59XHJcblxyXG5cclxuXHJcbi5tYXQtbGlzdCB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLmdyaWQtY29udGFpbmVyIHtcclxuICAgIGdyaWQ6IGF1dG8tZmxvdyAvIDFmcjtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAuZ3JpZC1zZWFyY2gge1xyXG4gICAgZ3JpZC1hcmVhOiBncmlkLXNlYXJjaDtcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICBcclxuICB9XHJcbiAgLmdyaWQtaXRlbSB7XHJcbiAgICBncmlkLWFyZWE6IGdyaWQtaXRlbTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiAyNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMHB4O1xyXG4gIH1cclxuXHJcbiAgLm1hdC1jaGlwLWxpc3Qge1xyXG4gICAgbWFyZ2luOiAxcHg7XHJcbiAgfVxyXG5cclxuICAuZXhhbXBsZS1mb3JtIHtcclxuICAgIG1pbi13aWR0aDogMTUwcHg7XHJcbiAgICBtYXgtd2lkdGg6IDUwMHB4O1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgfVxyXG4gIFxyXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xyXG4gICAgd2lkdGg6IDgwJTtcclxuICAgIG1hcmdpbi10b3A6IDE1cHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgYmFja2dyb3VuZDogcmdiYSgyNTUsIDI1NSwgMjU1LCAwLjY3MSk7XHJcbiAgICBib3JkZXItcmFkaXVzOiAxNXB4O1xyXG4gIH1cclxuICBcclxuICAud3JhcHBlciB7XHJcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcclxuICAgIG1hcmdpbi10b3A6IDEwcHg7XHJcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xyXG4gICAgaGVpZ2h0OiAzMHB4O1xyXG4gICAgfVxyXG5cclxuICAgIGlucHV0IHtcclxuICAgICAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgICAgICBib3JkZXI6IDM7XHJcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xyXG4gICAgICAgIGhlaWdodDogMzBweDtcclxuICAgIH1cclxuICAgIGJ1dHRvbiB7XHJcbiAgICAgICAgXHJcbiAgICAgICAgYm9yZGVyOiAzO1xyXG4gICAgICAgIHdpZHRoOiAxMDBweDtcclxuICAgICAgICBoZWlnaHQ6IDM4cHg7XHJcbiAgICB9XHJcblxyXG4gIFxyXG4gICAgLmF2YXRhciB7XHJcbiAgICAgIHZlcnRpY2FsLWFsaWduOiBtaWRkbGU7XHJcbiAgICAgIHdpZHRoOiA1MHB4O1xyXG4gICAgICBoZWlnaHQ6IDUwcHg7XHJcbiAgICAgIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICAgIH1cclxuICAgICJdfQ== */\"","module.exports = \"<!--\\r\\n  fxLayout.lt-sm=\\\"column\\\"  : Will only be applied when the viewport is less thatn small.\\r\\n  fxLayout = \\\"row\\\"         :  If ;using big screens, display data in rows\\r\\n  fxLayout.xs =\\\"column\\\" ;  : using small screens, display data in columns\\r\\n  fxLayoutWrap             : Will wrap this div for us so that flex will be applied\\r\\n  fxLayoutGap = 20%;       : Will give us a gap bewteen each fxFlex\\r\\n-->\\r\\n  <div class = \\\"container\\\" fxLayout = \\\"row\\\" fxLayout.xs = \\\"column\\\" fxLayoutWrap fxLayoutAlign=\\\"center\\\">\\r\\n\\r\\n    <div fxFlex = \\\"40%\\\" fxFlex.xs = \\\"80%\\\">\\r\\n        <mat-card class=\\\"usercard1\\\">\\r\\n                <mat-card-header class=\\\"list-header-title\\\">\\r\\n                    <div mat-card-avatar >\\r\\n                        <img mat-card-image [src]=\\\"imageToShow\\\"\\r\\n                        class =\\\"avatar\\\"\\r\\n                        alt=\\\"Place image title\\\"\\r\\n                        *ngIf=\\\"!isImageLoading; else noImageFound\\\">\\r\\n                    </div>\\r\\n                    <mat-card-title>{{ userData?.name }}</mat-card-title>\\r\\n                    <mat-card-subtitle>{{ userData?.username }}</mat-card-subtitle>\\r\\n                  </mat-card-header>    \\r\\n                  <img mat-card-image [src]=\\\"imageToShow\\\"\\r\\n                    alt=\\\"Place image title\\\"\\r\\n                    *ngIf=\\\"!isImageLoading; else noImageFound\\\">\\r\\n                    \\r\\n               <!--Taking picture as input-->\\r\\n              <div class=\\\"form-group\\\">\\r\\n                <input type=\\\"file\\\" id=\\\"file\\\"(change)=\\\"handleFileInput($event.target.files)\\\">\\r\\n                <button (click)=\\\"uploadFileToActivity()\\\">submit</button>\\r\\n              </div>\\r\\n                    <ng-template #noImageFound>\\r\\n                      <img src=\\\"/assets/userPhoto.png\\\"> \\r\\n                    </ng-template>\\r\\n                <!--img mat-card-image -->\\r\\n                <mat-card-content>\\r\\n                \\r\\n                <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:1\\\" class=\\\"user-links\\\">\\r\\n                    <mat-grid-tile>\\r\\n                          <button mat-raised-button color=\\\"warm\\\">{{ userData?.github }}</button>\\r\\n                    </mat-grid-tile>\\r\\n                    \\r\\n                    <mat-grid-tile>\\r\\n                        <button mat-raised-button color=\\\"primary\\\">{{ userData?.linkedin }}</button>\\r\\n                    </mat-grid-tile>\\r\\n                </mat-grid-list>\\r\\n\\r\\n              </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex = \\\"40%\\\" fxFlex.xs = \\\"80%\\\">\\r\\n      <div class=\\\"usercard2\\\">\\r\\n        <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"2:1\\\">\\r\\n          <!-- Will hold class list -->\\r\\n            <mat-grid-tile>\\r\\n            <div class =\\\"grid-container\\\">  \\r\\n              <div class = \\\"grid-search\\\">\\r\\n                  <div class=\\\"wrapper\\\">\\r\\n                      <!--add a new skill--> \\r\\n                      <form #classForm=\\\"ngForm\\\" (ngSubmit)=\\\"addclass(classForm)\\\" class=\\\"form form-login\\\">\\r\\n                          <input name=\\\"NewClass\\\" id=\\\"login-email\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"Add a new class\\\" required ngModel>\\r\\n                          <button mat-flat-button color=\\\"primary\\\">Add class</button>\\r\\n                      </form>\\r\\n                  </div>\\r\\n              </div>\\r\\n              \\r\\n              <div class = \\\"grid-item\\\">\\r\\n                  <cdk-virtual-scroll-viewport itemSize=\\\"classes.size\\\" class=\\\"viewport\\\">\\r\\n                      <mat-chip-list>\\r\\n                        <mat-chip *ngFor = \\\"let class of userData?.classes\\\">\\r\\n                          {{ class }}\\r\\n                          <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                        </mat-chip>\\r\\n                      </mat-chip-list>\\r\\n                    </cdk-virtual-scroll-viewport>\\r\\n                </div>\\r\\n            </div>    \\r\\n            </mat-grid-tile>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n          <!-- Will hold the skill list -->\\r\\n          <mat-grid-tile>\\r\\n              <div class =\\\"grid-container\\\">  \\r\\n                  <div class = \\\"grid-search\\\">\\r\\n                      <div class=\\\"wrapper\\\">\\r\\n\\r\\n                        <!--add a new skill--> \\r\\n                        <form #skillForm=\\\"ngForm\\\" (ngSubmit)=\\\"addskill(skillForm)\\\" class=\\\"form form-login\\\">\\r\\n                            <input name=\\\"NewSkill\\\" id=\\\"login-email\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"Add a new skill\\\" required ngModel>\\r\\n                            <button mat-flat-button color=\\\"primary\\\">Add Skill</button>\\r\\n                        </form>\\r\\n                          \\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class = \\\"grid-item\\\">\\r\\n                      <cdk-virtual-scroll-viewport itemSize=\\\"skills.size\\\" class=\\\"viewport\\\">\\r\\n                          <mat-chip-list>\\r\\n                            <mat-chip *ngFor = \\\"let skill of userData?.skills\\\">\\r\\n                              {{ skill }}\\r\\n                              <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                            </mat-chip>\\r\\n                            \\r\\n                          </mat-chip-list>\\r\\n                        </cdk-virtual-scroll-viewport>\\r\\n                    </div>\\r\\n                </div>\\r\\n          </mat-grid-tile>\\r\\n        </mat-grid-list>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n\"","import { ConversationService } from './../../shared/dbAccess/conversation.service';\r\nimport { Component, OnInit,ChangeDetectionStrategy } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\r\nimport {MatListModule} from '@angular/material/list';\r\nimport { Router } from '@angular/router';\r\nimport { UserModel } from 'src/app/shared/models/user.model';\r\nimport { FormControl, Form, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { NavbarComponent } from 'src/app/navbar/navbar.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-page',\r\n  templateUrl: './user-page.component.html',\r\n  styleUrls: ['./user-page.component.css']\r\n})\r\nexport class UserPageComponent implements OnInit {\r\n  //Will hold our user data.\r\n  userData: UserModel[];\r\n  \r\n  //Auto complete variables.\r\n  classesForm: FormGroup;\r\n  filteredUsers: String[] = [];\r\n  isLoading = false;\r\n\r\n  //regular expression to check empty string\r\n  regex = \"^\\\\s+$\";\r\n\r\n  //place holder of image\r\n  public imageToShow: any;\r\n\r\n  //default variable for selected file.\r\n  fileToUpload: File = null;\r\n\r\n  //get other user\r\n  mem:any;\r\n  \r\n  constructor(private userService : UserService,private router : Router, private formBuilder: FormBuilder,private conver: ConversationService, private getmem :NavbarComponent)\r\n   { \r\n     this.userService.getUserdetails().subscribe(userData => this.userData = userData);\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.profilePicture();\r\n    this.classesForm = this.formBuilder.group({userInput: null});\r\n    \r\n  }\r\n\r\n  //it will display other members profile from nebvar \r\n  otherUserProfile(){\r\n    this.userService.getUserdetails_(this.getmem.mem).subscribe(userData=> this.userData =userData);\r\n    console.log(\"other User profile \"+ this.userData)\r\n  }\r\n\r\n\r\ncreateImageFromBlob(image: Blob) {\r\n  let reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => {\r\n    \r\n     //image to show is the final place holder of profile picture\r\n     this.imageToShow = reader.result;\r\n     return this.imageToShow\r\n  }, false);\r\n\r\n  if (image) {\r\n     reader.readAsDataURL(image);\r\n  }\r\n}\r\n\r\nprofilePicture(){\r\n   this.userService.getPicture().subscribe((picture:Blob)=>{\r\n     this.createImageFromBlob(picture)\r\n     \r\n     //console.log(picture)\r\n   })\r\n }\r\n //function which you use in (change)-event of your file input tag:\r\n handleFileInput(files: FileList) {\r\n     this.fileToUpload = files.item(0);\r\n }\r\n\r\n uploadFileToActivity() {\r\n   this.userService.uploadProfilePicture(this.fileToUpload).subscribe((data: any)=>{\r\n     //console.log(data)\r\n   });\r\n}\r\n\r\naddskill(newSkill){\r\n  //return if input is empty string\r\n  if(newSkill.value[\"NewSkill\"]==this.regex ){\r\n\r\n    console.log(\"it is an empty string  \")\r\n    return 0;\r\n  }\r\n\r\n  //taking values from input\r\n  let newObject = Object.assign(newSkill.value[\"NewSkill\"])\r\n  //console.log(newObject)\r\n  //copying all the skills as object that are already exist\r\n  let skills: string []  = this.userData[\"skills\"];\r\n  \r\n  \r\n //checking if the skill is already exist or not\r\n  for(var iter in skills){\r\n   if(newObject== skills[iter]){\r\n       //console.log(skills[iter],\" already exits !\")\r\n       return 0;\r\n   }\r\n  }\r\n  //Combining input skill and previous skills\r\n  newObject= skills.concat(newObject)\r\n  this.userService.updateUserSkill(newObject).subscribe(data => {\r\n    //console.log(data)\r\n  });\r\n}\r\n\r\naddclass(newclass){\r\n  //return if input is empty string\r\n  if(newclass.value[\"NewClass\"]==this.regex){\r\n    console.log(\"it is an empty strings\")\r\n    return 0;\r\n  }\r\n  \r\n  //taking values from input\r\n  let newObject = Object.assign(newclass.value[\"NewClass\"])\r\n  //console.log(newObject)\r\n  //copying all the classes as object that are already exist\r\n  let classes: string []  = this.userData[\"classes\"];\r\n  \r\n  \r\n //checking if the skill is already exist or not\r\n  for(var iter in classes){\r\n   if(newObject== classes[iter]){\r\n      // console.log(classes[iter],\" already exits !\")\r\n       return 0;\r\n   }\r\n  }\r\n  //Combining input skill and previous skills\r\n  newObject= classes.concat(newObject)\r\n  this.userService.updateUserclass(newObject).subscribe(data => {\r\n    //console.log(data)\r\n  });\r\n\r\n}\r\n\r\n\r\n\r\n}\r\n","import { UpdateUserdataComponent } from './update-userdata/update-userdata.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserPageComponent } from './user-page/user-page.component';\n\n\nconst routes: Routes = [\n  {\n    //This is the default path the user will enter if the url is /user\n    path:'',\n    component: UserPageComponent\n\n  } , {\n    path:'update-userdata',\n    component: UpdateUserdataComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserPageComponent } from './user-page/user-page.component';\n\n//Material Components\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule }  from '@angular/material/grid-list';\nimport { MatListModule }  from '@angular/material/list';\nimport { UpdateUserdataComponent } from './update-userdata/update-userdata.component';\n\n@NgModule({\n  declarations: [UserPageComponent, UpdateUserdataComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n\n    //Angular Material\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatGridListModule,\n    MatListModule,\n    ScrollDispatchModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n\n    //Flex Module\n    FlexLayoutModule,\n\n    //Forms\n    FormsModule,\n    ReactiveFormsModule,\n\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":""}