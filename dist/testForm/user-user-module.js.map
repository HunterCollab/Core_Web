{"version":3,"sources":["webpack:///./src/app/user/edit-user-form/edit-user-form.component.css","webpack:///./src/app/user/edit-user-form/edit-user-form.component.html","webpack:///./src/app/user/edit-user-form/edit-user-form.component.ts","webpack:///./src/app/user/update-userdata/update-userdata.component.css","webpack:///./src/app/user/update-userdata/update-userdata.component.html","webpack:///./src/app/user/update-userdata/update-userdata.component.ts","webpack:///./src/app/user/user-page/user-page.component.css","webpack:///./src/app/user/user-page/user-page.component.html","webpack:///./src/app/user/user-page/user-page.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvZWRpdC11c2VyLWZvcm0vZWRpdC11c2VyLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 mat-dialog-title> Update User Details </h2>\\r\\n\\r\\n<mat-dialog-content>\\r\\n    <div class = \\\"container\\\">\\r\\n        <form #form = \\\"ngForm\\\" (ngSubmit) = \\\"update(form.value)\\\">\\r\\n\\r\\n            <mat-form-field>\\r\\n                <input [(ngModel)] = \\\"data.userData['name']\\\" name = \\\"username\\\" id = \\\"username\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\r\\n                    #username = \\\"ngModel\\\" matInput placeholder = \\\"User Name...\\\" required>\\r\\n            </mat-form-field>\\r\\n            <br>\\r\\n            <mat-form-field>\\r\\n                <input [(ngModel)] = \\\"data.userData['github']\\\" name = \\\"github\\\" id = \\\"github\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\r\\n                    #github = \\\"ngModel\\\" matInput placeholder = \\\"Github...\\\" required>\\r\\n            </mat-form-field>\\r\\n            <br>\\r\\n            <mat-form-field>\\r\\n                <input [(ngModel)] = \\\"data.userData['linkedin']\\\" name = \\\"linkedin\\\" id = \\\"linkedin\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\r\\n                    #linkedin = \\\"ngModel\\\" matInput placeholder = \\\"LinkedIn...\\\" required>\\r\\n            </mat-form-field>\\r\\n            <br>\\r\\n            <button mat-raised-button>Update</button>\\r\\n            <br>\\r\\n        </form>\\r\\n      </div>\\r\\n</mat-dialog-content>\"","import { UserService } from 'src/app/shared/dbAccess/user.service';\r\nimport { UserModel } from 'src/app/shared/models/user.model';\r\nimport { CollabModel } from './../../shared/models/collab.model';\r\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\r\nimport { Component, OnInit, Input, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\n\r\n@Component({\r\n  selector: 'app-edit-user-form',\r\n  templateUrl: './edit-user-form.component.html',\r\n  styleUrls: ['./edit-user-form.component.css']\r\n})\r\nexport class EditUserFormComponent implements OnInit {\r\n  userData: UserModel;\r\n\r\n  constructor(\r\n    private userService: UserService,\r\n    private _formBuilder: FormBuilder,\r\n    //Handles the openning/closing of the Dialog\r\n    public dialogRef: MatDialogRef<EditUserFormComponent>,\r\n    //Handles passing of data from/to component opening the dialog\r\n    @Inject(MAT_DIALOG_DATA) public data: any){\r\n\r\n    }\r\n  collabData: CollabModel;\r\n\r\n  ngOnInit() {\r\n\r\n    \r\n  }\r\n\r\n  update(userData){\r\n\r\n    this.userService.updateUserProfile(userData).subscribe(result => { console.log(result) });\r\n    this.dialogRef.close();\r\n  }\r\n\r\n}\r\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXBkYXRlLXVzZXJkYXRhL3VwZGF0ZS11c2VyZGF0YS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\r\\n  update-userdata works!\\r\\n</p>\\r\\n\"","import { Component, OnInit } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\r\n\r\n@Component({\r\n  selector: 'update-userdata',\r\n  templateUrl: './update-userdata.component.html',\r\n  styleUrls: ['./update-userdata.component.css']\r\n})\r\nexport class UpdateUserdataComponent implements OnInit {\r\n\r\n  constructor(private userservice: UserService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","module.exports = \"    .usercard1 {\\r\\n      margin-top: 30px;\\r\\n      padding: 0px;\\r\\n      border-radius: 5px;\\r\\n      box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n  }\\r\\n\\r\\n  .mat-card-avatar {\\r\\n      background-image: url('/assets/userPhoto.png');\\r\\n      background-size: cover;\\r\\n\\r\\n  }\\r\\n\\r\\n  .mat-card-actions {\\r\\n      display: flex;\\r\\n  }\\r\\n\\r\\n  .list-header-title {\\r\\n    color: rgba(0, 0, 0, .54);\\r\\n    background: rgba(0, 0, 0, 0.062);\\r\\n    font-weight: bold;\\r\\n    padding: 0px;\\r\\n   \\r\\n  }\\r\\n\\r\\n  .mat-card-header {\\r\\n      padding-left: 10px;\\r\\n      padding-top: 10px; \\r\\n  }\\r\\n\\r\\n  .mat-raised-button {\\r\\n      width: 100%;\\r\\n      height: 100%;\\r\\n      margin-bottom: 7px;\\r\\n  }\\r\\n\\r\\n  .usercard2 {\\r\\n   margin-top: 30px;\\r\\n   color: rgba(0, 0, 0, .54);\\r\\n   background: rgba(0, 0, 0, 0.062);\\r\\n   height: 86.5%;\\r\\n   padding-bottom: 25px;\\r\\n   border-radius: 5px;\\r\\n   box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n  .viewport {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n    margin-left: 40px;\\r\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\r\\n}\\r\\n\\r\\n  .cdk-virtual-scroll-viewport {\\r\\n    height: 70%;\\r\\n    margin: 0px;\\r\\n    background-color: white;\\r\\n\\r\\n}\\r\\n\\r\\n  .example-form .mat-form-field {\\r\\n  margin: 0px;\\r\\n}\\r\\n\\r\\n  .mat-list {\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n}\\r\\n\\r\\n  .grid-container {\\r\\n    grid: auto-flow / 1fr;\\r\\n    width: 100%;\\r\\n    height: 100%;\\r\\n  }\\r\\n\\r\\n  .grid-search {\\r\\n    grid-area: grid-search;\\r\\n    margin-left: 25px;\\r\\n   \\r\\n  }\\r\\n\\r\\n  .grid-item {\\r\\n    grid-area: grid-item;\\r\\n    height: 100%;\\r\\n    margin-left: 25px;\\r\\n    margin-right: 25px;\\r\\n    margin-bottom: 0px;\\r\\n  }\\r\\n\\r\\n  .mat-chip-list {\\r\\n    margin: 1px;\\r\\n  }\\r\\n\\r\\n  .example-form {\\r\\n    min-width: 150px;\\r\\n    max-width: 500px;\\r\\n    width: 100%;\\r\\n  }\\r\\n\\r\\n  .example-full-width {\\r\\n    width: 80%;\\r\\n    margin-top: 15px;\\r\\n    margin-bottom: 15px;\\r\\n    background: rgba(255, 255, 255, 0.671);\\r\\n    border-radius: 15px;\\r\\n  }\\r\\n\\r\\n  .wrapper {\\r\\n    display:inline-block;\\r\\n    margin-top: 10px;\\r\\n    margin-bottom: 15px;\\r\\n    height: 30px;\\r\\n    }\\r\\n\\r\\n  input {\\r\\n        background-color: white;\\r\\n        border: 3;\\r\\n        width: 200px;\\r\\n        height: 30px;\\r\\n    }\\r\\n\\r\\n  button {\\r\\n        \\r\\n        border: 3;\\r\\n        width: 100px;\\r\\n        height: 38px;\\r\\n    }\\r\\n\\r\\n  .image-background {\\r\\n   background: #555555;\\r\\n   display: table;\\r\\n   width: 100%;\\r\\n   height: 100%;\\r\\n   position: relative;\\r\\n\\r\\n   overflow: hidden;\\r\\n }\\r\\n\\r\\n  .mat-card-image {\\r\\n  margin: 0px;\\r\\n  margin-left: 8.099%;\\r\\n  margin-right: 10%;\\r\\n  display: block;\\r\\n  height: 450px;\\r\\n  max-height: 450px;\\r\\n  max-width: 85%;\\r\\n}\\r\\n\\r\\n  .mat-stroked-button  {\\r\\n  width: 7%;\\r\\n  margin-left: auto;\\r\\n  margin-right: 10px; \\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLXBhZ2UvdXNlci1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IklBQUk7TUFDRSxnQkFBZ0I7TUFDaEIsWUFBWTtNQUNaLGtCQUFrQjtNQUNsQix5RUFBeUU7RUFDN0U7O0VBRUE7TUFDSSw4Q0FBOEM7TUFDOUMsc0JBQXNCOztFQUUxQjs7RUFDQTtNQUNJLGFBQWE7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsZ0NBQWdDO0lBQ2hDLGlCQUFpQjtJQUNqQixZQUFZOztFQUVkOztFQUVBO01BQ0ksa0JBQWtCO01BQ2xCLGlCQUFpQjtFQUNyQjs7RUFFQTtNQUNJLFdBQVc7TUFDWCxZQUFZO01BQ1osa0JBQWtCO0VBQ3RCOztFQUlBO0dBQ0MsZ0JBQWdCO0dBQ2hCLHlCQUF5QjtHQUN6QixnQ0FBZ0M7R0FDaEMsYUFBYTtHQUNiLG9CQUFvQjtHQUNwQixrQkFBa0I7R0FDbEIseUVBQXlFO0FBQzVFOztFQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUI7SUFDakIseUVBQXlFO0FBQzdFOztFQUVBO0lBQ0ksV0FBVztJQUNYLFdBQVc7SUFDWCx1QkFBdUI7O0FBRTNCOztFQUVBO0VBQ0UsV0FBVztBQUNiOztFQUlBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0VBRUE7SUFDSSxxQkFBcUI7SUFDckIsV0FBVztJQUNYLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixpQkFBaUI7O0VBRW5COztFQUNBO0lBQ0Usb0JBQW9CO0lBQ3BCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiOztFQUVBO0lBQ0UsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsc0NBQXNDO0lBQ3RDLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWjs7RUFFQTtRQUNJLHVCQUF1QjtRQUN2QixTQUFTO1FBQ1QsWUFBWTtRQUNaLFlBQVk7SUFDaEI7O0VBRUE7O1FBRUksU0FBUztRQUNULFlBQVk7UUFDWixZQUFZO0lBQ2hCOztFQUdIO0dBQ0UsbUJBQW1CO0dBQ25CLGNBQWM7R0FDZCxXQUFXO0dBQ1gsWUFBWTtHQUNaLGtCQUFrQjs7R0FFbEIsZ0JBQWdCO0NBQ2xCOztFQUlBO0VBQ0MsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsY0FBYztFQUNkLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7RUFFQTtFQUNFLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLXBhZ2UvdXNlci1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgICAgLnVzZXJjYXJkMSB7XHJcbiAgICAgIG1hcmdpbi10b3A6IDMwcHg7XHJcbiAgICAgIHBhZGRpbmc6IDBweDtcclxuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xyXG4gICAgICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xyXG4gIH1cclxuXHJcbiAgLm1hdC1jYXJkLWF2YXRhciB7XHJcbiAgICAgIGJhY2tncm91bmQtaW1hZ2U6IHVybCgnL2Fzc2V0cy91c2VyUGhvdG8ucG5nJyk7XHJcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XHJcblxyXG4gIH1cclxuICAubWF0LWNhcmQtYWN0aW9ucyB7XHJcbiAgICAgIGRpc3BsYXk6IGZsZXg7XHJcbiAgfVxyXG5cclxuICAubGlzdC1oZWFkZXItdGl0bGUge1xyXG4gICAgY29sb3I6IHJnYmEoMCwgMCwgMCwgLjU0KTtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNjIpO1xyXG4gICAgZm9udC13ZWlnaHQ6IGJvbGQ7XHJcbiAgICBwYWRkaW5nOiAwcHg7XHJcbiAgIFxyXG4gIH1cclxuXHJcbiAgLm1hdC1jYXJkLWhlYWRlciB7XHJcbiAgICAgIHBhZGRpbmctbGVmdDogMTBweDtcclxuICAgICAgcGFkZGluZy10b3A6IDEwcHg7IFxyXG4gIH1cclxuXHJcbiAgLm1hdC1yYWlzZWQtYnV0dG9uIHtcclxuICAgICAgd2lkdGg6IDEwMCU7XHJcbiAgICAgIGhlaWdodDogMTAwJTtcclxuICAgICAgbWFyZ2luLWJvdHRvbTogN3B4O1xyXG4gIH1cclxuICBcclxuXHJcblxyXG4gIC51c2VyY2FyZDIge1xyXG4gICBtYXJnaW4tdG9wOiAzMHB4O1xyXG4gICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuNTQpO1xyXG4gICBiYWNrZ3JvdW5kOiByZ2JhKDAsIDAsIDAsIDAuMDYyKTtcclxuICAgaGVpZ2h0OiA4Ni41JTtcclxuICAgcGFkZGluZy1ib3R0b206IDI1cHg7XHJcbiAgIGJvcmRlci1yYWRpdXM6IDVweDtcclxuICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLDAsMCwwLjIpLCAwIDZweCAyMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE5KTtcclxufVxyXG5cclxuLnZpZXdwb3J0IHtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgbWFyZ2luLWxlZnQ6IDQwcHg7XHJcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xyXG59XHJcblxyXG4uY2RrLXZpcnR1YWwtc2Nyb2xsLXZpZXdwb3J0IHtcclxuICAgIGhlaWdodDogNzAlO1xyXG4gICAgbWFyZ2luOiAwcHg7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuXHJcbn1cclxuXHJcbi5leGFtcGxlLWZvcm0gLm1hdC1mb3JtLWZpZWxkIHtcclxuICBtYXJnaW46IDBweDtcclxufVxyXG5cclxuXHJcblxyXG4ubWF0LWxpc3Qge1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbn1cclxuXHJcbi5ncmlkLWNvbnRhaW5lciB7XHJcbiAgICBncmlkOiBhdXRvLWZsb3cgLyAxZnI7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICB9XHJcbiAgXHJcbiAgLmdyaWQtc2VhcmNoIHtcclxuICAgIGdyaWQtYXJlYTogZ3JpZC1zZWFyY2g7XHJcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcclxuICAgXHJcbiAgfVxyXG4gIC5ncmlkLWl0ZW0ge1xyXG4gICAgZ3JpZC1hcmVhOiBncmlkLWl0ZW07XHJcbiAgICBoZWlnaHQ6IDEwMCU7XHJcbiAgICBtYXJnaW4tbGVmdDogMjVweDtcclxuICAgIG1hcmdpbi1yaWdodDogMjVweDtcclxuICAgIG1hcmdpbi1ib3R0b206IDBweDtcclxuICB9XHJcblxyXG4gIC5tYXQtY2hpcC1saXN0IHtcclxuICAgIG1hcmdpbjogMXB4O1xyXG4gIH1cclxuXHJcbiAgLmV4YW1wbGUtZm9ybSB7XHJcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xyXG4gICAgbWF4LXdpZHRoOiA1MDBweDtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gIH1cclxuICBcclxuICAuZXhhbXBsZS1mdWxsLXdpZHRoIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbiAgICBtYXJnaW4tdG9wOiAxNXB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42NzEpO1xyXG4gICAgYm9yZGVyLXJhZGl1czogMTVweDtcclxuICB9XHJcbiAgXHJcbiAgLndyYXBwZXIge1xyXG4gICAgZGlzcGxheTppbmxpbmUtYmxvY2s7XHJcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xyXG4gICAgbWFyZ2luLWJvdHRvbTogMTVweDtcclxuICAgIGhlaWdodDogMzBweDtcclxuICAgIH1cclxuXHJcbiAgICBpbnB1dCB7XHJcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XHJcbiAgICAgICAgYm9yZGVyOiAzO1xyXG4gICAgICAgIHdpZHRoOiAyMDBweDtcclxuICAgICAgICBoZWlnaHQ6IDMwcHg7XHJcbiAgICB9XHJcblxyXG4gICAgYnV0dG9uIHtcclxuICAgICAgICBcclxuICAgICAgICBib3JkZXI6IDM7XHJcbiAgICAgICAgd2lkdGg6IDEwMHB4O1xyXG4gICAgICAgIGhlaWdodDogMzhweDtcclxuICAgIH1cclxuXHJcbiAgXHJcbiAuaW1hZ2UtYmFja2dyb3VuZCB7XHJcbiAgIGJhY2tncm91bmQ6ICM1NTU1NTU7XHJcbiAgIGRpc3BsYXk6IHRhYmxlO1xyXG4gICB3aWR0aDogMTAwJTtcclxuICAgaGVpZ2h0OiAxMDAlO1xyXG4gICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcblxyXG4gICBvdmVyZmxvdzogaGlkZGVuO1xyXG4gfVxyXG5cclxuIFxyXG5cclxuIC5tYXQtY2FyZC1pbWFnZSB7XHJcbiAgbWFyZ2luOiAwcHg7XHJcbiAgbWFyZ2luLWxlZnQ6IDguMDk5JTtcclxuICBtYXJnaW4tcmlnaHQ6IDEwJTtcclxuICBkaXNwbGF5OiBibG9jaztcclxuICBoZWlnaHQ6IDQ1MHB4O1xyXG4gIG1heC1oZWlnaHQ6IDQ1MHB4O1xyXG4gIG1heC13aWR0aDogODUlO1xyXG59XHJcblxyXG4ubWF0LXN0cm9rZWQtYnV0dG9uICB7XHJcbiAgd2lkdGg6IDclO1xyXG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xyXG4gIG1hcmdpbi1yaWdodDogMTBweDsgXHJcbn1cclxuIl19 */\"","module.exports = \"<!--\\r\\n  fxLayout.lt-sm=\\\"column\\\"  : Will only be applied when the viewport is less thatn small.\\r\\n  fxLayout = \\\"row\\\"         :  If ;using big screens, display data in rows\\r\\n  fxLayout.xs =\\\"column\\\" ;  : using small screens, display data in columns\\r\\n  fxLayoutWrap             : Will wrap this div for us so that flex will be applied\\r\\n  fxLayoutGap = 20%;       : Will give us a gap bewteen each fxFlex\\r\\n-->\\r\\n  <div class = \\\"container\\\" fxLayout = \\\"row\\\" fxLayout.xs = \\\"column\\\" fxLayoutWrap fxLayoutAlign=\\\"center\\\">\\r\\n\\r\\n    <div fxFlex = \\\"40%\\\" fxFlex.xs = \\\"80%\\\">\\r\\n        <mat-card class=\\\"usercard1\\\">\\r\\n          \\r\\n                <mat-card-header class=\\\"list-header-title\\\">\\r\\n\\r\\n                    <div mat-card-avatar></div>\\r\\n                      <mat-card-title>{{ userData?.name }}</mat-card-title>\\r\\n                      <mat-card-subtitle>{{ userData?.username }}</mat-card-subtitle>\\r\\n                      <button mat-stroked-button color=\\\"warm\\\" (click) = \\\"openDialog()\\\">Edit</button>\\r\\n              \\r\\n                  </mat-card-header>  \\r\\n\\r\\n                  <div class=\\\"image-background\\\">\\r\\n                    <div class=\\\"image-container\\\">\\r\\n                        <img mat-card-image [src]=\\\"imageToShow\\\" \\r\\n                          alt=\\\"Image not found\\\" onerror=\\\"this.onerror=null; this.src = 'assets/userPhoto.png';\\\">\\r\\n                    </div>\\r\\n                  </div>\\r\\n\\r\\n                     <!--Taking picture as input-->\\r\\n                <div class=\\\"form-group\\\">\\r\\n\\r\\n                  <input  type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\r\\n                  <button mat-button color=\\\"primary\\\" (click)=\\\"uploadFileToActivity()\\\">submit</button>\\r\\n                </div>\\r\\n\\r\\n                <ng-template #noImageFound>\\r\\n                  <img src=\\\"/assets/userPhoto.png\\\"> \\r\\n                </ng-template>\\r\\n                <!--img mat-card-image -->\\r\\n                <mat-card-content>\\r\\n                \\r\\n                <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:1\\\" class=\\\"user-links\\\">\\r\\n                    <mat-grid-tile>\\r\\n                          <button mat-raised-button color=\\\"warm\\\">{{ userData?.github }}</button>\\r\\n                    </mat-grid-tile>\\r\\n                    \\r\\n                    <mat-grid-tile>\\r\\n                        <button mat-raised-button color=\\\"primary\\\">{{ userData?.linkedin }}</button>\\r\\n                    </mat-grid-tile>\\r\\n                </mat-grid-list>\\r\\n\\r\\n              </mat-card-content>\\r\\n        </mat-card>\\r\\n    </div>\\r\\n\\r\\n    <div fxFlex = \\\"40%\\\" fxFlex.xs = \\\"80%\\\">\\r\\n      <div class=\\\"usercard2\\\">\\r\\n        <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"2:1\\\">\\r\\n          <!-- Will hold class list -->\\r\\n            <mat-grid-tile>\\r\\n            <div class =\\\"grid-container\\\">  \\r\\n              <div class = \\\"grid-search\\\">\\r\\n                  <div class=\\\"wrapper\\\">\\r\\n                       <!--add a new skill--> \\r\\n                       <form #classForm=\\\"ngForm\\\" (ngSubmit)=\\\"addclass(classForm)\\\" class=\\\"form form-login\\\">\\r\\n                          <input name=\\\"NewClass\\\" id=\\\"login-email\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"Add a new class\\\" required ngModel>\\r\\n                          <button mat-flat-button color=\\\"primary\\\">Add class</button>\\r\\n                      </form>\\r\\n                  </div>\\r\\n              </div>\\r\\n              \\r\\n              <div class = \\\"grid-item\\\">\\r\\n                  <cdk-virtual-scroll-viewport itemSize=\\\"classes.size\\\" class=\\\"viewport\\\">\\r\\n                      <mat-chip-list>\\r\\n                        <mat-chip *ngFor = \\\"let class of userData?.classes\\\">\\r\\n                          {{ class }}\\r\\n                          <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                        </mat-chip>\\r\\n                      </mat-chip-list>\\r\\n                    </cdk-virtual-scroll-viewport>\\r\\n                </div>\\r\\n            </div>    \\r\\n            </mat-grid-tile>\\r\\n            <br>\\r\\n            <br>\\r\\n            <br>\\r\\n          <!-- Will hold the skill list -->\\r\\n          <mat-grid-tile>\\r\\n              <div class =\\\"grid-container\\\">  \\r\\n                  <div class = \\\"grid-search\\\">\\r\\n                      <div class=\\\"wrapper\\\">\\r\\n\\r\\n                         <!--add a new skill--> \\r\\n                        <form #skillForm=\\\"ngForm\\\" (ngSubmit)=\\\"addskill(skillForm)\\\" class=\\\"form form-login\\\">\\r\\n                            <input name=\\\"NewSkill\\\" id=\\\"skillForm\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"Add a new skill\\\" required ngModel>\\r\\n                            <button mat-flat-button color=\\\"primary\\\">Add Skill</button>\\r\\n                        </form>\\r\\n\\r\\n                      </div>\\r\\n                  </div>\\r\\n                  <div class = \\\"grid-item\\\">\\r\\n                      <cdk-virtual-scroll-viewport itemSize=\\\"skills.size\\\" class=\\\"viewport\\\">\\r\\n                          <mat-chip-list>\\r\\n                            <mat-chip *ngFor = \\\"let skill of userData?.skills\\\">\\r\\n                              {{ skill }}\\r\\n                              <mat-icon matChipRemove>cancel</mat-icon>\\r\\n                            </mat-chip>\\r\\n                            \\r\\n                          </mat-chip-list>\\r\\n                        </cdk-virtual-scroll-viewport>\\r\\n                    </div>\\r\\n                </div>\\r\\n          </mat-grid-tile>\\r\\n        </mat-grid-list>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\"","import { EditUserFormComponent } from './../edit-user-form/edit-user-form.component';\r\nimport { Component, OnInit,ChangeDetectionStrategy } from '@angular/core';\r\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { UserModel } from 'src/app/shared/models/user.model';\r\nimport { FormControl, Form, FormGroup, FormBuilder } from '@angular/forms';\r\nimport { Observable } from 'rxjs';\r\nimport { MatDialog } from '@angular/material/dialog';\r\nimport { NavbarComponent } from 'src/app/navbar/navbar.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-user-page',\r\n  templateUrl: './user-page.component.html',\r\n  styleUrls: ['./user-page.component.css']\r\n})\r\nexport class UserPageComponent implements OnInit {\r\n  //Will hold our user data.\r\n  userData: UserModel[];\r\n  username: string;\r\n  \r\n  //Auto complete variables.\r\n  classesForm: FormGroup;\r\n  filteredUsers: String[] = [];\r\n  isLoading = false;\r\n  userClass:UserModel[\"classes\"];\r\n  userSkill:UserModel[\"skills\"];\r\n  \r\n  //regular expression to check empty string\r\n  regex = \"^\\\\s+$\";\r\n\r\n\r\n  //place holder of image\r\n  imageToShow: any;\r\n\r\n  //default variable for selected file.\r\n  fileToUpload: File = null;\r\n\r\n  /*\r\n  TODO: \r\n    DISPLAY Image\r\n    Edit all fields\r\n    Autocomplete on edit skills and classes. \r\n\r\n  */\r\n  constructor(\r\n    private userService : UserService,\r\n    private router : Router, \r\n    private formBuilder: FormBuilder,\r\n    private activeRoute: ActivatedRoute,\r\n    public dialog: MatDialog,\r\n    private getmem :NavbarComponent)\r\n   { \r\n    this.activeRoute.paramMap\r\n    .subscribe(params => {\r\n      this.username = params.get('username');\r\n    })\r\n\r\n   \r\n   }\r\n\r\n  ngOnInit() {\r\n\r\n    this.loadUserData(this.username);\r\n    this.classesForm = this.formBuilder.group({\r\n      userInput: null\r\n      \r\n    })\r\n  }\r\n\r\nloadUserData(username: string){\r\n\r\n  if(username){\r\n    this.userService.getMemberdetails(username).subscribe(userData => {\r\n      this.userData = userData;\r\n      this.userClass= userData[\"classes\"]\r\n      this.userSkill= userData[\"skills\"]\r\n      this.profileMemberPicture(username);\r\n  \r\n    });\r\n  } else {\r\n    this.userService.getUserdetails().subscribe(userData => {\r\n      this.userData = userData;\r\n      this.userClass= userData[\"classes\"]\r\n      this.userSkill= userData[\"skills\"]\r\n      this.profilePicture();\r\n  \r\n    });\r\n  }\r\n}  \r\n\r\ncreateImageFromBlob(image: Blob) {\r\n  let reader = new FileReader();\r\n  reader.addEventListener(\"load\", () => {\r\n    \r\n     //image to show is the final place holder of profile picture\r\n     this.imageToShow = reader.result;\r\n     return this.imageToShow\r\n  }, false);\r\n\r\n  if (image) {\r\n     reader.readAsDataURL(image);\r\n  }\r\n}\r\n\r\nprofilePicture(){\r\n   this.userService.getPicture().subscribe((picture:Blob)=>{\r\n     this.createImageFromBlob(picture)\r\n     //console.log(picture)\r\n   })\r\n }\r\n profileMemberPicture(username: string){\r\n  this.userService.getMemberPicture(username).subscribe((picture:Blob)=>{\r\n    this.createImageFromBlob(picture)\r\n    //console.log(picture)\r\n  })\r\n}\r\n //function which you use in (change)-event of your file input tag:\r\n handleFileInput(files: FileList) {\r\n     this.fileToUpload = files.item(0);\r\n }\r\n\r\n uploadFileToActivity() {\r\n   this.userService.uploadProfilePicture(this.fileToUpload).subscribe((data: any)=>{\r\n     console.log(data)\r\n   })\r\n //   this.fileUploadService.postFile(this.fileToUpload).subscribe(data => {\r\n //     // do something, if upload success\r\n //     }, error => {\r\n //       console.log(error);\r\n //     });\r\n  }\r\n\r\n  openDialog(): void {\r\n    //Dialog refeerence\r\n    const dialogRef = this.dialog.open(EditUserFormComponent, {\r\n      data: {\r\n        userData: this.userData\r\n      }\r\n    });\r\n\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      console.log('The dialog was closed');\r\n    });\r\n  }\r\n  addskill(newSkill){\r\n    //return if input is empty string\r\n    if(newSkill.value[\"NewSkill\"]==this.regex ){\r\n  \r\n      console.log(\"it is an empty string  \")\r\n      return 0;\r\n    }\r\n  \r\n    //taking values from input\r\n    let newObject = Object.assign(newSkill.value[\"NewSkill\"])\r\n    //console.log(newObject)\r\n    //copying all the skills as object that are already exist\r\n    let skills: string []  = this.userData[\"skills\"];\r\n    \r\n    \r\n   //checking if the skill is already exist or not\r\n    for(var iter in skills){\r\n     if(newObject== skills[iter]){\r\n         //console.log(skills[iter],\" already exits !\")\r\n         return 0;\r\n     }\r\n    }\r\n    //Combining input skill and previous skills\r\n    newObject= skills.concat(newObject)\r\n    this.userService.updateUserSkill(newObject).subscribe(data => {\r\n      //console.log(data)\r\n    });\r\n  }\r\n  \r\n  addclass(newclass){\r\n    //return if input is empty string\r\n    if(newclass.value[\"NewClass\"]==this.regex){\r\n      console.log(\"it is an empty strings\")\r\n      return 0;\r\n    }\r\n    \r\n    //taking values from input\r\n    let newObject = Object.assign(newclass.value[\"NewClass\"])\r\n    //console.log(newObject)\r\n    //copying all the classes as object that are already exist\r\n    let classes: string []  = this.userData[\"classes\"];\r\n    \r\n    \r\n   //checking if the skill is already exist or not\r\n    for(var iter in classes){\r\n     if(newObject== classes[iter]){\r\n        // console.log(classes[iter],\" already exits !\")\r\n         return 0;\r\n     }\r\n    }\r\n    //Combining input skill and previous skills\r\n    newObject= classes.concat(newObject)\r\n    this.userService.updateUserclass(newObject).subscribe(data => {\r\n      //console.log(data)\r\n    });\r\n  \r\n  }\r\n  \r\n  \r\n\r\n\r\n}\r\n","import { UpdateUserdataComponent } from './update-userdata/update-userdata.component';\r\nimport { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { UserPageComponent } from './user-page/user-page.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path:':username',\r\n    component: UserPageComponent\r\n  },\r\n  {\r\n    //This is the default path the user will enter if the url is /user\r\n    path:'',\r\n    component: UserPageComponent\r\n\r\n  },\r\n  \r\n  {\r\n    path:'update-userdata',\r\n    component: UpdateUserdataComponent\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class UserRoutingModule { }\r\n","import { MatDialogModule } from '@angular/material/dialog';\r\nimport { MatExpansionModule } from '@angular/material/expansion';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\n\r\nimport { UserRoutingModule } from './user-routing.module';\r\nimport { UserPageComponent } from './user-page/user-page.component';\r\n\r\n//Material Components\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatTabsModule } from '@angular/material/tabs';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { MatGridListModule }  from '@angular/material/grid-list';\r\nimport { MatListModule }  from '@angular/material/list';\r\nimport { UpdateUserdataComponent } from './update-userdata/update-userdata.component';\r\nimport { EditUserFormComponent } from './edit-user-form/edit-user-form.component';\r\n\r\n@NgModule({\r\n  declarations: [UserPageComponent, UpdateUserdataComponent, EditUserFormComponent],\r\n  imports: [\r\n    CommonModule,\r\n    UserRoutingModule,\r\n\r\n    //Angular Material\r\n    MatTabsModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    MatButtonModule,\r\n    MatInputModule,\r\n    MatGridListModule,\r\n    MatListModule,\r\n    ScrollDispatchModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatExpansionModule,\r\n    MatDialogModule,\r\n\r\n    //Flex Module\r\n    FlexLayoutModule,\r\n\r\n    //Forms\r\n    FormsModule,\r\n    ReactiveFormsModule,\r\n\r\n  ],\r\n  entryComponents: [\r\n    EditUserFormComponent\r\n  ]\r\n})\r\nexport class UserModule { }\r\n"],"sourceRoot":""}