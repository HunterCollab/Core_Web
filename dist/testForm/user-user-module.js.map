{"version":3,"sources":["webpack:///./src/app/user/edit-user-form/edit-user-form.component.css","webpack:///./src/app/user/edit-user-form/edit-user-form.component.html","webpack:///./src/app/user/edit-user-form/edit-user-form.component.ts","webpack:///./src/app/user/update-userdata/update-userdata.component.css","webpack:///./src/app/user/update-userdata/update-userdata.component.html","webpack:///./src/app/user/update-userdata/update-userdata.component.ts","webpack:///./src/app/user/user-page/user-page.component.css","webpack:///./src/app/user/user-page/user-page.component.html","webpack:///./src/app/user/user-page/user-page.component.ts","webpack:///./src/app/user/user-routing.module.ts","webpack:///./src/app/user/user.module.ts"],"names":[],"mappings":"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","file":"user-user-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvZWRpdC11c2VyLWZvcm0vZWRpdC11c2VyLWZvcm0uY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"<h2 mat-dialog-title> Update User Details </h2>\\n\\n<mat-dialog-content>\\n    <div class = \\\"container\\\">\\n        <form #form = \\\"ngForm\\\" (ngSubmit) = \\\"update(form.value)\\\">\\n\\n            <mat-form-field>\\n                <input [(ngModel)] = \\\"data.userData['name']\\\" name = \\\"username\\\" id = \\\"username\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                    #username = \\\"ngModel\\\" matInput placeholder = \\\"User Name...\\\" required>\\n            </mat-form-field>\\n            <br>\\n            <mat-form-field>\\n                <input [(ngModel)] = \\\"data.userData['github']\\\" name = \\\"github\\\" id = \\\"github\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                    #github = \\\"ngModel\\\" matInput placeholder = \\\"Github...\\\" required>\\n            </mat-form-field>\\n            <br>\\n            <mat-form-field>\\n                <input [(ngModel)] = \\\"data.userData['linkedin']\\\" name = \\\"linkedin\\\" id = \\\"linkedin\\\" type = \\\"text\\\" class = \\\"form-control\\\"\\n                    #linkedin = \\\"ngModel\\\" matInput placeholder = \\\"LinkedIn...\\\" required>\\n            </mat-form-field>\\n            <br>\\n            <button mat-raised-button>Update</button>\\n            <br>\\n        </form>\\n      </div>\\n</mat-dialog-content>\"","import { UserService } from 'src/app/shared/dbAccess/user.service';\nimport { UserModel } from 'src/app/shared/models/user.model';\nimport { CollabModel } from './../../shared/models/collab.model';\nimport { FormBuilder, FormGroup, Validators } from '@angular/forms';\nimport { Component, OnInit, Input, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\n\n@Component({\n  selector: 'app-edit-user-form',\n  templateUrl: './edit-user-form.component.html',\n  styleUrls: ['./edit-user-form.component.css']\n})\nexport class EditUserFormComponent implements OnInit {\n  userData: UserModel;\n\n  constructor(\n    private userService: UserService,\n    private _formBuilder: FormBuilder,\n    //Handles the openning/closing of the Dialog\n    public dialogRef: MatDialogRef<EditUserFormComponent>,\n    //Handles passing of data from/to component opening the dialog\n    @Inject(MAT_DIALOG_DATA) public data: any){\n\n    }\n  collabData: CollabModel;\n\n  ngOnInit() {\n\n    \n  }\n\n  update(userData){\n\n    this.userService.updateUserProfile(userData).subscribe(result => { console.log(result) });\n    this.dialogRef.close();\n  }\n\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL3VzZXIvdXBkYXRlLXVzZXJkYXRhL3VwZGF0ZS11c2VyZGF0YS5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<p>\\n  update-userdata works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\n\n@Component({\n  selector: 'update-userdata',\n  templateUrl: './update-userdata.component.html',\n  styleUrls: ['./update-userdata.component.css']\n})\nexport class UpdateUserdataComponent implements OnInit {\n\n  constructor(private userservice: UserService) { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \"    .usercard1 {\\n      margin-top: 30px;\\n      padding: 0px;\\n      border-radius: 5px;\\n      box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n  }\\n\\n  .mat-card-avatar {\\n      background-image: url('/assets/userPhoto.png');\\n      background-size: cover;\\n\\n  }\\n\\n  .mat-card-actions {\\n      display: flex;\\n  }\\n\\n  .list-header-title {\\n    color: rgba(0, 0, 0, .54);\\n    background: rgba(0, 0, 0, 0.062);\\n    font-weight: bold;\\n    padding: 0px;\\n   \\n  }\\n\\n  .mat-card-header {\\n      padding-left: 10px;\\n      padding-top: 10px; \\n  }\\n\\n  .mat-raised-button {\\n      width: 100%;\\n      height: 100%;\\n      margin-bottom: 7px;\\n  }\\n\\n  .usercard2 {\\n   margin-top: 30px;\\n   color: rgba(0, 0, 0, .54);\\n   background: rgba(0, 0, 0, 0.062);\\n   height: 86.5%;\\n   padding-bottom: 25px;\\n   border-radius: 5px;\\n   box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n  .viewport {\\n    width: 100%;\\n    height: 100%;\\n    margin-left: 40px;\\n    box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19);\\n}\\n\\n  .cdk-virtual-scroll-viewport {\\n    height: 70%;\\n    margin: 0px;\\n    background-color: white;\\n\\n}\\n\\n  .example-form .mat-form-field {\\n  margin: 0px;\\n}\\n\\n  .mat-list {\\n    width: 100%;\\n    height: 100%;\\n}\\n\\n  .grid-container {\\n    grid: auto-flow / 1fr;\\n    width: 100%;\\n    height: 100%;\\n  }\\n\\n  .grid-search {\\n    grid-area: grid-search;\\n    margin-left: 25px;\\n   \\n  }\\n\\n  .grid-item {\\n    grid-area: grid-item;\\n    height: 100%;\\n    margin-left: 25px;\\n    margin-right: 25px;\\n    margin-bottom: 0px;\\n  }\\n\\n  .mat-chip-list {\\n    margin: 1px;\\n  }\\n\\n  .example-form {\\n    min-width: 150px;\\n    max-width: 500px;\\n    width: 100%;\\n  }\\n\\n  .example-full-width {\\n    width: 80%;\\n    margin-top: 15px;\\n    margin-bottom: 15px;\\n    background: rgba(255, 255, 255, 0.671);\\n    border-radius: 15px;\\n  }\\n\\n  .wrapper {\\n    display:inline-block;\\n    margin-top: 10px;\\n    margin-bottom: 15px;\\n    height: 30px;\\n    }\\n\\n  input {\\n        background-color: white;\\n        border: 3;\\n        width: 200px;\\n        height: 30px;\\n    }\\n\\n  button {\\n        \\n        border: 3;\\n        width: 100px;\\n        height: 38px;\\n    }\\n\\n  .image-background {\\n   background: #555555;\\n   display: table;\\n   width: 100%;\\n   height: 100%;\\n   position: relative;\\n\\n   overflow: hidden;\\n }\\n\\n  .mat-card-image {\\n  margin: 0px;\\n  margin-left: 8.099%;\\n  margin-right: 10%;\\n  display: block;\\n  height: 450px;\\n  max-height: 450px;\\n  max-width: 85%;\\n}\\n\\n  .mat-stroked-button  {\\n  width: 7%;\\n  margin-left: auto;\\n  margin-right: 10px; \\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvdXNlci91c2VyLXBhZ2UvdXNlci1wYWdlLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IklBQUk7TUFDRSxnQkFBZ0I7TUFDaEIsWUFBWTtNQUNaLGtCQUFrQjtNQUNsQix5RUFBeUU7RUFDN0U7O0VBRUE7TUFDSSw4Q0FBOEM7TUFDOUMsc0JBQXNCOztFQUUxQjs7RUFDQTtNQUNJLGFBQWE7RUFDakI7O0VBRUE7SUFDRSx5QkFBeUI7SUFDekIsZ0NBQWdDO0lBQ2hDLGlCQUFpQjtJQUNqQixZQUFZOztFQUVkOztFQUVBO01BQ0ksa0JBQWtCO01BQ2xCLGlCQUFpQjtFQUNyQjs7RUFFQTtNQUNJLFdBQVc7TUFDWCxZQUFZO01BQ1osa0JBQWtCO0VBQ3RCOztFQUlBO0dBQ0MsZ0JBQWdCO0dBQ2hCLHlCQUF5QjtHQUN6QixnQ0FBZ0M7R0FDaEMsYUFBYTtHQUNiLG9CQUFvQjtHQUNwQixrQkFBa0I7R0FDbEIseUVBQXlFO0FBQzVFOztFQUVBO0lBQ0ksV0FBVztJQUNYLFlBQVk7SUFDWixpQkFBaUI7SUFDakIseUVBQXlFO0FBQzdFOztFQUVBO0lBQ0ksV0FBVztJQUNYLFdBQVc7SUFDWCx1QkFBdUI7O0FBRTNCOztFQUVBO0VBQ0UsV0FBVztBQUNiOztFQUlBO0lBQ0ksV0FBVztJQUNYLFlBQVk7QUFDaEI7O0VBRUE7SUFDSSxxQkFBcUI7SUFDckIsV0FBVztJQUNYLFlBQVk7RUFDZDs7RUFFQTtJQUNFLHNCQUFzQjtJQUN0QixpQkFBaUI7O0VBRW5COztFQUNBO0lBQ0Usb0JBQW9CO0lBQ3BCLFlBQVk7SUFDWixpQkFBaUI7SUFDakIsa0JBQWtCO0lBQ2xCLGtCQUFrQjtFQUNwQjs7RUFFQTtJQUNFLFdBQVc7RUFDYjs7RUFFQTtJQUNFLGdCQUFnQjtJQUNoQixnQkFBZ0I7SUFDaEIsV0FBVztFQUNiOztFQUVBO0lBQ0UsVUFBVTtJQUNWLGdCQUFnQjtJQUNoQixtQkFBbUI7SUFDbkIsc0NBQXNDO0lBQ3RDLG1CQUFtQjtFQUNyQjs7RUFFQTtJQUNFLG9CQUFvQjtJQUNwQixnQkFBZ0I7SUFDaEIsbUJBQW1CO0lBQ25CLFlBQVk7SUFDWjs7RUFFQTtRQUNJLHVCQUF1QjtRQUN2QixTQUFTO1FBQ1QsWUFBWTtRQUNaLFlBQVk7SUFDaEI7O0VBRUE7O1FBRUksU0FBUztRQUNULFlBQVk7UUFDWixZQUFZO0lBQ2hCOztFQUdIO0dBQ0UsbUJBQW1CO0dBQ25CLGNBQWM7R0FDZCxXQUFXO0dBQ1gsWUFBWTtHQUNaLGtCQUFrQjs7R0FFbEIsZ0JBQWdCO0NBQ2xCOztFQUlBO0VBQ0MsV0FBVztFQUNYLG1CQUFtQjtFQUNuQixpQkFBaUI7RUFDakIsY0FBYztFQUNkLGFBQWE7RUFDYixpQkFBaUI7RUFDakIsY0FBYztBQUNoQjs7RUFFQTtFQUNFLFNBQVM7RUFDVCxpQkFBaUI7RUFDakIsa0JBQWtCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvdXNlci91c2VyLXBhZ2UvdXNlci1wYWdlLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIgICAgLnVzZXJjYXJkMSB7XG4gICAgICBtYXJnaW4tdG9wOiAzMHB4O1xuICAgICAgcGFkZGluZzogMHB4O1xuICAgICAgYm9yZGVyLXJhZGl1czogNXB4O1xuICAgICAgYm94LXNoYWRvdzogMCA0cHggOHB4IDAgcmdiYSgwLDAsMCwwLjIpLCAwIDZweCAyMHB4IDAgcmdiYSgwLCAwLCAwLCAwLjE5KTtcbiAgfVxuXG4gIC5tYXQtY2FyZC1hdmF0YXIge1xuICAgICAgYmFja2dyb3VuZC1pbWFnZTogdXJsKCcvYXNzZXRzL3VzZXJQaG90by5wbmcnKTtcbiAgICAgIGJhY2tncm91bmQtc2l6ZTogY292ZXI7XG5cbiAgfVxuICAubWF0LWNhcmQtYWN0aW9ucyB7XG4gICAgICBkaXNwbGF5OiBmbGV4O1xuICB9XG5cbiAgLmxpc3QtaGVhZGVyLXRpdGxlIHtcbiAgICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuNTQpO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgMC4wNjIpO1xuICAgIGZvbnQtd2VpZ2h0OiBib2xkO1xuICAgIHBhZGRpbmc6IDBweDtcbiAgIFxuICB9XG5cbiAgLm1hdC1jYXJkLWhlYWRlciB7XG4gICAgICBwYWRkaW5nLWxlZnQ6IDEwcHg7XG4gICAgICBwYWRkaW5nLXRvcDogMTBweDsgXG4gIH1cblxuICAubWF0LXJhaXNlZC1idXR0b24ge1xuICAgICAgd2lkdGg6IDEwMCU7XG4gICAgICBoZWlnaHQ6IDEwMCU7XG4gICAgICBtYXJnaW4tYm90dG9tOiA3cHg7XG4gIH1cbiAgXG5cblxuICAudXNlcmNhcmQyIHtcbiAgIG1hcmdpbi10b3A6IDMwcHg7XG4gICBjb2xvcjogcmdiYSgwLCAwLCAwLCAuNTQpO1xuICAgYmFja2dyb3VuZDogcmdiYSgwLCAwLCAwLCAwLjA2Mik7XG4gICBoZWlnaHQ6IDg2LjUlO1xuICAgcGFkZGluZy1ib3R0b206IDI1cHg7XG4gICBib3JkZXItcmFkaXVzOiA1cHg7XG4gICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xufVxuXG4udmlld3BvcnQge1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBtYXJnaW4tbGVmdDogNDBweDtcbiAgICBib3gtc2hhZG93OiAwIDRweCA4cHggMCByZ2JhKDAsMCwwLDAuMiksIDAgNnB4IDIwcHggMCByZ2JhKDAsIDAsIDAsIDAuMTkpO1xufVxuXG4uY2RrLXZpcnR1YWwtc2Nyb2xsLXZpZXdwb3J0IHtcbiAgICBoZWlnaHQ6IDcwJTtcbiAgICBtYXJnaW46IDBweDtcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcblxufVxuXG4uZXhhbXBsZS1mb3JtIC5tYXQtZm9ybS1maWVsZCB7XG4gIG1hcmdpbjogMHB4O1xufVxuXG5cblxuLm1hdC1saXN0IHtcbiAgICB3aWR0aDogMTAwJTtcbiAgICBoZWlnaHQ6IDEwMCU7XG59XG5cbi5ncmlkLWNvbnRhaW5lciB7XG4gICAgZ3JpZDogYXV0by1mbG93IC8gMWZyO1xuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgfVxuICBcbiAgLmdyaWQtc2VhcmNoIHtcbiAgICBncmlkLWFyZWE6IGdyaWQtc2VhcmNoO1xuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICAgXG4gIH1cbiAgLmdyaWQtaXRlbSB7XG4gICAgZ3JpZC1hcmVhOiBncmlkLWl0ZW07XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIG1hcmdpbi1sZWZ0OiAyNXB4O1xuICAgIG1hcmdpbi1yaWdodDogMjVweDtcbiAgICBtYXJnaW4tYm90dG9tOiAwcHg7XG4gIH1cblxuICAubWF0LWNoaXAtbGlzdCB7XG4gICAgbWFyZ2luOiAxcHg7XG4gIH1cblxuICAuZXhhbXBsZS1mb3JtIHtcbiAgICBtaW4td2lkdGg6IDE1MHB4O1xuICAgIG1heC13aWR0aDogNTAwcHg7XG4gICAgd2lkdGg6IDEwMCU7XG4gIH1cbiAgXG4gIC5leGFtcGxlLWZ1bGwtd2lkdGgge1xuICAgIHdpZHRoOiA4MCU7XG4gICAgbWFyZ2luLXRvcDogMTVweDtcbiAgICBtYXJnaW4tYm90dG9tOiAxNXB4O1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjU1LCAyNTUsIDI1NSwgMC42NzEpO1xuICAgIGJvcmRlci1yYWRpdXM6IDE1cHg7XG4gIH1cbiAgXG4gIC53cmFwcGVyIHtcbiAgICBkaXNwbGF5OmlubGluZS1ibG9jaztcbiAgICBtYXJnaW4tdG9wOiAxMHB4O1xuICAgIG1hcmdpbi1ib3R0b206IDE1cHg7XG4gICAgaGVpZ2h0OiAzMHB4O1xuICAgIH1cblxuICAgIGlucHV0IHtcbiAgICAgICAgYmFja2dyb3VuZC1jb2xvcjogd2hpdGU7XG4gICAgICAgIGJvcmRlcjogMztcbiAgICAgICAgd2lkdGg6IDIwMHB4O1xuICAgICAgICBoZWlnaHQ6IDMwcHg7XG4gICAgfVxuXG4gICAgYnV0dG9uIHtcbiAgICAgICAgXG4gICAgICAgIGJvcmRlcjogMztcbiAgICAgICAgd2lkdGg6IDEwMHB4O1xuICAgICAgICBoZWlnaHQ6IDM4cHg7XG4gICAgfVxuXG4gIFxuIC5pbWFnZS1iYWNrZ3JvdW5kIHtcbiAgIGJhY2tncm91bmQ6ICM1NTU1NTU7XG4gICBkaXNwbGF5OiB0YWJsZTtcbiAgIHdpZHRoOiAxMDAlO1xuICAgaGVpZ2h0OiAxMDAlO1xuICAgcG9zaXRpb246IHJlbGF0aXZlO1xuXG4gICBvdmVyZmxvdzogaGlkZGVuO1xuIH1cblxuIFxuXG4gLm1hdC1jYXJkLWltYWdlIHtcbiAgbWFyZ2luOiAwcHg7XG4gIG1hcmdpbi1sZWZ0OiA4LjA5OSU7XG4gIG1hcmdpbi1yaWdodDogMTAlO1xuICBkaXNwbGF5OiBibG9jaztcbiAgaGVpZ2h0OiA0NTBweDtcbiAgbWF4LWhlaWdodDogNDUwcHg7XG4gIG1heC13aWR0aDogODUlO1xufVxuXG4ubWF0LXN0cm9rZWQtYnV0dG9uICB7XG4gIHdpZHRoOiA3JTtcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XG4gIG1hcmdpbi1yaWdodDogMTBweDsgXG59XG4iXX0= */\"","module.exports = \"<!--\\n  fxLayout.lt-sm=\\\"column\\\"  : Will only be applied when the viewport is less thatn small.\\n  fxLayout = \\\"row\\\"         :  If ;using big screens, display data in rows\\n  fxLayout.xs =\\\"column\\\" ;  : using small screens, display data in columns\\n  fxLayoutWrap             : Will wrap this div for us so that flex will be applied\\n  fxLayoutGap = 20%;       : Will give us a gap bewteen each fxFlex\\n-->\\n  <div class = \\\"container\\\" fxLayout = \\\"row\\\" fxLayout.xs = \\\"column\\\" fxLayoutWrap fxLayoutAlign=\\\"center\\\">\\n\\n    <div fxFlex = \\\"40%\\\" fxFlex.xs = \\\"80%\\\">\\n        <mat-card class=\\\"usercard1\\\">\\n          \\n                <mat-card-header class=\\\"list-header-title\\\">\\n\\n                    <div mat-card-avatar></div>\\n                      <mat-card-title>{{ userData?.name }}</mat-card-title>\\n                      <mat-card-subtitle>{{ userData?.username }}</mat-card-subtitle>\\n                      <button mat-stroked-button color=\\\"warm\\\" (click) = \\\"openDialog()\\\">Edit</button>\\n              \\n                  </mat-card-header>  \\n\\n                  <div class=\\\"image-background\\\">\\n                    <div class=\\\"image-container\\\">\\n                        <img mat-card-image [src]=\\\"imageToShow\\\" \\n                          alt=\\\"Image not found\\\" onerror=\\\"this.onerror=null; this.src = 'assets/userPhoto.png';\\\">\\n                    </div>\\n                  </div>\\n\\n                     <!--Taking picture as input-->\\n                <div class=\\\"form-group\\\">\\n\\n                  <input  type=\\\"file\\\" id=\\\"file\\\" (change)=\\\"handleFileInput($event.target.files)\\\">\\n                  <button mat-button color=\\\"primary\\\" (click)=\\\"uploadFileToActivity()\\\">submit</button>\\n                </div>\\n\\n                <ng-template #noImageFound>\\n                  <img src=\\\"/assets/userPhoto.png\\\"> \\n                </ng-template>\\n                <!--img mat-card-image -->\\n                <mat-card-content>\\n                \\n                <mat-grid-list cols=\\\"2\\\" rowHeight=\\\"4:1\\\" class=\\\"user-links\\\">\\n                    <mat-grid-tile>\\n                          <button mat-raised-button color=\\\"warm\\\">{{ userData?.github }}</button>\\n                    </mat-grid-tile>\\n                    \\n                    <mat-grid-tile>\\n                        <button mat-raised-button color=\\\"primary\\\">{{ userData?.linkedin }}</button>\\n                    </mat-grid-tile>\\n                </mat-grid-list>\\n\\n              </mat-card-content>\\n        </mat-card>\\n    </div>\\n\\n    <div fxFlex = \\\"40%\\\" fxFlex.xs = \\\"80%\\\">\\n      <div class=\\\"usercard2\\\">\\n        <mat-grid-list cols=\\\"1\\\" rowHeight=\\\"2:1\\\">\\n          <!-- Will hold class list -->\\n            <mat-grid-tile>\\n            <div class =\\\"grid-container\\\">  \\n              <div class = \\\"grid-search\\\">\\n                  <div class=\\\"wrapper\\\">\\n                       <!--add a new skill--> \\n                       <form #classForm=\\\"ngForm\\\" (ngSubmit)=\\\"addclass(classForm)\\\" class=\\\"form form-login\\\">\\n                          <input name=\\\"NewClass\\\" id=\\\"login-email\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"Add a new class\\\" required ngModel>\\n                          <button mat-flat-button color=\\\"primary\\\">Add class</button>\\n                      </form>\\n                  </div>\\n              </div>\\n              \\n              <div class = \\\"grid-item\\\">\\n                  <cdk-virtual-scroll-viewport itemSize=\\\"classes.size\\\" class=\\\"viewport\\\">\\n                      <mat-chip-list>\\n                        <mat-chip *ngFor = \\\"let class of userData?.classes\\\">\\n                          {{ class }}\\n                          <mat-icon matChipRemove>cancel</mat-icon>\\n                        </mat-chip>\\n                      </mat-chip-list>\\n                    </cdk-virtual-scroll-viewport>\\n                </div>\\n            </div>    \\n            </mat-grid-tile>\\n            <br>\\n            <br>\\n            <br>\\n          <!-- Will hold the skill list -->\\n          <mat-grid-tile>\\n              <div class =\\\"grid-container\\\">  \\n                  <div class = \\\"grid-search\\\">\\n                      <div class=\\\"wrapper\\\">\\n\\n                         <!--add a new skill--> \\n                        <form #skillForm=\\\"ngForm\\\" (ngSubmit)=\\\"addskill(skillForm)\\\" class=\\\"form form-login\\\">\\n                            <input name=\\\"NewSkill\\\" id=\\\"skillForm\\\" type=\\\"text\\\" class=\\\"form-input\\\" placeholder=\\\"Add a new skill\\\" required ngModel>\\n                            <button mat-flat-button color=\\\"primary\\\">Add Skill</button>\\n                        </form>\\n\\n                      </div>\\n                  </div>\\n                  <div class = \\\"grid-item\\\">\\n                      <cdk-virtual-scroll-viewport itemSize=\\\"skills.size\\\" class=\\\"viewport\\\">\\n                          <mat-chip-list>\\n                            <mat-chip *ngFor = \\\"let skill of userData?.skills\\\">\\n                              {{ skill }}\\n                              <mat-icon matChipRemove>cancel</mat-icon>\\n                            </mat-chip>\\n                            \\n                          </mat-chip-list>\\n                        </cdk-virtual-scroll-viewport>\\n                    </div>\\n                </div>\\n          </mat-grid-tile>\\n        </mat-grid-list>\\n      </div>\\n    </div>\\n  </div>\"","import { EditUserFormComponent } from './../edit-user-form/edit-user-form.component';\nimport { Component, OnInit,ChangeDetectionStrategy } from '@angular/core';\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { UserModel } from 'src/app/shared/models/user.model';\nimport { FormControl, Form, FormGroup, FormBuilder } from '@angular/forms';\nimport { Observable } from 'rxjs';\nimport { MatDialog } from '@angular/material/dialog';\nimport { NavbarComponent } from 'src/app/navbar/navbar.component';\n\n\n@Component({\n  selector: 'app-user-page',\n  templateUrl: './user-page.component.html',\n  styleUrls: ['./user-page.component.css']\n})\nexport class UserPageComponent implements OnInit {\n  //Will hold our user data.\n  userData: UserModel[];\n  username: string;\n  \n  //Auto complete variables.\n  classesForm: FormGroup;\n  filteredUsers: String[] = [];\n  isLoading = false;\n  userClass:UserModel[\"classes\"];\n  userSkill:UserModel[\"skills\"];\n  \n  //regular expression to check empty string\n  regex = \"^\\\\s+$\";\n\n\n  //place holder of image\n  imageToShow: any;\n\n  //default variable for selected file.\n  fileToUpload: File = null;\n\n  /*\n  TODO: \n    DISPLAY Image\n    Edit all fields\n    Autocomplete on edit skills and classes. \n\n  */\n  constructor(\n    private userService : UserService,\n    private router : Router, \n    private formBuilder: FormBuilder,\n    private activeRoute: ActivatedRoute,\n    public dialog: MatDialog,\n    private getmem :NavbarComponent)\n   { \n    this.activeRoute.paramMap\n    .subscribe(params => {\n      this.username = params.get('username');\n    })\n\n   \n   }\n\n  ngOnInit() {\n\n    this.loadUserData(this.username);\n    this.classesForm = this.formBuilder.group({\n      userInput: null\n      \n    })\n  }\n\nloadUserData(username: string){\n\n  if(username){\n    this.userService.getMemberdetails(username).subscribe(userData => {\n      this.userData = userData;\n      this.userClass= userData[\"classes\"]\n      this.userSkill= userData[\"skills\"]\n      this.profileMemberPicture(username);\n  \n    });\n  } else {\n    this.userService.getUserdetails().subscribe(userData => {\n      this.userData = userData;\n      this.userClass= userData[\"classes\"]\n      this.userSkill= userData[\"skills\"]\n      this.profilePicture();\n  \n    });\n  }\n}  \n\ncreateImageFromBlob(image: Blob) {\n  let reader = new FileReader();\n  reader.addEventListener(\"load\", () => {\n    \n     //image to show is the final place holder of profile picture\n     this.imageToShow = reader.result;\n     return this.imageToShow\n  }, false);\n\n  if (image) {\n     reader.readAsDataURL(image);\n  }\n}\n\nprofilePicture(){\n   this.userService.getPicture().subscribe((picture:Blob)=>{\n     this.createImageFromBlob(picture)\n     //console.log(picture)\n   })\n }\n profileMemberPicture(username: string){\n  this.userService.getMemberPicture(username).subscribe((picture:Blob)=>{\n    this.createImageFromBlob(picture)\n    //console.log(picture)\n  })\n}\n //function which you use in (change)-event of your file input tag:\n handleFileInput(files: FileList) {\n     this.fileToUpload = files.item(0);\n }\n\n uploadFileToActivity() {\n   this.userService.uploadProfilePicture(this.fileToUpload).subscribe((data: any)=>{\n     console.log(data)\n   })\n //   this.fileUploadService.postFile(this.fileToUpload).subscribe(data => {\n //     // do something, if upload success\n //     }, error => {\n //       console.log(error);\n //     });\n  }\n\n  openDialog(): void {\n    //Dialog refeerence\n    const dialogRef = this.dialog.open(EditUserFormComponent, {\n      data: {\n        userData: this.userData\n      }\n    });\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log('The dialog was closed');\n    });\n  }\n  addskill(newSkill){\n    //return if input is empty string\n    if(newSkill.value[\"NewSkill\"]==this.regex ){\n  \n      console.log(\"it is an empty string  \")\n      return 0;\n    }\n  \n    //taking values from input\n    let newObject = Object.assign(newSkill.value[\"NewSkill\"])\n    //console.log(newObject)\n    //copying all the skills as object that are already exist\n    let skills: string []  = this.userData[\"skills\"];\n    \n    \n   //checking if the skill is already exist or not\n    for(var iter in skills){\n     if(newObject== skills[iter]){\n         //console.log(skills[iter],\" already exits !\")\n         return 0;\n     }\n    }\n    //Combining input skill and previous skills\n    newObject= skills.concat(newObject)\n    this.userService.updateUserSkill(newObject).subscribe(data => {\n      //console.log(data)\n    });\n  }\n  \n  addclass(newclass){\n    //return if input is empty string\n    if(newclass.value[\"NewClass\"]==this.regex){\n      console.log(\"it is an empty strings\")\n      return 0;\n    }\n    \n    //taking values from input\n    let newObject = Object.assign(newclass.value[\"NewClass\"])\n    //console.log(newObject)\n    //copying all the classes as object that are already exist\n    let classes: string []  = this.userData[\"classes\"];\n    \n    \n   //checking if the skill is already exist or not\n    for(var iter in classes){\n     if(newObject== classes[iter]){\n        // console.log(classes[iter],\" already exits !\")\n         return 0;\n     }\n    }\n    //Combining input skill and previous skills\n    newObject= classes.concat(newObject)\n    this.userService.updateUserclass(newObject).subscribe(data => {\n      //console.log(data)\n    });\n  \n  }\n  \n  \n\n\n}\n","import { UpdateUserdataComponent } from './update-userdata/update-userdata.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\nimport { UserPageComponent } from './user-page/user-page.component';\n\n\nconst routes: Routes = [\n  {\n    path:':username',\n    component: UserPageComponent\n  },\n  {\n    //This is the default path the user will enter if the url is /user\n    path:'',\n    component: UserPageComponent\n\n  },\n  \n  {\n    path:'update-userdata',\n    component: UpdateUserdataComponent\n  }\n];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class UserRoutingModule { }\n","import { MatDialogModule } from '@angular/material/dialog';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\nimport { MatChipsModule } from '@angular/material/chips';\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\nimport { FlexLayoutModule } from '@angular/flex-layout';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { UserRoutingModule } from './user-routing.module';\nimport { UserPageComponent } from './user-page/user-page.component';\n\n//Material Components\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatGridListModule }  from '@angular/material/grid-list';\nimport { MatListModule }  from '@angular/material/list';\nimport { UpdateUserdataComponent } from './update-userdata/update-userdata.component';\nimport { EditUserFormComponent } from './edit-user-form/edit-user-form.component';\n\n@NgModule({\n  declarations: [UserPageComponent, UpdateUserdataComponent, EditUserFormComponent],\n  imports: [\n    CommonModule,\n    UserRoutingModule,\n\n    //Angular Material\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule,\n    MatGridListModule,\n    MatListModule,\n    ScrollDispatchModule,\n    MatChipsModule,\n    MatAutocompleteModule,\n    MatExpansionModule,\n    MatDialogModule,\n\n    //Flex Module\n    FlexLayoutModule,\n\n    //Forms\n    FormsModule,\n    ReactiveFormsModule,\n\n  ],\n  entryComponents: [\n    EditUserFormComponent\n  ]\n})\nexport class UserModule { }\n"],"sourceRoot":""}