{"version":3,"sources":["webpack:///./src/app/login/login-page/login.component.css","webpack:///./src/app/login/login-page/login.component.html","webpack:///./src/app/login/login-page/login.component.ts","webpack:///./src/app/login/login-routing.module.ts","webpack:///./src/app/login/login.module.ts","webpack:///./src/app/shared/models/login.model.ts"],"names":[],"mappings":"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","file":"login-login-module.js","sourcesContent":["module.exports = \"\\n.medium-list{\\n  margin: auto;\\n  width: auto;\\n  padding:10px\\n}\\n\\n.list-viewer-wrapper {\\n  border: 1px solid rgba(0, 0, 0, .03);\\n  box-shadow: 0 2px 2px rgba(0, 0, 0, .24), 0 0 2px rgba(0, 0, 0, .12);\\n  margin: 20px;\\n}\\n\\n.list-header-title {\\n  color: rgba(0, 0, 0, .54);\\n  background: rgba(0, 0, 0, .03);\\n  padding: 8px 20px;\\n  font-weight: bold;\\n}\\n\\n.form-container {\\n  display: flex;\\n  flex-direction: column; \\n  padding: 20px;\\n  \\n}\\n\\n.form-button {\\n  width: 90%;\\n  margin-left: auto;\\n  margin-right: auto;  \\n  \\n}\\n\\ninput.form-control-password::-webkit-outer-spin-button,\\ninput.form-control-password::-webkit-inner-spin-button {\\n  display: none;\\n}\\n\\ninput.form-control-password {\\n  -moz-appearance: textfield;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbG9naW4vbG9naW4tcGFnZS9sb2dpbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7QUFDQTtFQUNFLFlBQVk7RUFDWixXQUFXO0VBQ1g7QUFDRjs7QUFFQTtFQUNFLG9DQUFvQztFQUNwQyxvRUFBb0U7RUFDcEUsWUFBWTtBQUNkOztBQUVBO0VBQ0UseUJBQXlCO0VBQ3pCLDhCQUE4QjtFQUM5QixpQkFBaUI7RUFDakIsaUJBQWlCO0FBQ25COztBQUVBO0VBQ0UsYUFBYTtFQUNiLHNCQUFzQjtFQUN0QixhQUFhOztBQUVmOztBQUVBO0VBQ0UsVUFBVTtFQUNWLGlCQUFpQjtFQUNqQixrQkFBa0I7O0FBRXBCOztBQUVBOztFQUVFLGFBQWE7QUFDZjs7QUFFQTtFQUNFLDBCQUEwQjtBQUM1QiIsImZpbGUiOiJzcmMvYXBwL2xvZ2luL2xvZ2luLXBhZ2UvbG9naW4uY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIlxuLm1lZGl1bS1saXN0e1xuICBtYXJnaW46IGF1dG87XG4gIHdpZHRoOiBhdXRvO1xuICBwYWRkaW5nOjEwcHhcbn1cblxuLmxpc3Qtdmlld2VyLXdyYXBwZXIge1xuICBib3JkZXI6IDFweCBzb2xpZCByZ2JhKDAsIDAsIDAsIC4wMyk7XG4gIGJveC1zaGFkb3c6IDAgMnB4IDJweCByZ2JhKDAsIDAsIDAsIC4yNCksIDAgMCAycHggcmdiYSgwLCAwLCAwLCAuMTIpO1xuICBtYXJnaW46IDIwcHg7XG59XG5cbi5saXN0LWhlYWRlci10aXRsZSB7XG4gIGNvbG9yOiByZ2JhKDAsIDAsIDAsIC41NCk7XG4gIGJhY2tncm91bmQ6IHJnYmEoMCwgMCwgMCwgLjAzKTtcbiAgcGFkZGluZzogOHB4IDIwcHg7XG4gIGZvbnQtd2VpZ2h0OiBib2xkO1xufVxuXG4uZm9ybS1jb250YWluZXIge1xuICBkaXNwbGF5OiBmbGV4O1xuICBmbGV4LWRpcmVjdGlvbjogY29sdW1uOyBcbiAgcGFkZGluZzogMjBweDtcbiAgXG59XG5cbi5mb3JtLWJ1dHRvbiB7XG4gIHdpZHRoOiA5MCU7XG4gIG1hcmdpbi1sZWZ0OiBhdXRvO1xuICBtYXJnaW4tcmlnaHQ6IGF1dG87ICBcbiAgXG59XG5cbmlucHV0LmZvcm0tY29udHJvbC1wYXNzd29yZDo6LXdlYmtpdC1vdXRlci1zcGluLWJ1dHRvbixcbmlucHV0LmZvcm0tY29udHJvbC1wYXNzd29yZDo6LXdlYmtpdC1pbm5lci1zcGluLWJ1dHRvbiB7XG4gIGRpc3BsYXk6IG5vbmU7XG59XG5cbmlucHV0LmZvcm0tY29udHJvbC1wYXNzd29yZCB7XG4gIC1tb3otYXBwZWFyYW5jZTogdGV4dGZpZWxkO1xufSJdfQ== */\"","module.exports = \"<div class = \\\"medium-list\\\">\\r\\n    <div class=\\\"list-viewer-wrapper\\\">\\r\\n      <div class=\\\"list-header-title\\\">Log-in</div>\\r\\n      \\r\\n      <form [formGroup] = \\\"form\\\" (ngSubmit) = \\\"onSubmit()\\\">\\r\\n  \\r\\n        <!-- Username Field -->\\r\\n        <div class=\\\"form-container\\\">\\r\\n          <mat-form-field>\\r\\n  \\r\\n              <!-- Associate key from ts file: username -->\\r\\n              <input \\r\\n                  formControlName = \\\"username\\\"\\r\\n                  matInput\\r\\n                  id=\\\"username\\\" \\r\\n                  type=\\\"email\\\" \\r\\n                  class=\\\"form-control\\\"\\r\\n                  placeholder=\\\"Hunter Email...\\\">\\r\\n          </mat-form-field>\\r\\n          <div *ngIf=\\\"username.touched && username.invalid\\\" \\r\\n                class=\\\"alert alert-danger\\\">\\r\\n                <mat-error *ngIf=\\\"username.errors.required\\\">Email is <strong>Required!</strong></mat-error>\\r\\n                <mat-error *ngIf=\\\"username.errors.email\\\">Invalid <strong>Email!</strong></mat-error>\\r\\n          </div>\\r\\n        </div>\\r\\n        \\r\\n        <!-- Password Field -->\\r\\n        <div class=\\\"form-container\\\">\\r\\n            <mat-form-field>\\r\\n    \\r\\n                <!-- Associate key from ts file: username -->\\r\\n                <input \\r\\n                    formControlName = \\\"password\\\"\\r\\n                    matInput\\r\\n                    id=\\\"password\\\" \\r\\n                    type=\\\"text\\\" \\r\\n                    class=\\\"form-control-password\\\"\\r\\n                    placeholder=\\\"Password...\\\"\\r\\n                    [type] = \\\"hide ? 'password' : 'text' \\\"\\r\\n                    autocomplete=\\\"off\\\">\\r\\n                <mat-icon matSuffix (click) = \\\"hide = !hide\\\">{{ hide ? 'visibility_of' : 'visibility' }}</mat-icon>\\r\\n            </mat-form-field>\\r\\n            <div *ngIf=\\\"password.touched && password.invalid\\\" \\r\\n                  class=\\\"alert alert-danger\\\">\\r\\n                  <mat-error *ngIf=\\\"password.errors.required\\\">Password <strong>Required!</strong></mat-error>\\r\\n                  <mat-error *ngIf=\\\"password.errors.minlength\\\">Password must be of size {{ password.errors.minlength.requiredLength }}!</mat-error>\\r\\n            </div>\\r\\n        </div>\\r\\n  \\r\\n          <div class=\\\"form-container\\\">\\r\\n              <button class=\\\"form-button\\\" mat-raised-button color = \\\"primary\\\" type=\\\"submit\\\" [disabled] = \\\"!form.valid\\\">Login</button>\\r\\n          </div>      \\r\\n  \\r\\n      </form>\\r\\n          <div class=\\\"form-container\\\">\\r\\n              <button class=\\\"form-button\\\"  mat-raised-button color = \\\"primary\\\" (click) = \\\"register()\\\">Register</button>\\r\\n          </div>\\r\\n          \\r\\n    </div>\\r\\n  </div>\\r\\n  \\r\\n  \\r\\n  \\r\\n  \"","import { UserService } from '../../shared/dbAccess/user.service';\r\nimport { FormGroup, FormBuilder, Validators } from '@angular/forms';\r\nimport { Component , OnInit} from '@angular/core';\r\nimport {Router } from '@angular/router';\r\n\r\n//Material\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { LogInModel } from 'src/app/shared/models/login.model';\r\n\r\n\r\n\r\n\r\n@Component({\r\n\r\n  selector: 'app-name-editor',\r\n  templateUrl: './login.component.html',\r\n  styleUrls: ['./login.component.css']\r\n \r\n})\r\n\r\n\r\nexport class LoginComponent implements OnInit {\r\n \r\n user: LogInModel;\r\n  form: FormGroup;\r\n  hide: boolean;\r\n\r\n  isLoginError : boolean;\r\n  constructor(private formBuilder: FormBuilder,\r\n              private userService : UserService,\r\n              private router : Router) \r\n  {\r\n    this.user = new LogInModel();\r\n    this.hide = true;\r\n   }\r\n\r\n   ngOnInit(){\r\n      this.form = this.formBuilder.group({\r\n      username: [this.user.username, \r\n        [Validators.required, Validators.email\r\n      ]],\r\n      password: [this.user.password, [\r\n        Validators.required,\r\n        Validators.minLength(6),\r\n      ]]\r\n    });\r\n  }\r\n\r\n  \r\n  \r\n\r\n  onSubmit() {\r\n\r\n      this.user = Object.assign({}, this.form.value);\r\n\r\n    this.userService.userAuthentication(this.user.username,this.user.password)\r\n    .subscribe((data : any)=>{\r\n      \r\n      if(data.success){\r\n        //storing json object to localStorage\r\n        localStorage.setItem('accessToken', data.token);\r\n        this.router.navigate(['/home']);\r\n        console.log ( this.user.username + \"  logged-in\"); \r\n      }\r\n      else{ \r\n         alert(data.error);\r\n         this.router.navigate(['/login']);\r\n    }; \r\n      return;\r\n      \r\n    });\r\n    \r\n  }\r\n\r\n  register(){\r\n      this.router.navigate(['/register']);\r\n  }\r\n\r\n  get username(){\r\n    return this.form.get('username');\r\n  }\r\n  \r\n  get password(){\r\n    return this.form.get('password');\r\n  }\r\n\r\n  \r\n}\r\n//testuser1@myhunter.cuny.edu ","import { LoginComponent } from './login-page/login.component';\nimport { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [\n    {\n      path: '',\n      component: LoginComponent\n    }\n  ];\n\n@NgModule({\n  imports: [RouterModule.forChild(routes)],\n  exports: [RouterModule]\n})\nexport class LoginRoutingModule { }\n","import { ReactiveFormsModule } from '@angular/forms';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { LoginComponent } from './login-page/login.component';\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\nimport { LoginRoutingModule } from './login-routing.module';\n\n\n@NgModule({\n  declarations: [LoginComponent],\n  imports: [\n    CommonModule,\n    LoginRoutingModule,\n    ReactiveFormsModule,\n\n    //Angular Material\n    MatTabsModule,\n    MatCardModule,\n    MatIconModule,\n    MatButtonModule,\n    MatInputModule\n    \n  ]\n})\nexport class LoginModule { }\n","export class LogInModel {\n    username    ?: string;\n    password    ?: string;\n}"],"sourceRoot":""}