{"version":3,"sources":["webpack:///./src/$_lazy_route_resource lazy namespace object","webpack:///./src/app/app-routing.module.ts","webpack:///./src/app/app.component.css","webpack:///./src/app/app.component.html","webpack:///./src/app/app.component.ts","webpack:///./src/app/app.module.ts","webpack:///./src/app/guard/auth.guard.ts","webpack:///./src/app/guard/auth.inspector.ts","webpack:///./src/app/messenger/messenger/messenger.component.css","webpack:///./src/app/messenger/messenger/messenger.component.html","webpack:///./src/app/messenger/messenger/messenger.component.ts","webpack:///./src/app/navbar/navbar.component.css","webpack:///./src/app/navbar/navbar.component.html","webpack:///./src/app/navbar/navbar.component.ts","webpack:///./src/app/shared/dbAccess/collabs.service.ts","webpack:///./src/app/shared/dbAccess/conversation.service.ts","webpack:///./src/app/shared/dbAccess/user.service.ts","webpack:///./src/environments/environment.ts","webpack:///./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["var map = {\n\t\"./conversations/conversations.module\": [\n\t\t\"./src/app/conversations/conversations.module.ts\",\n\t\t\"default~conversations-conversations-module~home-home-module~login-login-module~register-register-mod~dcefec69\",\n\t\t\"default~conversations-conversations-module~home-home-module~user-user-module\",\n\t\t\"default~conversations-conversations-module~home-home-module\",\n\t\t\"conversations-conversations-module\"\n\t],\n\t\"./home/home.module\": [\n\t\t\"./src/app/home/home.module.ts\",\n\t\t\"default~conversations-conversations-module~home-home-module~login-login-module~register-register-mod~dcefec69\",\n\t\t\"default~conversations-conversations-module~home-home-module~user-user-module\",\n\t\t\"default~conversations-conversations-module~home-home-module\",\n\t\t\"home-home-module\"\n\t],\n\t\"./login/login.module\": [\n\t\t\"./src/app/login/login.module.ts\",\n\t\t\"default~conversations-conversations-module~home-home-module~login-login-module~register-register-mod~dcefec69\",\n\t\t\"login-login-module\"\n\t],\n\t\"./register/register.module\": [\n\t\t\"./src/app/register/register.module.ts\",\n\t\t\"default~conversations-conversations-module~home-home-module~login-login-module~register-register-mod~dcefec69\",\n\t\t\"register-register-module\"\n\t],\n\t\"./user/user.module\": [\n\t\t\"./src/app/user/user.module.ts\",\n\t\t\"default~conversations-conversations-module~home-home-module~login-login-module~register-register-mod~dcefec69\",\n\t\t\"default~conversations-conversations-module~home-home-module~user-user-module\",\n\t\t\"user-user-module\"\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tvar ids = map[req];\n\tif(!ids) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\treturn Promise.all(ids.slice(1).map(__webpack_require__.e)).then(function() {\n\t\tvar id = ids[0];\n\t\treturn __webpack_require__(id);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = \"./src/$$_lazy_route_resource lazy recursive\";\nmodule.exports = webpackAsyncContext;","import { NgModule } from '@angular/core';\r\nimport { CollabCardComponent } from './home/collab-card/collab-card.component';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { AppComponent } from './app.component';\r\nimport { HomeComponent } from './home/collab-list/home.component';\r\nimport { LoginComponent } from './login/login-page/login.component';\r\nimport { Routes, RouterModule, CanActivate } from '@angular/router';\r\nimport { RegisterComponent } from './register/register-page/register.component';\r\nimport { MessengerComponent } from './messenger/messenger/messenger.component';\r\n\r\n\r\n/**\r\n* @author Edwin Quintuna\r\n* \r\n*\t@brief Configure the routes for the feature modules.\r\n*\r\n*\t@param[routes] , variable that will hold the object with our routes\r\n*\t@param[path]       , represents the queue that the process is in.\r\n*\t@param[loadChildren]       , represents the current burst time the process is on.\r\n*\t@param[canActivate]       , represents the current burst time the process is on.\r\n*\t@return nothing\r\n*/\r\nconst routes: Routes = [\r\n  {\r\n    path : 'login', \r\n    loadChildren : './login/login.module#LoginModule',\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path:'register', \r\n    loadChildren : './register/register.module#RegisterModule',\r\n    canActivate: [AuthGuard]\r\n  },\r\n  {\r\n    path:'home', \r\n    loadChildren : './home/home.module#HomeModule',\r\n    canLoad: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'user',\r\n    loadChildren: './user/user.module#UserModule',\r\n    canLoad: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'conversations',\r\n    loadChildren: './conversations/conversations.module#ConversationsModule',\r\n    canLoad: [AuthGuard]\r\n  },\r\n  {\r\n    path: 'messenger',\r\n    component: MessengerComponent,\r\n    canLoad: [AuthGuard]\r\n\r\n  },\r\n  //default component\r\n  {\r\n    path:'**', \r\n    redirectTo: 'home',\r\n    pathMatch: 'full'\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2FwcC5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<app-navbar></app-navbar>\\n<router-outlet></router-outlet>\\n\"","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'testForm';\n}\n","import { GroupMessagingModel } from './shared/models/groupMessaging';\r\nimport { OneToOneMessagingModel } from './shared/models/oneToOneMessagingModel';\r\nimport { ConversationService } from './shared/dbAccess/conversation.service';\r\nimport { AuthInterceptor } from './guard/auth.inspector';\r\nimport { AuthGuard } from './guard/auth.guard';\r\nimport { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n//Declares our routing\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { LoginComponent } from './login/login-page/login.component';\r\nimport {HttpClientModule, HTTP_INTERCEPTORS} from '@angular/common/http';\r\nimport { RegisterComponent } from './register/register-page/register.component';\r\nimport { HomeComponent } from './home/collab-list/home.component';\r\nimport { UserService } from './shared/dbAccess/user.service';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\n\r\n\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms'\r\nimport { CollabMessagingComponent } from './conversations/collab-messaging/collab-messaging.component';\r\n\r\n\r\n\r\n\r\n//These are the materials that will make our site adaptable\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatSidenavModule } from '@angular/material/sidenav';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { NavbarComponent } from './navbar/navbar.component';\r\nimport { MatMenuModule } from '@angular/material/menu';\r\nimport { MatChipsModule } from '@angular/material/chips';\r\nimport { MatAutocompleteModule } from '@angular/material/autocomplete';\r\nimport { MatTableModule } from '@angular/material/table';\r\nimport { MatDatepickerModule } from '@angular/material/datepicker';\r\nimport {MatSelectModule} from '@angular/material/select';\r\nimport {MatDialogModule} from '@angular/material/dialog';\r\n\r\n//Angular Flex Module\r\nimport { FlexLayoutModule } from '@angular/flex-layout';\r\nimport { ScrollDispatchModule } from '@angular/cdk/scrolling';\r\nimport { MatNativeDateModule } from '@angular/material/core';\r\nimport {MatListModule} from '@angular/material/list';\r\n\r\n\r\n//Clock\r\nimport { OwlDateTimeModule, OwlNativeDateTimeModule } from 'ng-pick-datetime';\r\n\r\n\r\nimport { MessengerComponent } from './messenger/messenger/messenger.component';\r\n\r\n\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    NavbarComponent,\r\n    MessengerComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n     //Forms Modules\r\n    ReactiveFormsModule,\r\n    //HTTP requests\r\n    HttpClientModule,\r\n    BrowserAnimationsModule,\r\n    //Material\r\n    MatButtonModule,\r\n    MatIconModule,\r\n    MatSidenavModule,\r\n    MatToolbarModule,\r\n    MatMenuModule,\r\n    ScrollDispatchModule,\r\n    MatChipsModule,\r\n    MatAutocompleteModule,\r\n    MatTableModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatAutocompleteModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatListModule,\r\n    \r\n    \r\n\r\n    //Our Routes will be here to make code cleaner\r\n    AppRoutingModule,\r\n\r\n    FlexLayoutModule,\r\n\r\n    //Clock         \r\n    OwlDateTimeModule, \r\n    OwlNativeDateTimeModule,\r\n   \r\n  ],\r\n  providers: [\r\n    UserService,\r\n    ConversationService,\r\n    AuthGuard,\r\n    {\r\n      provide :HTTP_INTERCEPTORS,\r\n      useClass : AuthInterceptor,\r\n      multi : true\r\n    }],\r\n  bootstrap: [AppComponent]\r\n})\r\nexport class AppModule { }\r\n","import { UserService } from '../shared/dbAccess/user.service';\r\nimport { Injectable } from '@angular/core';\r\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, Router } from '@angular/router';\r\nimport { Route } from '@angular/compiler/src/core';\r\n\r\n\r\n@Injectable()\r\nexport class AuthGuard implements CanActivate {\r\n\r\n  constructor(private router : Router, private service : UserService){}\r\n\r\n  canActivate():  boolean {\r\n    if ( localStorage.getItem('accessToken') == null ){\r\n          \r\n      return true;\r\n    }\r\n    else{    \r\n      this.router.navigate([\"home\"]) \r\n      return false;\r\n    } \r\n  }\r\n\r\n  canLoad(): boolean {\r\n    if ( localStorage.getItem('accessToken') ){\r\n            \r\n      return true;\r\n    }\r\n    else{    \r\n      this.router.navigate([\"/login\"])   \r\n      return false;\r\n    } \r\n  }\r\n\r\n}\r\n","import { Observable } from 'rxjs';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpUserEvent, HttpEvent } from \"@angular/common/http\";\r\nimport 'rxjs/add/operator/do';\r\nimport { Injectable } from \"@angular/core\";\r\nimport { Router } from \"@angular/router\";\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n\r\n    constructor(private router: Router) { }\r\n\r\n    //Handler: Will intercept any http request going out.\r\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n\r\n        //If the request doesn't need auth; use this.\r\n        //req.headers.get('No-Auth') :  This checks the header of the request\r\n        //next.handle(req.clone()) : clone the whole request and send it\r\n        if (req.headers.get('No-Auth') == \"True\")\r\n            return next.handle(req.clone());\r\n\r\n        //If we do need auth, first if will fail.\r\n        //localStorage.getItem('accessToken') : Will check if there is a token in local storage\r\n        if (localStorage.getItem('accessToken') != null) {\r\n            //Copies request that was caught and adds the authorization\r\n            const clonedreq = req.clone({\r\n                headers: req.headers.set(\"Authorization\", localStorage.getItem('accessToken'))\r\n            });\r\n            //This sends the request that was cloned.\r\n            return next.handle(clonedreq).do(\r\n                //If Successful\r\n                succ => {},\r\n                //If error\r\n                err => {\r\n                    if (err.status === 401)\r\n                        this.router.navigateByUrl('/login');\r\n                }\r\n                );\r\n        }\r\n        //If no token, send user to login.\r\n        else {\r\n            this.router.navigateByUrl('/login');\r\n        }\r\n    }\r\n}","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21lc3Nlbmdlci9tZXNzZW5nZXIvbWVzc2VuZ2VyLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"<p>\\n  messenger works!\\n</p>\\n\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-messenger',\n  templateUrl: './messenger.component.html',\n  styleUrls: ['./messenger.component.css']\n})\nexport class MessengerComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","module.exports = \".container {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    right: 0;\\r\\n    bottom: 0;\\r\\n}\\r\\n\\r\\n.container .mat-drawer {\\r\\n    min-width: 200px;\\r\\n}\\r\\n\\r\\n.container .mat-drawer .mat-button {\\r\\n    display: block;\\r\\n    width: 100%;\\r\\n    text-align: left;\\r\\n}\\r\\n\\r\\n.spacer {\\r\\n    flex: 1 1 auto;\\r\\n}\\r\\n\\r\\n.mat-toolbar-row .mat-button {\\r\\n    background-color: transparent;\\r\\n    font-size: 20px;\\r\\n    \\r\\n}\\r\\n\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbmF2YmFyL25hdmJhci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLE1BQU07SUFDTixPQUFPO0lBQ1AsUUFBUTtJQUNSLFNBQVM7QUFDYjs7QUFFQTtJQUNJLGdCQUFnQjtBQUNwQjs7QUFFQTtJQUNJLGNBQWM7SUFDZCxXQUFXO0lBQ1gsZ0JBQWdCO0FBQ3BCOztBQUVBO0lBQ0ksY0FBYztBQUNsQjs7QUFFQTtJQUNJLDZCQUE2QjtJQUM3QixlQUFlOztBQUVuQiIsImZpbGUiOiJzcmMvYXBwL25hdmJhci9uYXZiYXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5jb250YWluZXIge1xyXG4gICAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gICAgdG9wOiAwO1xyXG4gICAgbGVmdDogMDtcclxuICAgIHJpZ2h0OiAwO1xyXG4gICAgYm90dG9tOiAwO1xyXG59XHJcblxyXG4uY29udGFpbmVyIC5tYXQtZHJhd2VyIHtcclxuICAgIG1pbi13aWR0aDogMjAwcHg7XHJcbn1cclxuXHJcbi5jb250YWluZXIgLm1hdC1kcmF3ZXIgLm1hdC1idXR0b24ge1xyXG4gICAgZGlzcGxheTogYmxvY2s7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIHRleHQtYWxpZ246IGxlZnQ7XHJcbn1cclxuXHJcbi5zcGFjZXIge1xyXG4gICAgZmxleDogMSAxIGF1dG87XHJcbn1cclxuXHJcbi5tYXQtdG9vbGJhci1yb3cgLm1hdC1idXR0b24ge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBmb250LXNpemU6IDIwcHg7XHJcbiAgICBcclxufVxyXG5cclxuIl19 */\"","module.exports = \"<mat-drawer-container class=\\\"container\\\" autosize >\\r\\n  <!-- Will be triggered by (click) = \\\"drawer.toggle()\\\" -->\\r\\n   \\r\\n  <div class=\\\"sidenav-content\\\">\\r\\n      <mat-toolbar color=\\\"primary\\\">\\r\\n          <mat-toolbar-row>\\r\\n              <!-- \\r\\n                drawer.toggle(): will call #drawer and will bring the sidenav into view\\r\\n              -->\\r\\n              <button mat-icon-button (click) = \\\"drawer.toggle()\\\">\\r\\n                      <mat-icon>menu</mat-icon>\\r\\n              </button>\\r\\n              <button mat-button routerLink=\\\"/home\\\">Hunter Collab</button>\\r\\n       \\r\\n              <span class=\\\"spacer\\\"></span>\\r\\n              \\r\\n              <mat-menu #menu=\\\"matMenu\\\" >\\r\\n                \\r\\n              </mat-menu>\\r\\n\\r\\n          </mat-toolbar-row>\\r\\n      </mat-toolbar>\\r\\n      <router-outlet></router-outlet>\\r\\n  </div>\\r\\n  \\r\\n  <mat-drawer #drawer class=\\\"sidenav\\\">\\r\\n          <button mat-menu-item routerLink=\\\"/home\\\">\\r\\n            <mat-icon>home</mat-icon>\\r\\n            <span>Home</span>\\r\\n          </button> \\r\\n\\r\\n          <button mat-menu-item routerLink=\\\"/user\\\">\\r\\n            <mat-icon>person</mat-icon>\\r\\n            <span>Profile</span>\\r\\n          </button> \\r\\n         \\r\\n          <!--\\r\\n            <button mat-menu-item routerLink=\\\"/conversations/messenger\\\" >\\r\\n          -->\\r\\n          <button mat-menu-item routerLink=\\\"/conversations/messenger\\\">\\r\\n              <span>Direct Messages  </span>\\r\\n              <mat-icon>send</mat-icon>\\r\\n          </button> \\r\\n            <!--Collab username goes in the list-->\\r\\n               <mat-list dense>\\r\\n                  <ng-container *ngFor = \\\"let collab of collabData\\\" >\\r\\n                      \\r\\n                        <button mat-menu-item (click)=\\\"getTitle(collab.title)\\\">\\r\\n                          <div routerLink=\\\"/conversations\\\">\\r\\n                            <mat-icon routerLink=\\\"/conversations\\\">group</mat-icon>\\r\\n                            <span  (click)=\\\"groupMessageingPageLink(collab._id.$oid)\\\">{{collab.title}}   \\r\\n                               <mat-icon >control_point</mat-icon>\\r\\n                            </span>                           \\r\\n                          </div>                             \\r\\n                          </button> \\r\\n              \\r\\n                       <mat-list-item *ngFor =\\\"let mem of collab?.members\\\">\\r\\n                            <!--Taking individual user as input to navigate user -->\\r\\n                            <div>\\r\\n                                <button mat-menu-item >\\r\\n                                    <mat-icon (click) = \\\"user(mem)\\\">person</mat-icon>                                     \\r\\n                                        <span (click)=\\\"PersonalmessagePageLink(mem)\\\" >{{extractFirstNameAndLastName(mem)}} </span> \\r\\n                                  </button> \\r\\n                            </div>                   \\r\\n                      </mat-list-item> \\r\\n                 </ng-container> \\r\\n               </mat-list>\\r\\n                <span>----------------------------------</span>\\r\\n               <button mat-menu-item (click)=\\\"logOut()\\\">\\r\\n                  <mat-icon>logout</mat-icon>\\r\\n                  <span>LogOut</span>\\r\\n                </button>          \\r\\n  </mat-drawer>\\r\\n \\r\\n</mat-drawer-container>\\r\\n\\r\\n\\r\\n   \\r\\n\"","import { CollabMessagingComponent } from './../conversations/collab-messaging/collab-messaging.component';\r\nimport { Message } from './../shared/models/message.model';\r\nimport { UserModel } from './../shared/models/user.model';\r\nimport { map, startWith } from 'rxjs/operators';\r\nimport { Observable } from 'rxjs';\r\nimport { FormControl } from '@angular/forms';\r\nimport { UserService } from 'src/app/shared/dbAccess/user.service';\r\nimport { CollabsService } from 'src/app/shared/dbAccess/collabs.service';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { CollabModel } from '../shared/models/collab.model';\r\n\r\n@Component({\r\n  selector: 'app-navbar',\r\n  templateUrl: './navbar.component.html',\r\n  styleUrls: ['./navbar.component.css']\r\n})\r\nexport class NavbarComponent implements OnInit {\r\n  collabData : CollabModel;\r\n  imageToShow:any;\r\n  panelOpenState = false;\r\n  public mem:string = null\r\n  public sender : Message[\"sender\"];\r\n  userdata : UserModel;\r\n  public collabId: string;\r\n  public Title_ : string;\r\n  \r\n  constructor(private router: Router, private collabService : CollabsService, private userservice: UserService) { }\r\n\r\n  ngOnInit() {\r\n    this.collabService.collabDetails().subscribe((collab:CollabModel)=>{\r\n      this.collabData= collab;\r\n      console.log(collab)\r\n    });\r\n    this.userservice.getUserdetails().subscribe((data:any)=>{\r\n        this.userdata=data;\r\n        this.sender=this.userdata.username\r\n    })\r\n  }\r\nextractFirstNameAndLastName(username:string){\r\n  let temp = username.split(\"@\")\r\n  return temp[0]\r\n}\r\n  \r\nGoToHomePage(id:string){\r\n  this.collabId=id;\r\n  console.log(\"Going to Collab page of \"+this.collabId)\r\n  this.router.navigate(['/home'])\r\n}\r\n\r\n\r\nGoToProfile(mem_:any){\r\n  this.mem=mem_\r\n  console.log(\"Going to profile page of \"+this.mem)\r\n  this.router.navigate(['/user'])\r\n  }\r\n\r\ngroupMessageingPageLink(id:string){\r\n    //setting collabId \r\n    this.collabId=id;\r\n    //making member to null, which is parameter of personal message before switching to group messaging\r\n    this.mem=null;\r\n    console.log(\"Going to Group message \"+this.collabId)\r\n    console.log(\"member \"+this.mem)\r\n    \r\n    this.router.navigateByUrl(\"/conversations\")\r\n}\r\nPersonalmessagePageLink(mem:string){\r\n  //setting members of message\r\n  this.mem=mem\r\n  //making collabId null before switching to personal messaging\r\n  this.collabId=null;\r\n  console.log(\"Going to message page of \"+this.mem)\r\n  console.log(\"CollabId \"+this.collabId)\r\n  //location.reload();\r\n  this.router.navigateByUrl(\"/conversations\")\r\n}\r\ngetTitle(title:string){\r\n  this.Title_ = title;\r\n  console.log(\"Showing title \"+this.Title_)\r\n}\r\n\r\nhome(){\r\n  this.router.navigate(['/home']);\r\n}\r\nuser(mem){\r\n  this.router.navigate(['/user/'+mem]);\r\n}\r\n\r\nlogOut(){\r\n  localStorage.removeItem('accessToken');\r\n  this.router.navigate(['/login']);\r\n} \r\n\r\n}\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CollabModel } from '../models/collab.model';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class CollabsService {\r\n\r\n  readonly rootUrl = 'http://13.58.204.157:5000';\r\n  constructor(private http: HttpClient) { }\r\n\r\n  //collab/getCollabDetails\r\n  collabDetails(){ \r\n    return this.http.get( this.rootUrl +\"/collab/getCollabDetails\");\r\n  }\r\n  //collab/getAllCollabs\r\n  allCollabs(): Observable<CollabModel[]> { \r\n    return this.http.get<CollabModel[]>( this.rootUrl +\"/collab/getAllCollabs\");\r\n  }\r\n  //collab/getActiveCollabs \r\n  activeCollabs(){ \r\n    return this.http.get( this.rootUrl +\"/collab/getActiveCollabs\");\r\n  }\r\n  //messaging/myConvos\r\n  myCollabs(){ \r\n    return this.http.get( this.rootUrl +\"/messaging/myConvos\");\r\n  }\r\n\r\n  //Get Both All and My Collabs\r\n  getCollabs(collabType: string){\r\n    return this.http.get( this.rootUrl + \"/collab/\" + collabType);\r\n  }\r\n\r\n  getSingleCollab(_id: string){\r\n    \r\n    const body = {\r\n      id : _id\r\n     }\r\n     \r\n    console.log(body); \r\n    return this.http.post(this.rootUrl + \"/collab/getCollab\", body );\r\n  }\r\n\r\n  //______________POST_REQUEST____________\r\n\r\n  //create a new collab, wehre owner = currentUser\r\n  // size, date, duration, location, title, description, classes and skills are required\r\n  createCollab(collabData: CollabModel) {\r\n\r\n    const body: CollabModel = {\r\n      size : collabData.size,\r\n      date : collabData.date,\r\n      duration : collabData.duration,\r\n      location : collabData.location,\r\n      title: collabData.title,\r\n      description: collabData.description,\r\n      classes: collabData.classes,\r\n      skills: collabData.skills,\r\n    }\r\n    return this.http.post(this.rootUrl + \"/collab/createCollab\", body);\r\n  }\r\n\r\n  //Join Collab\r\n  joinCollab(id){\r\n\r\n    console.log(id[\"$oid\"]);\r\n    const body = {\r\n     id : id[\"$oid\"]\r\n    }\r\n    return this.http.post(this.rootUrl + \"/collab/joinCollab\", body);\r\n  }\r\n\r\n  //Leave Collab\r\n  leaveCollab(id){\r\n\r\n    console.log(id[\"$oid\"]);\r\n    const body = {\r\n     id : id[\"$oid\"]\r\n    }\r\n    return this.http.post(this.rootUrl + \"/collab/leaveCollab\", body);\r\n  }\r\n\r\n  //TODO: Get this http request working\r\n  deleteCollab(id){\r\n\r\n    const body = {\r\n      id : id[\"$oid\"]\r\n    }\r\n    return this.http.request('delete',this.rootUrl + \"/collab/deleteCollabForReal\", {body});\r\n  }\r\n\r\n  //TODO: Get this http request working\r\n  getReqCollabs(classes: string[], skills: string[]){\r\n    console.log(classes);\r\n    console.log(skills);\r\n\r\n    const body = {\r\n      classes : classes,\r\n      skills  : skills\r\n    }\r\n\r\n    return this.http.post(this.rootUrl + \"/collab/getRecommendedCollabs\", body);\r\n  }\r\n\r\n  //Requires a JSON\"_id\"\r\n  editCollab(collabData: CollabModel, id: string){\r\n\r\n      console.log(collabData);\r\n      const body = {\r\n          id : id,\r\n          size : collabData.size,\r\n          date : collabData.date,\r\n          duration : collabData.duration,\r\n          location : collabData.location,\r\n          title: collabData.title,\r\n          description: collabData.description,\r\n          classes: collabData.classes,\r\n          skills: collabData.skills,\r\n          applicants  : collabData.applicants\r\n      }\r\n      return this.http.post(this.rootUrl + \"/collab/editCollab\",body)\r\n  }\r\n\r\n    \r\n    \r\n\r\n\r\n}\r\n\r\n","import { Message } from './../models/message.model';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Injectable } from '@angular/core';\r\nimport { CollabModel } from '../models/collab.model';\r\nimport { Observable } from 'rxjs';\r\nimport { catchError } from 'rxjs/operators';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ConversationService {\r\n\r\n  readonly rootUrl = 'http://13.58.204.157:5000';\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  //send group message to collab group\r\n  sendMessageToCollabGroup(message , collabID){\r\n    const body : Message ={\r\n      message   : message,\r\n      collabId  : collabID\r\n    }\r\n    return this.http.post(this.rootUrl+\"/messaging/sendMessage\",body)\r\n  }\r\n\r\n  //send personal message to collab members\r\n  sendPersonalMessage( message , recipient){\r\n    const body : Message ={\r\n      message   : message,\r\n      recipient : recipient\r\n    }\r\n    console.log(message+\" \"+ recipient)\r\n    return this.http.post(this.rootUrl+\"/messaging/sendMessage\",body)\r\n\r\n  }\r\n\r\n  //return current user conversations\r\n  myCoversations(){ \r\n    return this.http.get( this.rootUrl +\"/messaging/myConvos\");\r\n  }\r\n\r\n  /**\r\n    page should be 0, 1, 2, 3, et cetera.\r\n    If you set page = 0, it will return the latest 20 messages.\r\n    If you set page = 1, it will skip the latest 20 messages and return the next 20 messages.\r\n    If you set page = 2, it will skip the latest 40 messages and return the next 20 messages.\r\n    …. You get the idea.\r\n\r\n    otherUser should be the other user’s username \r\n   */\r\n  LoadOtherUserMessage(page:number, otherUser:string){\r\n    const body={\r\n      page      : page,\r\n      otherUser : otherUser\r\n    }\r\n    return this.http.post(this.rootUrl+\"/messaging/getMessages\",body)\r\n  }\r\n  \r\n  LoadGroupMessage(page:number, CollabId:string){\r\n    const body={\r\n      page      : page,\r\n      collabId  : CollabId\r\n    }\r\n    return this.http.post(this.rootUrl+\"/messaging/getMessages\",body)\r\n  }\r\n\r\n\r\n\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient, HttpHeaders, HttpErrorResponse, HttpParams } from '@angular/common/http';\r\nimport { UserModel } from '../models/user.model';\r\nimport 'rxjs/add/operator/map';\r\nimport { Observable } from 'rxjs';\r\nimport { Requirements } from 'src/app/home/collab-card/collab-card.component';\r\n\r\n\r\n@Injectable()\r\nexport class UserService {\r\n  readonly rootUrl = 'http://13.58.204.157:5000';\r\n  constructor(private http: HttpClient) { }\r\n  \r\n  getToken(){\r\n    return localStorage.getItem('accessToken')\r\n  }\r\n\r\n  //\"/user?username=\"+UserName+\"&password=\"password\r\n  userAuthentication(userName: string, password: string) {\r\n    var reqHeader = new HttpHeaders({'No-Auth':'True'});\r\n    return this.http.get(this.rootUrl +\"/auth/login?\"+\"username=\"+userName+\"&password=\"+password, {headers : reqHeader});\r\n  }\r\n\r\n  registerUser(username, password ) {\r\n    const body: UserModel = {\r\n      username: username,\r\n      password: password,\r\n    }\r\n\r\n    //This request does not need authorization \r\n    var reqHeader = new HttpHeaders({'No-Auth':'True'});\r\n\r\n    //Adding Parameters\r\n    var requestedUrl = this.rootUrl + \"/user?username=\"+username+\"&password=\"+password;\r\n\r\n    //Testing url \r\n    console.log(requestedUrl);\r\n\r\n    //requestUrl: endpoint\r\n    //body: Needed, but not used\r\n    //{headers : reqHeader} : Creating object from the header library; set to non-auth \r\n    return this.http.put(requestedUrl , body, {headers : reqHeader});\r\n  }\r\n\r\n  public isAuthenticated() : boolean {\r\n    return localStorage.getItem('accessToken') !== null;\r\n  }\r\n //url + json authentication\r\n getUserdetails(): Observable<UserModel> {\r\n  return this.http.get<UserModel>( this.rootUrl +\"/user\");\r\n  }\r\n\r\n  getMemberdetails(username: string): Observable<UserModel> {\r\n    return this.http.get<UserModel>( this.rootUrl +\"/user/\" + username);\r\n  }\r\n\r\n  \r\n\r\n  getUserSkills(userName: string) { \r\n    return this.http.get( this.rootUrl + \"/user/skills/\" + userName).toPromise();\r\n  }\r\n\r\n  getUserClasses(userName: string){ \r\n    return this.http.get( this.rootUrl +\"/user/classes/\" + userName).toPromise();\r\n  }\r\n\r\n  async getUserSkillsAndClasses(username: string){\r\n    \r\n    let xAxisReq: Array<string> = [];\r\n    let classes: string[];\r\n    let skills: string[];\r\n\r\n    await this.getUserSkills(username).then(function(result){\r\n      xAxisReq = result[\"skills\"];\r\n    });\r\n\r\n    await this.getUserClasses(username).then(function(result){\r\n      classes = result[\"classes\"];\r\n    });\r\n    \r\n    \r\n    /*\r\n    for(let classTaken of classes){\r\n        xAxisReq.push({\r\n        skillOrClass: classTaken,\r\n        type: \"class\"\r\n      });\r\n    \r\n    for(let skill of skills){\r\n      xAxisReq.push({\r\n      skillOrClass: skill,\r\n      type: \"skill\"\r\n    });\r\n  }\r\n  */\r\n\r\n    return xAxisReq;\r\n  }\r\n\r\nsearchSkills(constrain: string): Observable<any>{\r\n  let params = new HttpParams().set(\"query\",constrain);\r\n  return this.http.get(this.rootUrl +\"/search/skills\",{params: params});\r\n}\r\n\r\nsearchClasses(constrain: string): Observable<any>{\r\n  let params = new HttpParams().set(\"query\",constrain);\r\n  return this.http.get(this.rootUrl +\"/search/classes\",{params: params});\r\n}\r\n\r\n\r\n//___________POST_________________\r\n\r\n\r\n\r\n//download profile-picture as Bold file\r\ngetPicture(): Observable <Blob>{\r\n  // user/profilePicture\r\n  return this.http.get( this.rootUrl +\"/user/profilePicture\",  { responseType: 'blob' });\r\n}\r\n\r\ngetMemberPicture(username: string): Observable <Blob>{\r\n  console.log(username);\r\n  // user/profilePicture\r\n  return this.http.get( this.rootUrl +\"/user/profilePicture?username=\" + username,  { responseType: 'blob' });\r\n}\r\n\r\nuploadProfilePicture(fileToUpload: File){\r\n  const formData: FormData = new FormData();\r\n  formData.append('pic', fileToUpload, fileToUpload.name);\r\n  return this.http.post(this.rootUrl+\"/user/profilePicture\", formData)\r\n}\r\n\r\n// /collab/deleteCollab \r\n///collab/getRecommendedCollab\r\n\r\n  //___________POST_________________\r\n\r\n//you can update user profile taking all these as input but \"Not required\"\r\nupdateUserProfile(userData: UserModel){\r\n  const body : UserModel ={\r\n    name : userData.username,\r\n    github  : userData.github,\r\n    linkedin: userData.linkedin,\r\n  }\r\n  return this.http.post(this.rootUrl +\"/user\", body)\r\n}\r\n\r\nupdateUserSkills(skills){\r\n  const body : UserModel ={\r\n    skills  :skills,\r\n    \r\n  }\r\n  console.log(body)\r\n  return this.http.post(this.rootUrl +\"/user\", body)\r\n}\r\nupdateUserclass(classes){\r\n  const body : UserModel ={\r\n    classes:classes\r\n  }\r\n  console.log(body)\r\n  return this.http.post(this.rootUrl +\"/user\", body)\r\n\r\n}\r\n\r\n\r\n\r\n\r\n}\r\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":""}